import { OrganizationSprint } from "../organizationSprint/OrganizationSprint";
import { OrganizationProject } from "../organizationProject/OrganizationProject";
import { Organization } from "../organization/Organization";
import { User } from "../user/User";
import { Tenant } from "../tenant/Tenant";
import { Activity } from "../activity/Activity";
import { EmployeeTasksTask } from "../employeeTasksTask/EmployeeTasksTask";
import { InvoiceItem } from "../invoiceItem/InvoiceItem";
import { KeyResult } from "../keyResult/KeyResult";
import { OrganizationTeamTasksTask } from "../organizationTeamTasksTask/OrganizationTeamTasksTask";
import { TagTask } from "../tagTask/TagTask";
import { TaskEmployee } from "../taskEmployee/TaskEmployee";
import { TaskLinkedIssue } from "../taskLinkedIssue/TaskLinkedIssue";
import { TaskTeam } from "../taskTeam/TaskTeam";
import { TimeLog } from "../timeLog/TimeLog";

export type Task = {
  id: string;
  createdAt: Date;
  updatedAt: Date;
  title: string;
  description: string | null;
  status: string | null;
  estimate: number | null;
  dueDate: Date | null;
  numberField: number | null;
  prefix: string | null;
  priority: string | null;
  size: string | null;
  publicField: boolean | null;
  startDate: Date | null;
  resolvedAt: Date | null;
  version: string | null;
  issueType: string | null;
  organizationSprint?: OrganizationSprint | null;
  organizationProject?: OrganizationProject | null;
  organization?: Organization | null;
  task?: Task | null;
  user?: User | null;
  tenant?: Tenant | null;
  activity?: Array<Activity>;
  employeeTasksTask?: Array<EmployeeTasksTask>;
  invoiceItem?: Array<InvoiceItem>;
  keyResult?: Array<KeyResult>;
  organizationTeamTasksTask?: Array<OrganizationTeamTasksTask>;
  tagTask?: Array<TagTask>;
  otherTask?: Array<Task>;
  taskEmployee?: Array<TaskEmployee>;
  taskLinkedIssuesTaskLinkedIssuesTaskToIdTotask?: Array<TaskLinkedIssue>;
  taskLinkedIssuesTaskLinkedIssuesTaskFromIdTotask?: Array<TaskLinkedIssue>;
  taskTeam?: Array<TaskTeam>;
  timeLog?: Array<TimeLog>;
};
