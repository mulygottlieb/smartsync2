datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model AccountingTemplate {
  id             String        @id(map: "PK_3f809b792278e11e4aca7959074") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt      DateTime      @default(now()) @db.Timestamp(6)
  updatedAt      DateTime      @default(now()) @db.Timestamp(6)
  name           String        @db.VarChar
  languageCode   String        @db.VarChar
  mjml           String?
  hbs            String        @db.VarChar
  templateType   String        @db.VarChar
  tenant         Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId       String?
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?

  @@index([tenantId], map: "IDX_2ca6a49062a4ed884e413bf572")
  @@index([name], map: "IDX_968c1c9a131a61a3720b3a72f6")
  @@index([languageCode], map: "IDX_a841eabc6b656c965d8846223e")
  @@index([organizationId], map: "IDX_e66511b175393255c6c4e7b007")
  @@map("accounting_template")
}

model Activity {
  id                  String               @id(map: "PK_24625a1d6b1b089c8ae206fe467") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt           DateTime             @default(now()) @db.Timestamp(6)
  updatedAt           DateTime             @default(now()) @db.Timestamp(6)
  title               String?              @db.VarChar
  description         String?              @db.VarChar
  metaData            Json?                @db.Json
  date                DateTime             @default(now()) @db.Date
  time                DateTime             @default(now()) @db.Time(6)
  duration            Int                  @default(0)
  typeField           String?              @map("type") @db.VarChar
  source              String               @default("BROWSER") @db.VarChar
  deletedAt           DateTime?            @db.Timestamp(6)
  recordedAt          DateTime?            @db.Timestamp(6)
  task                Task?                @relation(fields: [taskId], references: [id])
  taskId              String?
  timeSlot            TimeSlot?            @relation(fields: [timeSlotId], references: [id])
  timeSlotId          String?
  organizationProject OrganizationProject? @relation(fields: [projectId], references: [id])
  projectId           String?
  employee            Employee             @relation(fields: [employeeId], references: [id])
  employeeId          String
  tenant              Tenant?              @relation(fields: [tenantId], references: [id])
  tenantId            String?
  organization        Organization?        @relation(fields: [organizationId], references: [id])
  organizationId      String?

  @@index([source], map: "IDX_0e36a2c95e2f1df7f1b3059d24")
  @@index([taskId], map: "IDX_2743f8990fde12f9586287eb09")
  @@index([date], map: "IDX_302b60a4970ffe94d5223f1c23")
  @@index([timeSlotId], map: "IDX_4e382caaf07ab0923b2e06bf91")
  @@index([projectId], map: "IDX_5a898f44fa31ef7916f0c38b01")
  @@index([title], map: "IDX_a28a1682ea80f10d1ecc7babaa")
  @@index([employeeId], map: "IDX_a6f74ae99d549932391f0f4460")
  @@index([time], map: "IDX_b5525385e85f7429e233d4a0fa")
  @@index([tenantId], map: "IDX_f2401d8fdff5d8970dfe30d3ae")
  @@index([typeField], map: "IDX_f27285af15ef48363745ab2d79")
  @@index([organizationId], map: "IDX_fdb3f018c2bba4885bfa5757d1")
  @@index([recordedAt], map: "IDX_ffd736f18ba71b3221e4f835a9")
  @@map("activity")
}

model AppointmentEmployee {
  id                    String               @id(map: "PK_cad339a11ed0408e417671162fb") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt             DateTime             @default(now()) @db.Timestamp(6)
  updatedAt             DateTime             @default(now()) @db.Timestamp(6)
  appointmentId         String               @db.VarChar
  employee              Employee             @relation(fields: [employeeId], references: [id])
  employeeId            String
  tenant                Tenant?              @relation(fields: [tenantId], references: [id])
  tenantId              String?
  organization          Organization?        @relation(fields: [organizationId], references: [id])
  organizationId        String?
  employeeAppointment   EmployeeAppointment? @relation(fields: [employeeAppointmentId], references: [id])
  employeeAppointmentId String?

  @@index([employeeId], map: "IDX_0ddc50b7521b9a905d9ca8c8ba")
  @@index([tenantId], map: "IDX_2c0494466d5a7e1165cea3dca9")
  @@index([organizationId], map: "IDX_3c3a62226896345c4716bfe1d9")
  @@index([employeeAppointmentId], map: "IDX_e9ca170a0fae05e44a9bd137d8")
  @@map("appointment_employee")
}

model ApprovalPolicy {
  id              String            @id(map: "PK_06da9549a940994965e137d4b8a") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt       DateTime          @default(now()) @db.Timestamp(6)
  updatedAt       DateTime          @default(now()) @db.Timestamp(6)
  name            String            @db.VarChar
  description     String?           @db.VarChar
  approvalType    String?           @db.VarChar
  tenant          Tenant?           @relation(fields: [tenantId], references: [id])
  tenantId        String?
  organization    Organization?     @relation(fields: [organizationId], references: [id])
  organizationId  String?
  requestApproval RequestApproval[]

  @@index([tenantId], map: "IDX_1462391059ebe137645098d727")
  @@index([name], map: "IDX_45f32a5a12d42fba17fe62a279")
  @@index([organizationId], map: "IDX_dfe3b357df3ce136917b1f0984")
  @@map("approval_policy")
}

model AvailabilitySlot {
  id             String        @id(map: "PK_62a782c29fd83da5ba7c4ea55f7") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt      DateTime      @default(now()) @db.Timestamp(6)
  updatedAt      DateTime      @default(now()) @db.Timestamp(6)
  startTime      DateTime      @db.Timestamp(6)
  endTime        DateTime      @db.Timestamp(6)
  allDay         Boolean
  typeField      String?       @map("type")
  employee       Employee?     @relation(fields: [employeeId], references: [id])
  employeeId     String?
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?
  tenant         Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId       String?

  @@index([employeeId], map: "IDX_46ed3c2287423f5dc089100fee")
  @@index([organizationId], map: "IDX_d544bd3a63634a4438509ac958")
  @@index([tenantId], map: "IDX_f008a481cb4eed547704bb9d83")
  @@map("availability_slot")
}

model Candidate {
  id                      String                    @id(map: "PK_b0ddec158a9a60fbc785281581b") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt               DateTime                  @default(now()) @db.Timestamp(6)
  updatedAt               DateTime                  @default(now()) @db.Timestamp(6)
  rating                  Decimal?                  @db.Decimal
  valueDate               DateTime?                 @db.Timestamp(6)
  appliedDate             DateTime?                 @db.Timestamp(6)
  hiredDate               DateTime?                 @db.Timestamp(6)
  status                  String?                   @default("APPLIED") @db.VarChar
  rejectDate              DateTime?                 @db.Timestamp(6)
  candidateLevel          String?                   @db.VarChar(500)
  reWeeklyLimit           Int?
  billRateCurrency        String?                   @db.VarChar(255)
  billRateValue           Int?
  payPeriod               String?                   @db.VarChar
  cvUrl                   String?                   @db.VarChar
  isArchived              Boolean?                  @default(false)
  minimumBillingRate      Int?
  organization            Organization?             @relation(fields: [organizationId], references: [id])
  organizationId          String?
  organizationPosition    OrganizationPosition?     @relation(fields: [organizationPositionId], references: [id])
  organizationPositionId  String?
  user                    User                      @relation(fields: [userId], references: [id])
  userId                  String                    @unique
  candidateSource         CandidateSource?          @relation(fields: [sourceId], references: [id])
  sourceId                String?                   @unique
  tenant                  Tenant?                   @relation(fields: [tenantId], references: [id])
  tenantId                String?
  employee                Employee?                 @relation(fields: [employeeId], references: [id])
  employeeId              String?                   @unique
  contact                 Contact?                  @relation(fields: [contactId], references: [id])
  contactId               String?                   @unique
  candidateDepartment     CandidateDepartment[]
  candidateDocument       CandidateDocument[]
  candidateEducation      CandidateEducation[]
  candidateEmploymentType CandidateEmploymentType[]
  candidateExperience     CandidateExperience[]
  candidateFeedback       CandidateFeedback[]
  candidateInterview      CandidateInterview[]
  candidateSkill          CandidateSkill[]
  tagCandidate            TagCandidate[]

  @@index([organizationId], map: "IDX_16fb27ffd1a99c6506c92ad57a")
  @@index([organizationPositionId], map: "IDX_1e3e8228e7df634fa4cec6322c")
  @@index([userId], map: "IDX_3930aa71e0fa24f09201811b1b")
  @@index([sourceId], map: "IDX_4ea108fd8b089237964d5f98fb")
  @@index([tenantId], map: "IDX_77ac426e04553ff1654421bce4")
  @@index([employeeId], map: "IDX_8b900e8a39f76125e610ab30c0")
  @@index([contactId], map: "IDX_b674793a804b7d69d74c8f6c5b")
  @@map("candidate")
}

model CandidateCriterionRating {
  id                       String                    @id(map: "PK_c6a80c50a9f4b0b45f2ace048a2") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                DateTime                  @default(now()) @db.Timestamp(6)
  updatedAt                DateTime                  @default(now()) @db.Timestamp(6)
  rating                   Int
  candidateFeedback        CandidateFeedback?        @relation(fields: [feedbackId], references: [id])
  feedbackId               String?
  tenant                   Tenant?                   @relation(fields: [tenantId], references: [id])
  tenantId                 String?
  organization             Organization?             @relation(fields: [organizationId], references: [id])
  organizationId           String?
  candidatePersonalQuality CandidatePersonalQuality? @relation(fields: [personalQualityId], references: [id])
  personalQualityId        String?
  candidateTechnology      CandidateTechnology?      @relation(fields: [technologyId], references: [id])
  technologyId             String?

  @@index([feedbackId], map: "IDX_159f821dd214792f1d2ad9cff7")
  @@index([tenantId], map: "IDX_9d5bd131452ef689df2b46551b")
  @@index([organizationId], map: "IDX_b106406e94bb7317493efc2c98")
  @@index([personalQualityId], map: "IDX_ba4c376b2069aa82745d4e9682")
  @@index([technologyId], map: "IDX_d1d16bc87d3afaf387f34cdceb")
  @@map("candidate_criterion_rating")
}

model CandidateDepartment {
  organizationDepartment   OrganizationDepartment @relation(fields: [organizationDepartmentId], references: [id])
  organizationDepartmentId String
  candidate                Candidate              @relation(fields: [candidateId], references: [id])
  candidateId              String
  id                       String                 @id @default(cuid())

  @@unique([organizationDepartmentId, candidateId], map: "PK_7ede19649b8d15a8bb9a0a71d3e")
  @@index([organizationDepartmentId], map: "IDX_c58533f9ba63f42fef682e1ee7")
  @@index([candidateId], map: "IDX_ef6e8d34b95dcb2b21d5de08a6")
  @@map("candidate_department")
}

model CandidateDocument {
  id             String        @id(map: "PK_97c576e8d22b564ceb372da93e9") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt      DateTime      @default(now()) @db.Timestamp(6)
  updatedAt      DateTime      @default(now()) @db.Timestamp(6)
  name           String        @db.VarChar
  documentUrl    String?       @db.VarChar
  candidate      Candidate?    @relation(fields: [candidateId], references: [id])
  candidateId    String?
  tenant         Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId       String?
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?

  @@index([candidateId], map: "IDX_3f9053719c9d11ebdea03e5a2d")
  @@index([tenantId], map: "IDX_4d9b7ab09f9f9517d488b5fed1")
  @@index([organizationId], map: "IDX_d108a827199fda86a9ec216989")
  @@map("candidate_document")
}

model CandidateEducation {
  id             String        @id(map: "PK_86bda616ec3ad179c94236988fd") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt      DateTime      @default(now()) @db.Timestamp(6)
  updatedAt      DateTime      @default(now()) @db.Timestamp(6)
  schoolName     String        @db.VarChar
  degree         String        @db.VarChar
  field          String        @db.VarChar
  completionDate DateTime      @db.Timestamp(6)
  notes          String?       @db.VarChar
  tenant         Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId       String?
  candidate      Candidate?    @relation(fields: [candidateId], references: [id])
  candidateId    String?
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?

  @@index([tenantId], map: "IDX_00cdd9ed7571be8e2c8d09e7cd")
  @@index([organizationId], map: "IDX_f660af89b2c69fea2334508cbb")
  @@map("candidate_education")
}

model CandidateEmploymentType {
  candidate                    Candidate                  @relation(fields: [candidateId], references: [id])
  candidateId                  String
  organizationEmploymentType   OrganizationEmploymentType @relation(fields: [organizationEmploymentTypeId], references: [id])
  organizationEmploymentTypeId String
  id                           String                     @id @default(cuid())

  @@unique([organizationEmploymentTypeId, candidateId], map: "PK_b0abb88844cd9cd80a3d3d188e7")
  @@index([candidateId], map: "IDX_8c5db3a96baffba025729ebe86")
  @@index([organizationEmploymentTypeId], map: "IDX_b4b51067c538f78b8585ef2a17")
  @@map("candidate_employment_type")
}

model CandidateExperience {
  id             String        @id(map: "PK_dd2f56a39a8ba6815ce7a55a972") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt      DateTime      @default(now()) @db.Timestamp(6)
  updatedAt      DateTime      @default(now()) @db.Timestamp(6)
  occupation     String        @db.VarChar
  duration       String        @db.VarChar
  description    String?       @db.VarChar
  tenant         Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId       String?
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?
  candidate      Candidate?    @relation(fields: [candidateId], references: [id])
  candidateId    String?

  @@index([tenantId], map: "IDX_8dcf5fc8bc7f77a80b0fc648bf")
  @@index([organizationId], map: "IDX_a50eb955f940ca93e044d175c6")
  @@map("candidate_experience")
}

model CandidateFeedback {
  id                       String                       @id(map: "PK_3e73b147b36271621a6032991be") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                DateTime                     @default(now()) @db.Timestamp(6)
  updatedAt                DateTime                     @default(now()) @db.Timestamp(6)
  description              String?                      @db.VarChar
  rating                   Decimal?                     @db.Decimal
  status                   EnumCandidateFeedbackStatus?
  candidateInterview       CandidateInterview?          @relation(fields: [interviewId], references: [id])
  interviewId              String?
  organization             Organization?                @relation(fields: [organizationId], references: [id])
  organizationId           String?
  candidateInterviewer     CandidateInterviewer?        @relation(fields: [interviewerId], references: [id])
  interviewerId            String?                      @unique
  tenant                   Tenant?                      @relation(fields: [tenantId], references: [id])
  tenantId                 String?
  candidate                Candidate?                   @relation(fields: [candidateId], references: [id])
  candidateId              String?
  candidateCriterionRating CandidateCriterionRating[]

  @@index([interviewId], map: "IDX_0862c274d336126b951bfe009a")
  @@index([organizationId], map: "IDX_3a6928f8501fce33820721a8fe")
  @@index([tenantId], map: "IDX_6cb21fa0f65ff69679966c836f")
  @@index([candidateId], map: "IDX_98c008fd8cf597e83dcdccfd16")
  @@map("candidate_feedback")
}

model CandidateInterview {
  id                       String                     @id(map: "PK_32f8103810c6b4e86374dc6bec5") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                DateTime                   @default(now()) @db.Timestamp(6)
  updatedAt                DateTime                   @default(now()) @db.Timestamp(6)
  title                    String                     @db.VarChar
  startTime                DateTime?                  @db.Timestamp(6)
  endTime                  DateTime?                  @db.Timestamp(6)
  location                 String?                    @db.VarChar
  note                     String?                    @db.VarChar
  isArchived               Boolean?                   @default(false)
  rating                   Decimal?                   @db.Decimal
  organization             Organization?              @relation(fields: [organizationId], references: [id])
  organizationId           String?
  tenant                   Tenant?                    @relation(fields: [tenantId], references: [id])
  tenantId                 String?
  candidate                Candidate?                 @relation(fields: [candidateId], references: [id])
  candidateId              String?
  candidateFeedback        CandidateFeedback[]
  candidateInterviewer     CandidateInterviewer[]
  candidatePersonalQuality CandidatePersonalQuality[]
  candidateTechnology      CandidateTechnology[]

  @@index([organizationId], map: "IDX_03be41e88b1fecfe4e24d6b04b")
  @@index([tenantId], map: "IDX_59b765e6d13d83dba4852a43eb")
  @@index([candidateId], map: "IDX_91996439c4baafee8395d3df15")
  @@map("candidate_interview")
}

model CandidateInterviewer {
  id                 String             @id(map: "PK_bd07efbbc894c53f1d12b93741f") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt          DateTime           @default(now()) @db.Timestamp(6)
  updatedAt          DateTime           @default(now()) @db.Timestamp(6)
  organization       Organization?      @relation(fields: [organizationId], references: [id])
  organizationId     String?
  employee           Employee?          @relation(fields: [employeeId], references: [id])
  employeeId         String?
  candidateInterview CandidateInterview @relation(fields: [interviewId], references: [id])
  interviewId        String
  tenant             Tenant?            @relation(fields: [tenantId], references: [id])
  tenantId           String?
  candidateFeedback  CandidateFeedback?

  @@index([organizationId], map: "IDX_5f1e315db848990dfffa72817c")
  @@index([employeeId], map: "IDX_9e7b20eb3dfa082b83b198fdad")
  @@index([interviewId], map: "IDX_ecb65075e94b47bbab11cfa5a1")
  @@index([tenantId], map: "IDX_f0ca69c78eea92c95d9044764a")
  @@map("candidate_interviewer")
}

model CandidatePersonalQuality {
  id                       String                     @id(map: "PK_0762fd16d1bc85292d19c08f0ec") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                DateTime                   @default(now()) @db.Timestamp(6)
  updatedAt                DateTime                   @default(now()) @db.Timestamp(6)
  name                     String                     @db.VarChar
  rating                   Decimal?                   @db.Decimal
  tenant                   Tenant?                    @relation(fields: [tenantId], references: [id])
  tenantId                 String?
  candidateInterview       CandidateInterview?        @relation(fields: [interviewId], references: [id])
  interviewId              String?
  organization             Organization?              @relation(fields: [organizationId], references: [id])
  organizationId           String?
  candidateCriterionRating CandidateCriterionRating[]

  @@index([tenantId], map: "IDX_045de7c208adcd0c68c0a65174")
  @@index([interviewId], map: "IDX_a0d171f45bdbcf2b990c0c37c3")
  @@index([organizationId], map: "IDX_d321f4547ed467d07cce1e7d9a")
  @@map("candidate_personal_quality")
}

model CandidateSkill {
  id             String        @id(map: "PK_e76869bb2d719ece3daefccc53a") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt      DateTime      @default(now()) @db.Timestamp(6)
  updatedAt      DateTime      @default(now()) @db.Timestamp(6)
  name           String        @db.VarChar
  candidate      Candidate?    @relation(fields: [candidateId], references: [id])
  candidateId    String?
  tenant         Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId       String?
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?

  @@index([tenantId], map: "IDX_8a07f780c6fce2b82830ab0687")
  @@index([organizationId], map: "IDX_d7986743e7f11720349a6c9557")
  @@map("candidate_skill")
}

model CandidateSource {
  id             String        @id(map: "PK_b4fef4d5e6a7ab89a8dc2ab31ac") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt      DateTime      @default(now()) @db.Timestamp(6)
  updatedAt      DateTime      @default(now()) @db.Timestamp(6)
  name           String        @db.VarChar
  tenant         Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId       String?
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?
  candidate      Candidate?

  @@index([tenantId], map: "IDX_b2a1ba27a76dd819cd8294cce3")
  @@index([organizationId], map: "IDX_e92027b5280828cadd7cd6ea71")
  @@map("candidate_source")
}

model CandidateTechnology {
  id                       String                     @id(map: "PK_63d3343775ef318c0e00f3fada7") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                DateTime                   @default(now()) @db.Timestamp(6)
  updatedAt                DateTime                   @default(now()) @db.Timestamp(6)
  name                     String                     @db.VarChar
  rating                   Decimal?                   @db.Decimal
  candidateInterview       CandidateInterview?        @relation(fields: [interviewId], references: [id])
  interviewId              String?
  organization             Organization?              @relation(fields: [organizationId], references: [id])
  organizationId           String?
  tenant                   Tenant?                    @relation(fields: [tenantId], references: [id])
  tenantId                 String?
  candidateCriterionRating CandidateCriterionRating[]

  @@index([interviewId], map: "IDX_063663c7e61e45d172d1b83265")
  @@index([organizationId], map: "IDX_9d46b8c5382acd4d4514bc5c62")
  @@index([tenantId], map: "IDX_a6fecb615b07987b480defac64")
  @@map("candidate_technology")
}

model Changelog {
  id             String        @id(map: "PK_9d12e70193212a9f6d2c542433d") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt      DateTime      @default(now()) @db.Timestamp(6)
  updatedAt      DateTime      @default(now()) @db.Timestamp(6)
  icon           String?       @db.VarChar
  title          String?       @db.VarChar
  date           DateTime      @db.Timestamp(6)
  content        String        @db.VarChar
  learnMoreUrl   String?       @db.VarChar
  isFeature      Boolean?
  imageUrl       String?       @db.VarChar
  tenant         Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId       String?
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?

  @@index([tenantId], map: "IDX_744268ee0ec6073883267bc3b6")
  @@index([organizationId], map: "IDX_c2037b621d2e8023898aee4ac7")
  @@map("changelog")
}

model Contact {
  id                                              String               @id(map: "PK_2cbbe00f59ab6b3bb5b8d19f989") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                                       DateTime             @default(now()) @db.Timestamp(6)
  updatedAt                                       DateTime             @default(now()) @db.Timestamp(6)
  name                                            String?              @db.VarChar
  firstName                                       String?              @db.VarChar
  lastName                                        String?              @db.VarChar
  country                                         String?              @db.VarChar
  city                                            String?              @db.VarChar
  address                                         String?              @db.VarChar
  address2                                        String?              @db.VarChar
  postcode                                        String?              @db.VarChar
  regionCode                                      String?              @db.VarChar
  fax                                             String?              @db.VarChar
  fiscalInformation                               String?              @db.VarChar
  website                                         String?              @db.VarChar
  latitude                                        Decimal?             @db.Decimal
  longitude                                       Decimal?             @db.Decimal
  tenant                                          Tenant?              @relation(fields: [tenantId], references: [id])
  tenantId                                        String?
  organizationContactOrganizationIdToorganization Organization?        @relation(name: "contactContactOrganizationIdToorganization", fields: [organizationId], references: [id])
  organizationId                                  String?
  organizationOrganizationContactIdTocontact      Organization[]       @relation(name: "contactOrganizationContactIdTocontact")
  candidate                                       Candidate?
  employee                                        Employee?
  merchant                                        Merchant?
  organizationContact                             OrganizationContact?
  warehouse                                       Warehouse?

  @@index([tenantId], map: "IDX_60468af1ce34043a900809c84f")
  @@index([organizationId], map: "IDX_7719d73cd16a9f57ecc6ac24b3")
  @@map("contact")
}

model Country {
  id        String   @id(map: "PK_bf6e37c231c4f4ea56dcd887269") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @default(now()) @db.Timestamp(6)
  isoCode   String   @db.VarChar
  country   String   @db.VarChar

  @@index([isoCode], map: "IDX_6eba1a52ee121d100c8a0a6510")
  @@map("country")
}

model Currency {
  id        String   @id(map: "PK_3cda65c731a6264f0e444cc9b91") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @default(now()) @db.Timestamp(6)
  isoCode   String   @db.VarChar
  currency  String   @db.VarChar

  @@index([isoCode], map: "IDX_0b0fbda74f6c82c943e706a3cc")
  @@map("currency")
}

model CustomSmtp {
  id             String        @id(map: "PK_1f4efe1edc0cc9cb2261584b335") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt      DateTime      @default(now()) @db.Timestamp(6)
  updatedAt      DateTime      @default(now()) @db.Timestamp(6)
  host           String        @db.VarChar
  port           Int
  secure         Boolean
  username       String        @db.VarChar
  password       String        @db.VarChar
  isValidate     Boolean       @default(false)
  fromAddress    String?       @db.VarChar
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?
  tenant         Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId       String?

  @@index([organizationId], map: "IDX_15a1306132d66c63ef31f7288c")
  @@index([tenantId], map: "IDX_2aa3fc8daa25beec4788d2be26")
  @@map("custom_smtp")
}

model Deal {
  id                  String               @id(map: "PK_9ce1c24acace60f6d7dc7a7189e") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt           DateTime             @default(now()) @db.Timestamp(6)
  updatedAt           DateTime             @default(now()) @db.Timestamp(6)
  title               String               @db.VarChar
  probability         Int
  organizationContact OrganizationContact? @relation(fields: [clientId], references: [id])
  clientId            String?              @unique
  organization        Organization?        @relation(fields: [organizationId], references: [id])
  organizationId      String?
  tenant              Tenant?              @relation(fields: [tenantId], references: [id])
  tenantId            String?
  user                User                 @relation(fields: [createdByUserId], references: [id])
  createdByUserId     String
  pipelineStage       PipelineStage        @relation(fields: [stageId], references: [id])
  stageId             String

  @@index([organizationId], map: "IDX_38fb85abdf9995efcf217f5955")
  @@index([tenantId], map: "IDX_46a3c00bfc3e36b4412d8bcdb0")
  @@index([createdByUserId], map: "IDX_4b1ff44e6bae5065429dbab554")
  @@index([stageId], map: "IDX_9211f5b62988df6e95522be7da")
  @@map("deal")
}

model EmailReset {
  id        String    @id(map: "PK_c7cc1d8ec099867c393d29adafb") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime  @default(now()) @db.Timestamp(6)
  updatedAt DateTime  @default(now()) @db.Timestamp(6)
  email     String    @db.VarChar
  oldEmail  String    @db.VarChar
  code      Int
  token     String?   @db.VarChar
  expiredAt DateTime? @db.Timestamp(6)
  tenant    Tenant?   @relation(fields: [tenantId], references: [id])
  tenantId  String?
  user      User?     @relation(fields: [userId], references: [id])
  userId    String?

  @@index([email], map: "IDX_03d16a2fd43d7c601743440212")
  @@index([token], map: "IDX_4ac734f2a1a3c055dca04fba99")
  @@index([oldEmail], map: "IDX_4be518a169bbcbfe92025ac574")
  @@index([tenantId], map: "IDX_93799dfaeff51de06f1e02ac41")
  @@index([code], map: "IDX_9e80c9ec749dfda6dbe2cd9704")
  @@index([userId], map: "IDX_e37af4ab2ba0bf268bfd982634")
  @@map("email_reset")
}

model EmailSent {
  id              String        @id(map: "PK_54f534a4ca70e28c8236514045c") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt       DateTime      @default(now()) @db.Timestamp(6)
  updatedAt       DateTime      @default(now()) @db.Timestamp(6)
  name            String?       @db.VarChar
  content         String?       @db.VarChar
  email           String        @db.VarChar
  isArchived      Boolean?      @default(false)
  tenant          Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId        String?
  user            User?         @relation(fields: [userId], references: [id])
  userId          String?
  organization    Organization? @relation(fields: [organizationId], references: [id])
  organizationId  String?
  emailTemplate   EmailTemplate @relation(fields: [emailTemplateId], references: [id])
  emailTemplateId String

  @@index([tenantId], map: "IDX_0af511c44de7a16beb45cc3785")
  @@index([userId], map: "IDX_1261c457b3035b77719556995b")
  @@index([organizationId], map: "IDX_525f4873c6edc3d94559f88900")
  @@index([name], map: "IDX_953df0eb0df3035baf140399f6")
  @@index([email], map: "IDX_a954fda57cca81dc48446e73b8")
  @@map("email_sent")
}

model EmailTemplate {
  id             String        @id(map: "PK_c90815fd4ca9119f19462207710") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt      DateTime      @default(now()) @db.Timestamp(6)
  updatedAt      DateTime      @default(now()) @db.Timestamp(6)
  name           String        @db.VarChar
  languageCode   String        @db.VarChar
  mjml           String?
  hbs            String        @db.VarChar
  tenant         Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId       String?
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?
  emailSent      EmailSent[]

  @@index([name], map: "IDX_274708db64fcce5448f2c4541c")
  @@index([tenantId], map: "IDX_753e005a45556b5909e11937aa")
  @@index([languageCode], map: "IDX_7e688e6613930ba721b841db43")
  @@index([organizationId], map: "IDX_c160fe6234675fac031aa3e7c5")
  @@map("email_template")
}

model Employee {
  employeeUpworkJobSearchCriterion    EmployeeUpworkJobSearchCriterion[]
  endWork                             DateTime?                            @db.Timestamp(6)
  equipmentSharesEmployees            EquipmentSharesEmployee[]
  eventType                           EventType[]
  expense                             Expense[]
  facebookUrl                         String?                              @db.VarChar
  githubUrl                           String?                              @db.VarChar
  gitlabUrl                           String?                              @db.VarChar
  goalGoalLeadIdToemployee            Goal[]                               @relation(name: "employeeGoalLeadIdToemployee")
  goalGoalOwnerEmployeeIdToemployee   Goal[]                               @relation(name: "employeeGoalOwnerEmployeeIdToemployee")
  goalKpi                             GoalKpi[]
  goalKpiTemplate                     GoalKpiTemplate[]
  id                                  String                               @id(map: "PK_3c2bc72f03fd5abbbc5ac169498") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  income                              Income[]
  instagramUrl                        String?                              @db.VarChar
  invoiceItem                         InvoiceItem[]
  isActive                            Boolean?                             @default(false)
  isAway                              Boolean?                             @default(false)
  isJobSearchActive                   Boolean?
  isOnline                            Boolean?                             @default(false)
  isTrackingEnabled                   Boolean?                             @default(false)
  isTrackingTime                      Boolean?                             @default(false)
  isVerified                          Boolean?
  isVetted                            Boolean?
  jobSuccess                          Decimal?                             @db.Decimal
  keyResultKeyResultLeadIdToemployee  KeyResult[]                          @relation(name: "employeeKeyResultLeadIdToemployee")
  keyResultKeyResultOwnerIdToemployee KeyResult[]                          @relation(name: "employeeKeyResultOwnerIdToemployee")
  knowledgeBaseAuthor                 KnowledgeBaseAuthor[]
  acceptDate                          DateTime?                            @db.Timestamp(6)
  activity                            Activity[]
  allowScreenshotCapture              Boolean                              @default(true)
  anonymousBonus                      Boolean?
  appointmentEmployee                 AppointmentEmployee[]
  availabilitySlot                    AvailabilitySlot[]
  averageBonus                        Decimal?                             @db.Decimal
  averageExpenses                     Decimal?                             @db.Decimal
  averageIncome                       Decimal?                             @db.Decimal
  billRateCurrency                    String?                              @db.VarChar
  billRateValue                       Int?
  candidate                           Candidate?
  candidateInterviewer                CandidateInterviewer[]
  contact                             Contact?                             @relation(fields: [contactId], references: [id])
  contactId                           String?                              @unique
  createdAt                           DateTime                             @default(now()) @db.Timestamp(6)
  deletedAt                           DateTime?                            @db.Timestamp(6)
  description                         String?                              @db.VarChar
  employeeAppointment                 EmployeeAppointment[]
  employeeAward                       EmployeeAward[]
  employeeJobPreset                   EmployeeJobPreset[]
  employeeLevel                       String?                              @db.VarChar(500)
  employeePhone                       EmployeePhone[]
  employeeProposalTemplate            EmployeeProposalTemplate[]
  employeeRecurringExpense            EmployeeRecurringExpense[]
  employeeSetting                     EmployeeSetting[]
  employeeTasksTask                   EmployeeTasksTask[]
  linkedInId                          String?                              @db.VarChar
  linkedInUrl                         String?                              @db.VarChar
  minimumBillingRate                  Int?
  offerDate                           DateTime?                            @db.Timestamp(6)
  organization                        Organization?                        @relation(fields: [organizationId], references: [id])
  organizationId                      String?
  organizationContactEmployee         OrganizationContactEmployee[]
  organizationDepartmentEmployee      OrganizationDepartmentEmployee[]
  organizationEmploymentTypeEmployee  OrganizationEmploymentTypeEmployee[]
  organizationPosition                OrganizationPosition?                @relation(fields: [organizationPositionId], references: [id])
  organizationPositionId              String?
  organizationProjectEmployee         OrganizationProjectEmployee[]
  organizationTeamEmployee            OrganizationTeamEmployee[]
  payment                             Payment[]
  payPeriod                           String?                              @db.VarChar
  profileLink                         String?                              @map("profile_link") @db.VarChar
  proposal                            Proposal[]
  rejectDate                          DateTime?                            @db.Timestamp(6)
  requestApprovalEmployee             RequestApprovalEmployee[]
  reWeeklyLimit                       Int?
  shortDescription                    String?                              @map("short_description") @db.VarChar(200)
  showAnonymousBonus                  Boolean?                             @map("show_anonymous_bonus")
  showAverageBonus                    Boolean?                             @map("show_average_bonus")
  showAverageExpenses                 Boolean?                             @map("show_average_expenses")
  showAverageIncome                   Boolean?                             @map("show_average_income")
  showBillrate                        Boolean?                             @map("show_billrate")
  showPayperiod                       Boolean?                             @map("show_payperiod")
  showStartWorkOn                     Boolean?                             @map("show_start_work_on")
  skillEmployee                       SkillEmployee[]
  stackoverflowUrl                    String?                              @db.VarChar
  startedWorkOn                       DateTime?                            @db.Timestamp(6)
  tagEmployee                         TagEmployee[]
  taskEmployee                        TaskEmployee[]
  tenant                              Tenant?                              @relation(fields: [tenantId], references: [id])
  tenantId                            String?
  timeLog                             TimeLog[]
  timeOffPolicyEmployee               TimeOffPolicyEmployee[]
  timeOffRequestEmployee              TimeOffRequestEmployee[]
  timesheet                           Timesheet[]
  timeSlot                            TimeSlot[]
  totalJobs                           Decimal?                             @db.Decimal
  totalWorkHours                      Decimal?                             @default(0) @db.Decimal
  twitterUrl                          String?                              @db.VarChar
  updatedAt                           DateTime                             @default(now()) @db.Timestamp(6)
  upworkId                            String?                              @db.VarChar
  upworkUrl                           String?                              @db.VarChar
  user                                User                                 @relation(fields: [userId], references: [id])
  userId                              String                               @unique
  valueDate                           DateTime?                            @db.Timestamp(6)

  @@index([contactId], map: "IDX_1c0c1370ecd98040259625e17e")
  @@index([tenantId], map: "IDX_4b3303a6b7eb92d237a4379734")
  @@index([organizationPositionId], map: "IDX_5e719204dcafa8d6b2ecdeda13")
  @@index([profileLink], map: "IDX_96dfbcaa2990df01fe5bb39ccc")
  @@index([organizationId], map: "IDX_c6a48286f3aa8ae903bee0d1e7")
  @@index([userId], map: "IDX_f4b0d329c4a3cf79ffe9d56504")
  @@map("employee")
}

model EmployeeAppointment {
  id                  String                @id(map: "PK_0cffa7fe7917dce7981f126e8bc") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt           DateTime              @default(now()) @db.Timestamp(6)
  updatedAt           DateTime              @default(now()) @db.Timestamp(6)
  agenda              String                @db.VarChar
  description         String?               @db.VarChar
  location            String?               @db.VarChar
  startDateTime       DateTime              @db.Timestamp(6)
  endDateTime         DateTime              @db.Timestamp(6)
  bufferTimeStart     Boolean?
  bufferTimeEnd       Boolean?
  bufferTimeInMins    Int?
  breakTimeInMins     Int?
  breakStartTime      DateTime?             @db.Timestamp(6)
  emails              String?               @db.VarChar
  status              String?               @db.VarChar
  employee            Employee?             @relation(fields: [employeeId], references: [id])
  employeeId          String?
  organization        Organization?         @relation(fields: [organizationId], references: [id])
  organizationId      String?
  tenant              Tenant?               @relation(fields: [tenantId], references: [id])
  tenantId            String?
  appointmentEmployee AppointmentEmployee[]

  @@index([organizationId], map: "IDX_86cf36c137712e779dd7e2301e")
  @@index([tenantId], map: "IDX_a35637bb659c59e18adb4f38f8")
  @@map("employee_appointment")
}

model EmployeeAward {
  id             String        @id(map: "PK_285f4201fd5271b48ef8ab06c4c") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt      DateTime      @default(now()) @db.Timestamp(6)
  updatedAt      DateTime      @default(now()) @db.Timestamp(6)
  name           String        @db.VarChar
  year           String        @db.VarChar
  employee       Employee      @relation(fields: [employeeId], references: [id])
  employeeId     String
  tenant         Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId       String?
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?

  @@index([employeeId], map: "IDX_0c5266f3f488add404f92d56ec")
  @@index([name], map: "IDX_6912685bbb0e303eab392978d9")
  @@index([tenantId], map: "IDX_91e0f7efcd17d20b5029fb1342")
  @@index([organizationId], map: "IDX_caf8363b0ed7d5f24ae866ba3b")
  @@map("employee_award")
}

model EmployeeJobPreset {
  employee    Employee  @relation(fields: [employeeId], references: [id])
  employeeId  String
  jobPreset   JobPreset @relation(fields: [jobPresetId], references: [id])
  jobPresetId String
  id          String    @id @default(cuid())

  @@unique([jobPresetId, employeeId], map: "PK_e31c77d3cf1eb3b90adb2800208")
  @@index([employeeId], map: "IDX_68e75e49f06409fd385b4f8774")
  @@index([jobPresetId], map: "IDX_7ae5b4d4bdec77971dab319f2e")
  @@map("employee_job_preset")
}

model EmployeeLevel {
  id               String             @id(map: "PK_9fe5b32795d45518cda5c6ae99b") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt        DateTime           @default(now()) @db.Timestamp(6)
  updatedAt        DateTime           @default(now()) @db.Timestamp(6)
  level            String             @db.VarChar
  organization     Organization?      @relation(fields: [organizationId], references: [id])
  organizationId   String?
  tenant           Tenant?            @relation(fields: [tenantId], references: [id])
  tenantId         String?
  tagEmployeeLevel TagEmployeeLevel[]

  @@index([organizationId], map: "IDX_c4668533292bf4526e61aedf74")
  @@index([tenantId], map: "IDX_d3fc52d497bc44d6f493dbedc3")
  @@map("employee_level")
}

model EmployeePhone {
  id             String        @id(map: "PK_c36300253feafdecf31e89b9ef6") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt      DateTime      @default(now()) @db.Timestamp(6)
  updatedAt      DateTime      @default(now()) @db.Timestamp(6)
  typeField      String?       @map("type") @db.VarChar
  phoneNumber    String        @db.VarChar
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?
  employee       Employee      @relation(fields: [employeeId], references: [id])
  employeeId     String
  tenant         Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId       String?

  @@index([organizationId], map: "IDX_0f9cefa604913e1ab322591546")
  @@index([employeeId], map: "IDX_329ebd01a757d1a0c3c4d628e2")
  @@index([phoneNumber], map: "IDX_ba7b2ef5a9cd165a1e4e2ad0ef")
  @@index([tenantId], map: "IDX_d543336994b1f764c449e0b1d3")
  @@map("employee_phone")
}

model EmployeeProposalTemplate {
  id             String        @id(map: "PK_7c6bb7aaa072317d412c7e954ca") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt      DateTime      @default(now()) @db.Timestamp(6)
  updatedAt      DateTime      @default(now()) @db.Timestamp(6)
  name           String        @db.VarChar
  content        String?
  isDefault      Boolean       @default(false)
  employee       Employee      @relation(fields: [employeeId], references: [id])
  employeeId     String
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?
  tenant         Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId       String?

  @@index([content], map: "IDX_0111963c9cb4dd14565c0d9c84")
  @@index([employeeId], map: "IDX_2be728a7f8b118712a4200990d")
  @@index([isDefault], map: "IDX_a13f3564eae9db44ddc4308afc")
  @@index([name], map: "IDX_dc2ff85f7de16dea6453a833dd")
  @@index([organizationId], map: "IDX_ee780fbd8f91de31c004929eec")
  @@index([tenantId], map: "IDX_f577c9bc6183c1d1eae1e154bb")
  @@map("employee_proposal_template")
}

model EmployeeRecurringExpense {
  id                       String        @id(map: "PK_cff5ea80db428a5ead37a04f2f8") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                DateTime      @default(now()) @db.Timestamp(6)
  updatedAt                DateTime      @default(now()) @db.Timestamp(6)
  startDay                 Int
  startMonth               Int
  startYear                Int
  startDate                DateTime      @db.Timestamp(6)
  endDay                   Int?
  endMonth                 Int?
  endYear                  Int?
  endDate                  DateTime?     @db.Timestamp(6)
  categoryName             String        @db.VarChar
  value                    Decimal       @db.Decimal
  currency                 String        @db.VarChar
  parentRecurringExpenseId String?       @db.VarChar
  employee                 Employee?     @relation(fields: [employeeId], references: [id])
  employeeId               String?
  organization             Organization? @relation(fields: [organizationId], references: [id])
  organizationId           String?
  tenant                   Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId                 String?

  @@index([employeeId], map: "IDX_0ac8526c48a3daa267c86225fb")
  @@index([organizationId], map: "IDX_3ee5147bb1fde625fa33c0e956")
  @@index([tenantId], map: "IDX_5fde7be40b3c03bc0fdac0c2f6")
  @@index([parentRecurringExpenseId], map: "IDX_6e570174fda71e97616e9d2eea")
  @@index([currency], map: "IDX_739f8cdce21cc72d400559ce00")
  @@index([categoryName], map: "IDX_a4b5a2ea2afecf1ee254f1a704")
  @@map("employee_recurring_expense")
}

model EmployeeSetting {
  id             String        @id(map: "PK_d98eee0375560c6dda8c6e8be72") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt      DateTime      @default(now()) @db.Timestamp(6)
  updatedAt      DateTime      @default(now()) @db.Timestamp(6)
  month          Int
  year           Int
  settingType    String        @db.VarChar
  value          Int
  currency       String        @db.VarChar
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?
  tenant         Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId       String?
  employee       Employee      @relation(fields: [employeeId], references: [id])
  employeeId     String

  @@index([organizationId], map: "IDX_56e96cd218a185ed59b5a8e786")
  @@index([currency], map: "IDX_710c71526edb89b2a7033abcdf")
  @@index([tenantId], map: "IDX_9516a627a131626d2a5738a05a")
  @@index([settingType], map: "IDX_9537fae454ebebc98ee5adb3a2")
  @@index([employeeId], map: "IDX_95ea18af6ef8123503d332240c")
  @@map("employee_setting")
}

model EmployeeTasksTask {
  task       Task     @relation(fields: [taskId], references: [id])
  taskId     String
  employee   Employee @relation(fields: [employeeId], references: [id])
  employeeId String
  id         String   @id @default(cuid())

  @@unique([employeeId, taskId], map: "PK_eaa255ec3dabd16698775d00d4a")
  @@index([taskId], map: "IDX_6bbbe677c5fc5115916b4eccfb")
  @@index([employeeId], map: "IDX_eae5eea1c6a3fcf4a2c95f1a5f")
  @@map("employee_tasks_task")
}

model EmployeeUpworkJobSearchCriterion {
  id                  String               @id(map: "PK_2b2b3f3fdeacef0fb98cd31ed29") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt           DateTime             @default(now()) @db.Timestamp(6)
  updatedAt           DateTime             @default(now()) @db.Timestamp(6)
  keyword             String?              @db.VarChar
  jobType             String?
  jobPreset           JobPreset?           @relation(fields: [jobPresetId], references: [id])
  jobPresetId         String?
  organization        Organization?        @relation(fields: [organizationId], references: [id])
  organizationId      String?
  tenant              Tenant?              @relation(fields: [tenantId], references: [id])
  tenantId            String?
  jobSearchOccupation JobSearchOccupation? @relation(fields: [occupationId], references: [id])
  occupationId        String?
  employee            Employee             @relation(fields: [employeeId], references: [id])
  employeeId          String
  jobSearchCategory   JobSearchCategory?   @relation(fields: [categoryId], references: [id])
  categoryId          String?

  @@index([organizationId], map: "IDX_630337302efe97cc93deeb2151")
  @@index([tenantId], map: "IDX_afe6c40d3d9951388fa05f83f2")
  @@map("employee_upwork_job_search_criterion")
}

model Equipment {
  id               String             @id(map: "PK_0722e1b9d6eb19f5874c1678740") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt        DateTime           @default(now()) @db.Timestamp(6)
  updatedAt        DateTime           @default(now()) @db.Timestamp(6)
  name             String             @db.VarChar
  typeField        String             @map("type") @db.VarChar
  serialNumber     String             @db.VarChar
  manufacturedYear Decimal?           @db.Decimal
  initialCost      Decimal?           @db.Decimal
  currency         String             @db.VarChar
  maxSharePeriod   Decimal?           @db.Decimal
  autoApproveShare Boolean
  imageAsset       ImageAsset?        @relation(fields: [imageId], references: [id])
  imageId          String?
  organization     Organization?      @relation(fields: [organizationId], references: [id])
  organizationId   String?
  tenant           Tenant?            @relation(fields: [tenantId], references: [id])
  tenantId         String?
  equipmentSharing EquipmentSharing[]
  tagEquipment     TagEquipment[]

  @@index([organizationId], map: "IDX_f98ce0d210aa9f91b729d44780")
  @@index([tenantId], map: "IDX_fb6808468066849ab7b7454d5f")
  @@map("equipment")
}

model EquipmentSharesEmployee {
  employee           Employee         @relation(fields: [employeeId], references: [id])
  employeeId         String
  equipmentSharing   EquipmentSharing @relation(fields: [equipmentSharingId], references: [id])
  equipmentSharingId String
  id                 String           @id @default(cuid())

  @@unique([equipmentSharingId, employeeId], map: "PK_b80a312b221e11ac394c39889fa")
  @@index([employeeId], map: "IDX_57f6461f1a710f0f4abdcb8d0e")
  @@index([equipmentSharingId], map: "IDX_8676224f55a965c53e4bb7cbf8")
  @@map("equipment_shares_employees")
}

model EquipmentSharesTeam {
  organizationTeam   OrganizationTeam @relation(fields: [organizationTeamId], references: [id])
  organizationTeamId String
  equipmentSharing   EquipmentSharing @relation(fields: [equipmentSharingId], references: [id])
  equipmentSharingId String
  id                 String           @id @default(cuid())

  @@unique([equipmentSharingId, organizationTeamId], map: "PK_69cfe66207da6b86d66e9030de9")
  @@index([organizationTeamId], map: "IDX_7ccef49dd56c8c74daa8d12186")
  @@index([equipmentSharingId], map: "IDX_f84171695b7aedfc454483bcf2")
  @@map("equipment_shares_teams")
}

model EquipmentSharing {
  id                       String                    @id(map: "PK_1ef883fc78969d9825a15c37368") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                DateTime                  @default(now()) @db.Timestamp(6)
  updatedAt                DateTime                  @default(now()) @db.Timestamp(6)
  name                     String?                   @db.VarChar
  shareRequestDay          DateTime?                 @db.Timestamp(6)
  shareStartDay            DateTime?                 @db.Timestamp(6)
  shareEndDay              DateTime?                 @db.Timestamp(6)
  status                   Int
  createdBy                String?                   @db.VarChar
  createdByName            String?                   @db.VarChar
  equipmentSharingPolicy   EquipmentSharingPolicy?   @relation(fields: [equipmentSharingPolicyId], references: [id])
  equipmentSharingPolicyId String?
  equipment                Equipment?                @relation(fields: [equipmentId], references: [id])
  equipmentId              String?
  organization             Organization?             @relation(fields: [organizationId], references: [id])
  organizationId           String?
  tenant                   Tenant?                   @relation(fields: [tenantId], references: [id])
  tenantId                 String?
  equipmentSharesEmployees EquipmentSharesEmployee[]
  equipmentSharesTeams     EquipmentSharesTeam[]

  @@index([equipmentSharingPolicyId], map: "IDX_0ecfe0ce0cd2b197249d5f1c10")
  @@index([equipmentId], map: "IDX_acad51a6362806fc499e583e40")
  @@index([organizationId], map: "IDX_ea9254be07ae4a8604f0aaab19")
  @@index([tenantId], map: "IDX_fa525e61fb3d8d9efec0f364a4")
  @@map("equipment_sharing")
}

model EquipmentSharingPolicy {
  id               String             @id(map: "PK_c86c27cfd73768508bff426a0a5") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt        DateTime           @default(now()) @db.Timestamp(6)
  updatedAt        DateTime           @default(now()) @db.Timestamp(6)
  name             String             @db.VarChar
  description      String?            @db.VarChar
  organization     Organization?      @relation(fields: [organizationId], references: [id])
  organizationId   String?
  tenant           Tenant?            @relation(fields: [tenantId], references: [id])
  tenantId         String?
  equipmentSharing EquipmentSharing[]

  @@index([name], map: "IDX_04c9e514ed70897f6ad8cadc3c")
  @@index([organizationId], map: "IDX_5311a833ff255881454bd5b3b5")
  @@index([tenantId], map: "IDX_5443ca8ed830626656d8cfecef")
  @@map("equipment_sharing_policy")
}

model EstimateEmail {
  id                       String        @id(map: "PK_0ea0366889e6ca5d151501328c6") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                DateTime      @default(now()) @db.Timestamp(6)
  updatedAt                DateTime      @default(now()) @db.Timestamp(6)
  token                    String        @db.VarChar
  email                    String        @db.VarChar
  expireDate               DateTime      @db.Timestamp(6)
  convertAcceptedEstimates Boolean?
  organization             Organization? @relation(fields: [organizationId], references: [id])
  organizationId           String?
  tenant                   Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId                 String?

  @@index([organizationId], map: "IDX_233c1d351d63441aeb039d1164")
  @@index([tenantId], map: "IDX_391d3f83244fea73c619aecadd")
  @@map("estimate_email")
}

model EventType {
  tagEventType   TagEventType[]
  id             String         @id(map: "PK_d968f34984d7d85d96f782872fe") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt      DateTime       @default(now()) @db.Timestamp(6)
  updatedAt      DateTime       @default(now()) @db.Timestamp(6)
  duration       Decimal        @db.Decimal
  durationUnit   String?        @db.VarChar
  title          String?        @db.VarChar
  description    String?        @db.VarChar
  isActive       Boolean?
  employee       Employee?      @relation(fields: [employeeId], references: [id])
  employeeId     String?
  tenant         Tenant?        @relation(fields: [tenantId], references: [id])
  tenantId       String?
  organization   Organization?  @relation(fields: [organizationId], references: [id])
  organizationId String?

  @@index([employeeId], map: "IDX_24d905ec9e127ade23754a363d")
  @@index([title], map: "IDX_43459c650957e478203c738574")
  @@index([duration], map: "IDX_4b02d8616129f39fca2b10e98b")
  @@index([description], map: "IDX_5bde7aeb2c7fb3a421b175871e")
  @@index([tenantId], map: "IDX_92fc62260c0c7ff108622850bf")
  @@index([durationUnit], map: "IDX_9d5980ff1064e2edb77509d312")
  @@index([organizationId], map: "IDX_fc8818d6fde74370ec703a0135")
  @@map("event_type")
}

model Expense {
  id                    String               @id(map: "PK_edd925b450e13ea36197c9590fc") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt             DateTime             @default(now()) @db.Timestamp(6)
  updatedAt             DateTime             @default(now()) @db.Timestamp(6)
  amount                Decimal              @db.Decimal
  typeOfExpense         String?              @db.VarChar
  notes                 String?              @db.VarChar
  currency              String               @db.VarChar
  valueDate             DateTime?            @db.Timestamp(6)
  purpose               String?              @db.VarChar
  taxType               String?              @db.VarChar
  taxLabel              String?              @db.VarChar
  rateValue             Decimal?             @db.Decimal
  receipt               String?              @db.VarChar
  splitExpense          Boolean?
  reference             String?              @db.VarChar
  status                EnumExpenseStatus?
  organizationContact   OrganizationContact? @relation(fields: [organizationContactId], references: [id])
  organizationContactId String?
  expenseCategory       ExpenseCategory?     @relation(fields: [categoryId], references: [id])
  categoryId            String?
  employee              Employee?            @relation(fields: [employeeId], references: [id])
  employeeId            String?
  tenant                Tenant?              @relation(fields: [tenantId], references: [id])
  tenantId              String?
  organizationProject   OrganizationProject? @relation(fields: [projectId], references: [id])
  projectId             String?
  organization          Organization?        @relation(fields: [organizationId], references: [id])
  organizationId        String?
  organizationVendor    OrganizationVendor?  @relation(fields: [vendorId], references: [id])
  vendorId              String?
  invoiceItem           InvoiceItem[]
  tagExpense            TagExpense[]

  @@index([taxLabel], map: "IDX_0006d3025b6c92fbd4089b9465")
  @@index([organizationContactId], map: "IDX_047b8b5c0782d5a6d4c8bfc1a4")
  @@index([notes], map: "IDX_3826d6ca74a08a8498fa17d330")
  @@index([categoryId], map: "IDX_42eea5debc63f4d1bf89881c10")
  @@index([employeeId], map: "IDX_5e7b197dbac69012dbdb4964f3")
  @@index([receipt], map: "IDX_5f57d077c28b378a6c885e81c5")
  @@index([tenantId], map: "IDX_6d171c9d5f81095436b99da5e6")
  @@index([amount], map: "IDX_846a933af451a33b95b7b198c6")
  @@index([currency], map: "IDX_89508d119b1a279c037d9da151")
  @@index([rateValue], map: "IDX_97ed0e2b80f2e7ec260fd81cd9")
  @@index([projectId], map: "IDX_9971c4171ae051e74b833984a3")
  @@index([typeOfExpense], map: "IDX_b5bb8f62d401475fcc8c2ba35e")
  @@index([organizationId], map: "IDX_c5fb146726ff128e600f23d0a1")
  @@index([purpose], map: "IDX_cbfebdb1419f9b8036a8b0546e")
  @@index([taxType], map: "IDX_dd8ab9312fb8d787982b9feebf")
  @@index([vendorId], map: "IDX_eacb116ab0521ad9b96f2bb53b")
  @@map("expense")
}

model ExpenseCategory {
  id                             String                           @id(map: "PK_478b68a9314d8787fb3763a2298") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                      DateTime                         @default(now()) @db.Timestamp(6)
  updatedAt                      DateTime                         @default(now()) @db.Timestamp(6)
  name                           String                           @db.VarChar
  tenant                         Tenant?                          @relation(fields: [tenantId], references: [id])
  tenantId                       String?
  organization                   Organization?                    @relation(fields: [organizationId], references: [id])
  organizationId                 String?
  expense                        Expense[]
  tagOrganizationExpenseCategory TagOrganizationExpenseCategory[]

  @@index([tenantId], map: "IDX_37504e920ee5ca46a4000b89da")
  @@index([organizationId], map: "IDX_9c9bfe5baaf83f53533ff035fc")
  @@map("expense_category")
}

model Feature {
  id                  String                @id(map: "PK_03930932f909ca4be8e33d16a2d") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt           DateTime              @default(now()) @db.Timestamp(6)
  updatedAt           DateTime              @default(now()) @db.Timestamp(6)
  name                String                @db.VarChar
  code                String                @db.VarChar
  isPaid              Boolean               @default(false)
  description         String?               @db.VarChar
  image               String?               @db.VarChar
  link                String                @db.VarChar
  status              String?               @db.VarChar
  icon                String?               @db.VarChar
  feature             Feature?              @relation(name: "otherFeature", fields: [parentId], references: [id])
  parentId            String?
  otherFeature        Feature[]             @relation(name: "otherFeature")
  featureOrganization FeatureOrganization[]

  @@index([name], map: "IDX_4832be692a2dc63d67e8e93c75")
  @@index([code], map: "IDX_c30465b5a6e0fae1c8ee7e3120")
  @@index([parentId], map: "IDX_d4a28a8e70d450a412bf0cfb52")
  @@map("feature")
}

model FeatureOrganization {
  id             String        @id(map: "PK_2b31b7d1de797f2be7d14080d3a") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt      DateTime      @default(now()) @db.Timestamp(6)
  updatedAt      DateTime      @default(now()) @db.Timestamp(6)
  isEnabled      Boolean       @default(true)
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?
  feature        Feature       @relation(fields: [featureId], references: [id])
  featureId      String
  tenant         Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId       String?

  @@index([organizationId], map: "IDX_6a94e6b0a572f591288ac44a42")
  @@index([featureId], map: "IDX_6d413f9fdd5366b1b9add46483")
  @@index([tenantId], map: "IDX_8f71803d96dcdbcc6b19bb28d3")
  @@map("feature_organization")
}

model Goal {
  id                                         String            @id(map: "PK_88c8e2b461b711336c836b1e130") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                                  DateTime          @default(now()) @db.Timestamp(6)
  updatedAt                                  DateTime          @default(now()) @db.Timestamp(6)
  name                                       String            @db.VarChar
  description                                String            @db.VarChar
  deadline                                   String            @db.VarChar
  level                                      String            @db.VarChar
  progress                                   Int
  employeeGoalOwnerEmployeeIdToemployee      Employee?         @relation(name: "employeeGoalOwnerEmployeeIdToemployee", fields: [ownerEmployeeId], references: [id])
  ownerEmployeeId                            String?
  keyResultGoalAlignedKeyResultIdTokeyResult KeyResult?        @relation(name: "goalGoalAlignedKeyResultIdTokeyResult", fields: [alignedKeyResultId], references: [id])
  alignedKeyResultId                         String?
  tenant                                     Tenant?           @relation(fields: [tenantId], references: [id])
  tenantId                                   String?
  organizationTeam                           OrganizationTeam? @relation(fields: [ownerTeamId], references: [id])
  ownerTeamId                                String?
  employeeGoalLeadIdToemployee               Employee?         @relation(name: "employeeGoalLeadIdToemployee", fields: [leadId], references: [id])
  leadId                                     String?
  organization                               Organization?     @relation(fields: [organizationId], references: [id])
  organizationId                             String?
  keyResultKeyResultGoalIdTogoal             KeyResult[]       @relation(name: "goalKeyResultGoalIdTogoal")

  @@index([ownerEmployeeId], map: "IDX_35526ff1063ab5fa2b20e71bd6")
  @@index([alignedKeyResultId], map: "IDX_4c8b4e887a994182fd6132e640")
  @@index([tenantId], map: "IDX_6b4758a5442713070c9a366d0e")
  @@index([ownerTeamId], map: "IDX_ac161c1a0c0ff8e83554f097e5")
  @@index([leadId], map: "IDX_af0a11734e70412b742ac339c8")
  @@index([organizationId], map: "IDX_c6e8ae55a4db3584686cbf6afe")
  @@map("goal")
}

model GoalGeneralSetting {
  id                         String        @id(map: "PK_66e3aec3a5e17059d17182c92cb") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                  DateTime      @default(now()) @db.Timestamp(6)
  updatedAt                  DateTime      @default(now()) @db.Timestamp(6)
  maxObjectives              Int
  maxKeyResults              Int
  employeeCanCreateObjective Boolean
  canOwnObjectives           String        @db.VarChar
  canOwnKeyResult            String        @db.VarChar
  krTypeKPI                  Boolean
  krTypeTask                 Boolean
  tenant                     Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId                   String?
  organization               Organization? @relation(fields: [organizationId], references: [id])
  organizationId             String?

  @@index([tenantId], map: "IDX_d17a5159d888ac6320459eda39")
  @@index([organizationId], map: "IDX_e35d0f7b794ca8850669d12c78")
  @@map("goal_general_setting")
}

model GoalKpi {
  id             String        @id(map: "PK_a3ffb211e0d8cddaabc9b7500e1") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt      DateTime      @default(now()) @db.Timestamp(6)
  updatedAt      DateTime      @default(now()) @db.Timestamp(6)
  name           String        @db.VarChar
  description    String?       @db.VarChar
  typeField      String        @map("type") @db.VarChar
  unit           String?       @db.VarChar
  operator       String        @db.VarChar
  currentValue   Int
  targetValue    Int
  tenant         Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId       String?
  employee       Employee?     @relation(fields: [leadId], references: [id])
  leadId         String?
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?
  keyResult      KeyResult[]

  @@index([tenantId], map: "IDX_43aa2985216560cd9fa93f501e")
  @@index([leadId], map: "IDX_d4f093ca4eb7c40db68d9a789d")
  @@index([organizationId], map: "IDX_e49e37fe88a2725a38a3b05849")
  @@map("goal_kpi")
}

model GoalKpiTemplate {
  id                String              @id(map: "PK_c56b646f5b8b5f8bcb511854f5a") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt         DateTime            @default(now()) @db.Timestamp(6)
  updatedAt         DateTime            @default(now()) @db.Timestamp(6)
  name              String              @db.VarChar
  description       String?             @db.VarChar
  typeField         String              @map("type") @db.VarChar
  unit              String?             @db.VarChar
  operator          String              @db.VarChar
  currentValue      Int
  targetValue       Int
  tenant            Tenant?             @relation(fields: [tenantId], references: [id])
  tenantId          String?
  organization      Organization?       @relation(fields: [organizationId], references: [id])
  organizationId    String?
  employee          Employee?           @relation(fields: [leadId], references: [id])
  leadId            String?
  keyResultTemplate KeyResultTemplate[]

  @@index([tenantId], map: "IDX_cc72d4e8e4284dcc8ffbf96caf")
  @@index([organizationId], map: "IDX_df7ab026698c02859ff7540809")
  @@map("goal_kpi_template")
}

model GoalTemplate {
  id                String              @id(map: "PK_695f015df27db60209bd4f64cdc") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt         DateTime            @default(now()) @db.Timestamp(6)
  updatedAt         DateTime            @default(now()) @db.Timestamp(6)
  name              String              @db.VarChar
  level             String              @db.VarChar
  category          String              @db.VarChar
  organization      Organization?       @relation(fields: [organizationId], references: [id])
  organizationId    String?
  tenant            Tenant?             @relation(fields: [tenantId], references: [id])
  tenantId          String?
  keyResultTemplate KeyResultTemplate[]

  @@index([organizationId], map: "IDX_5708fe06608c72fc77b65ae651")
  @@index([tenantId], map: "IDX_774bf82989475befe301fe1bca")
  @@map("goal_template")
}

model GoalTimeFrame {
  id             String        @id(map: "PK_dd84da29d908bf64eaaef8dd383") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt      DateTime      @default(now()) @db.Timestamp(6)
  updatedAt      DateTime      @default(now()) @db.Timestamp(6)
  name           String        @db.VarChar
  status         String        @db.VarChar
  startDate      DateTime      @db.Timestamp(6)
  endDate        DateTime      @db.Timestamp(6)
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?
  tenant         Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId       String?

  @@index([organizationId], map: "IDX_405bc5bba9ed71aefef84a29f1")
  @@index([tenantId], map: "IDX_b56723b53a76ca1c171890c479")
  @@map("goal_time_frame")
}

model ImageAsset {
  id                                                 String                         @id(map: "PK_ebb19157be1103b6ab97049321e") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                                          DateTime                       @default(now()) @db.Timestamp(6)
  updatedAt                                          DateTime                       @default(now()) @db.Timestamp(6)
  name                                               String?                        @db.VarChar
  url                                                String                         @db.VarChar
  width                                              Int                            @default(0)
  height                                             Int                            @default(0)
  isFeatured                                         Boolean                        @default(false)
  thumb                                              String?                        @db.VarChar
  size                                               Decimal?                       @db.Decimal
  externalProviderId                                 String?                        @db.VarChar
  storageProvider                                    EnumImageAssetStorageProvider?
  deletedAt                                          DateTime?                      @db.Timestamp(6)
  tenantImageAssetTenantIdTotenant                   Tenant?                        @relation(name: "imageAssetImageAssetTenantIdTotenant", fields: [tenantId], references: [id])
  tenantId                                           String?
  organizationImageAssetOrganizationIdToorganization Organization?                  @relation(name: "imageAssetImageAssetOrganizationIdToorganization", fields: [organizationId], references: [id])
  organizationId                                     String?
  organizationOrganizationImageIdToimageAsset        Organization[]                 @relation(name: "imageAssetOrganizationImageIdToimageAsset")
  tenantTenantImageIdToimageAsset                    Tenant[]                       @relation(name: "imageAssetTenantImageIdToimageAsset")
  equipment                                          Equipment[]
  issueType                                          IssueType[]
  merchant                                           Merchant[]
  organizationContact                                OrganizationContact[]
  organizationDocument                               OrganizationDocument[]
  organizationProject                                OrganizationProject[]
  organizationTeam                                   OrganizationTeam[]
  product                                            Product[]
  productCategory                                    ProductCategory[]
  productGalleryItem                                 ProductGalleryItem[]
  productVariant                                     ProductVariant[]
  timeOffRequest                                     TimeOffRequest[]
  user                                               User[]
  warehouse                                          Warehouse[]

  @@index([tenantId], map: "IDX_01856a9a730b7e79d70aa661cb")
  @@index([organizationId], map: "IDX_d3675304df9971cccf96d9a7c3")
  @@map("image_asset")
}

model ImportHistory {
  id         String   @id(map: "PK_2b1e6267c2fe5f0a8a13c559829") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt  DateTime @default(now()) @db.Timestamp(6)
  updatedAt  DateTime @default(now()) @db.Timestamp(6)
  file       String   @db.VarChar
  path       String   @db.VarChar
  size       Int?
  status     String   @db.VarChar
  importDate DateTime @default(now()) @db.Timestamp(6)
  tenant     Tenant?  @relation(fields: [tenantId], references: [id])
  tenantId   String?

  @@index([tenantId], map: "IDX_54868607115e2fee3b0b764eec")
  @@map("import-history")
}

model ImportRecord {
  id            String   @id(map: "PK_a53dc7ace1c9196a832e9f59286") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt     DateTime @default(now()) @db.Timestamp(6)
  updatedAt     DateTime @default(now()) @db.Timestamp(6)
  entityType    String   @db.VarChar
  sourceId      String   @db.Uuid
  destinationId String   @db.Uuid
  importDate    DateTime @default(now()) @db.Timestamp(6)
  tenant        Tenant?  @relation(fields: [tenantId], references: [id])
  tenantId      String?

  @@index([tenantId], map: "IDX_a43b235c35c2c4d3263ada770c")
  @@map("import-record")
}

model Income {
  id                  String               @id(map: "PK_29a10f17b97568f70cee8586d58") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt           DateTime             @default(now()) @db.Timestamp(6)
  updatedAt           DateTime             @default(now()) @db.Timestamp(6)
  amount              Decimal              @db.Decimal
  currency            String               @db.VarChar
  valueDate           DateTime?            @db.Timestamp(6)
  notes               String?              @db.VarChar
  isBonus             Boolean?
  reference           String?              @db.VarChar
  organizationContact OrganizationContact? @relation(fields: [clientId], references: [id])
  clientId            String?
  organization        Organization?        @relation(fields: [organizationId], references: [id])
  organizationId      String?
  tenant              Tenant?              @relation(fields: [tenantId], references: [id])
  tenantId            String?
  employee            Employee?            @relation(fields: [employeeId], references: [id])
  employeeId          String?
  tagIncome           TagIncome[]

  @@index([notes], map: "IDX_20207d9f915066dfbc2210bcf1")
  @@index([clientId], map: "IDX_29fbd3a17710a27e6f856072c0")
  @@index([organizationId], map: "IDX_64409de4711cd14e2c43371cc0")
  @@index([tenantId], map: "IDX_8608b275644cfc7a0f3f585081")
  @@index([currency], map: "IDX_86b5a121b3775a1b0b7fa75680")
  @@index([employeeId], map: "IDX_a05d52b7ffe89140f9cbcf114b")
  @@index([amount], map: "IDX_bd39a647a2843177723ddf733e")
  @@map("income")
}

model Integration {
  id                         String                       @id(map: "PK_f348d4694945d9dc4c7049a178a") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                  DateTime                     @default(now()) @db.Timestamp(6)
  updatedAt                  DateTime                     @default(now()) @db.Timestamp(6)
  name                       String                       @db.VarChar
  imgSrc                     String?                      @db.VarChar
  isComingSoon               Boolean                      @default(false)
  isPaid                     Boolean                      @default(false)
  version                    String?                      @db.VarChar
  docUrl                     String?                      @db.VarChar
  isFreeTrial                Boolean                      @default(false)
  freeTrialPeriod            Decimal?                     @default(0) @db.Decimal
  order                      Int?
  integrationIntegrationType IntegrationIntegrationType[]
  tagIntegration             TagIntegration[]

  @@map("integration")
}

model IntegrationEntitySetting {
  id                           String                         @id(map: "PK_6f942ec2f8005d0def9bf156fbb") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                    DateTime                       @default(now()) @db.Timestamp(6)
  updatedAt                    DateTime                       @default(now()) @db.Timestamp(6)
  entity                       String                         @db.VarChar
  sync                         Boolean
  tenant                       Tenant?                        @relation(fields: [tenantId], references: [id])
  tenantId                     String?
  organization                 Organization?                  @relation(fields: [organizationId], references: [id])
  organizationId               String?
  integrationTenant            IntegrationTenant              @relation(fields: [integrationId], references: [id])
  integrationId                String
  integrationEntitySettingTied IntegrationEntitySettingTied[]

  @@index([tenantId], map: "IDX_23e9cfcf1bfff07dcc3254378d")
  @@index([organizationId], map: "IDX_c6c01e38eebd8b26b9214b9044")
  @@index([integrationId], map: "IDX_f80ff4ebbf0b33a67dce598911")
  @@map("integration_entity_setting")
}

model IntegrationEntitySettingTied {
  id                         String                    @id(map: "PK_a7a05eb931096f85a425c5399d2") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                  DateTime                  @default(now()) @db.Timestamp(6)
  updatedAt                  DateTime                  @default(now()) @db.Timestamp(6)
  entity                     String                    @db.VarChar
  sync                       Boolean
  integrationEntitySetting   IntegrationEntitySetting? @relation(fields: [integrationEntitySettingId], references: [id])
  integrationEntitySettingId String?
  tenant                     Tenant?                   @relation(fields: [tenantId], references: [id])
  tenantId                   String?
  organization               Organization?             @relation(fields: [organizationId], references: [id])
  organizationId             String?

  @@index([integrationEntitySettingId], map: "IDX_3fb863167095805e33f38a0fdc")
  @@index([tenantId], map: "IDX_b208a754c7a538cb3422f39f5b")
  @@index([organizationId], map: "IDX_d5ac36aa3d5919908414154fca")
  @@map("integration_entity_setting_tied")
}

model IntegrationIntegrationType {
  integration       Integration     @relation(fields: [integrationId], references: [id])
  integrationId     String
  integrationType   IntegrationType @relation(fields: [integrationTypeId], references: [id])
  integrationTypeId String
  id                String          @id @default(cuid())

  @@unique([integrationId, integrationTypeId], map: "PK_07ee685488f4e771025e0292eb2")
  @@index([integrationId], map: "IDX_34c86921ee9b462bc5c7b61fad")
  @@index([integrationTypeId], map: "IDX_8dd2062499a6c2a708ddd05650")
  @@map("integration_integration_type")
}

model IntegrationMap {
  id                String            @id(map: "PK_04fadd5eb551bbeba50aced5d0a") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt         DateTime          @default(now()) @db.Timestamp(6)
  updatedAt         DateTime          @default(now()) @db.Timestamp(6)
  entity            String            @db.VarChar
  sourceId          BigInt
  gauzyId           String            @db.VarChar
  organization      Organization?     @relation(fields: [organizationId], references: [id])
  organizationId    String?
  integrationTenant IntegrationTenant @relation(fields: [integrationId], references: [id])
  integrationId     String
  tenant            Tenant?           @relation(fields: [tenantId], references: [id])
  tenantId          String?

  @@index([organizationId], map: "IDX_7022dafd72c1b92f7d50691441")
  @@index([integrationId], map: "IDX_c327ea26bda3d349a1eceb5658")
  @@index([tenantId], map: "IDX_eec3d6064578610ddc609dd360")
  @@map("integration_map")
}

model IntegrationSetting {
  id                String            @id(map: "PK_a9da6fb6dd2b4fdcdb994679023") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt         DateTime          @default(now()) @db.Timestamp(6)
  updatedAt         DateTime          @default(now()) @db.Timestamp(6)
  settingsName      String            @db.VarChar
  settingsValue     String            @db.VarChar
  integrationTenant IntegrationTenant @relation(fields: [integrationId], references: [id])
  integrationId     String
  organization      Organization?     @relation(fields: [organizationId], references: [id])
  organizationId    String?
  tenant            Tenant?           @relation(fields: [tenantId], references: [id])
  tenantId          String?

  @@index([integrationId], map: "IDX_34daf030004ad37b88f1f3d863")
  @@index([organizationId], map: "IDX_369eaafb13afe9903a170077ed")
  @@index([tenantId], map: "IDX_954c6b05297814776d9cb66ca7")
  @@map("integration_setting")
}

model IntegrationTenant {
  id                       String                     @id(map: "PK_14c591f8c0dde7197f664afbf8c") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                DateTime                   @default(now()) @db.Timestamp(6)
  updatedAt                DateTime                   @default(now()) @db.Timestamp(6)
  name                     String                     @db.VarChar
  tenant                   Tenant?                    @relation(fields: [tenantId], references: [id])
  tenantId                 String?
  organization             Organization?              @relation(fields: [organizationId], references: [id])
  organizationId           String?
  integrationEntitySetting IntegrationEntitySetting[]
  integrationMap           IntegrationMap[]
  integrationSetting       IntegrationSetting[]

  @@index([tenantId], map: "IDX_24e37d03ef224f1a16a35069c2")
  @@index([organizationId], map: "IDX_33ab224e7755a46fff5bc1e64e")
  @@map("integration_tenant")
}

model IntegrationType {
  id                         String                       @id(map: "PK_c6fa17545c4c2e72e312e3c933d") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                  DateTime                     @default(now()) @db.Timestamp(6)
  updatedAt                  DateTime                     @default(now()) @db.Timestamp(6)
  name                       String                       @db.VarChar
  groupName                  String                       @db.VarChar
  order                      Int
  integrationIntegrationType IntegrationIntegrationType[]

  @@map("integration_type")
}

model Invite {
  id                           String                         @id(map: "PK_fc9fa190e5a3c5d80604a4f63e1") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                    DateTime                       @default(now()) @db.Timestamp(6)
  updatedAt                    DateTime                       @default(now()) @db.Timestamp(6)
  token                        String                         @db.VarChar
  email                        String                         @db.VarChar
  status                       String                         @db.VarChar
  expireDate                   DateTime?                      @db.Timestamp(6)
  actionDate                   DateTime?                      @db.Timestamp(6)
  code                         Int?
  fullName                     String?                        @db.VarChar
  userInviteInvitedByIdTouser  User?                          @relation(name: "inviteInviteInvitedByIdTouser", fields: [invitedById], references: [id])
  invitedById                  String?
  organization                 Organization?                  @relation(fields: [organizationId], references: [id])
  organizationId               String?
  tenant                       Tenant?                        @relation(fields: [tenantId], references: [id])
  tenantId                     String?
  role                         Role?                          @relation(fields: [roleId], references: [id])
  roleId                       String?
  userInviteUserIdTouser       User?                          @relation(name: "inviteInviteUserIdTouser", fields: [userId], references: [id])
  userId                       String?
  inviteOrganizationContact    InviteOrganizationContact[]
  inviteOrganizationDepartment InviteOrganizationDepartment[]
  inviteOrganizationProject    InviteOrganizationProject[]
  inviteOrganizationTeam       InviteOrganizationTeam[]

  @@index([invitedById], map: "IDX_5a182e8b3e225b14ddf6df7e6c")
  @@index([organizationId], map: "IDX_68eef4ab86b67747f24f288a16")
  @@index([tenantId], map: "IDX_7c2328f76efb850b8114797247")
  @@index([roleId], map: "IDX_900a3ed40499c79c1c289fec28")
  @@index([userId], map: "IDX_91bfeec7a9574f458e5b592472")
  @@map("invite")
}

model InviteOrganizationContact {
  invite                Invite              @relation(fields: [inviteId], references: [id])
  inviteId              String
  organizationContact   OrganizationContact @relation(fields: [organizationContactId], references: [id])
  organizationContactId String
  id                    String              @id @default(cuid())

  @@unique([inviteId, organizationContactId], map: "PK_e5ebdc3a48dd604df4d9b82113b")
  @@index([inviteId], map: "IDX_a0c92b6393c7a13266003d552e")
  @@index([organizationContactId], map: "IDX_c5a147ce2a0ec69ccc61149262")
  @@map("invite_organization_contact")
}

model InviteOrganizationDepartment {
  invite                   Invite                 @relation(fields: [inviteId], references: [id])
  inviteId                 String
  organizationDepartment   OrganizationDepartment @relation(fields: [organizationDepartmentId], references: [id])
  organizationDepartmentId String
  id                       String                 @id @default(cuid())

  @@unique([inviteId, organizationDepartmentId], map: "PK_5f6dfec5a01a4896e7206a86551")
  @@index([inviteId], map: "IDX_0935b93b3498a0f98db1af7176")
  @@index([organizationDepartmentId], map: "IDX_fe2eea7a939442efde885303ef")
  @@map("invite_organization_department")
}

model InviteOrganizationProject {
  invite                Invite              @relation(fields: [inviteId], references: [id])
  inviteId              String
  organizationProject   OrganizationProject @relation(fields: [organizationProjectId], references: [id])
  organizationProjectId String
  id                    String              @id @default(cuid())

  @@unique([inviteId, organizationProjectId], map: "PK_54bb0942475b174cecb0a6b8744")
  @@index([inviteId], map: "IDX_020325728f0979a2822a829565")
  @@index([organizationProjectId], map: "IDX_f2806968dd846cb49fcdac195a")
  @@map("invite_organization_project")
}

model InviteOrganizationTeam {
  invite             Invite           @relation(fields: [inviteId], references: [id])
  inviteId           String
  organizationTeam   OrganizationTeam @relation(fields: [organizationTeamId], references: [id])
  organizationTeamId String
  id                 String           @id @default(cuid())

  @@unique([inviteId, organizationTeamId], map: "PK_727215f4830d4268283cb17d874")
  @@index([inviteId], map: "IDX_104140c94e838a058a34b30a09")
  @@index([organizationTeamId], map: "IDX_1132ec0c3618e53fc8cf7ed669")
  @@map("invite_organization_team")
}

model Invoice {
  id                                                  String                   @id(map: "PK_15d25c200d9bcd8a33f698daf18") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                                           DateTime                 @default(now()) @db.Timestamp(6)
  updatedAt                                           DateTime                 @default(now()) @db.Timestamp(6)
  invoiceDate                                         DateTime?                @db.Timestamp(6)
  invoiceNumber                                       Decimal?                 @unique @db.Decimal
  dueDate                                             DateTime?                @db.Timestamp(6)
  currency                                            String                   @db.VarChar
  discountValue                                       Decimal                  @db.Decimal
  paid                                                Boolean?
  tax                                                 Decimal?                 @db.Decimal
  tax2                                                Decimal?                 @db.Decimal
  terms                                               String                   @db.VarChar
  totalValue                                          Decimal?                 @db.Decimal
  status                                              String                   @db.VarChar
  isEstimate                                          Boolean?
  isAccepted                                          Boolean?
  discountType                                        String?                  @db.VarChar
  taxType                                             String?                  @db.VarChar
  tax2Type                                            String?                  @db.VarChar
  invoiceType                                         String?                  @db.VarChar
  sentTo                                              String?                  @db.VarChar
  organizationContactId                               String?                  @db.VarChar
  internalNote                                        String?                  @db.VarChar
  alreadyPaid                                         Decimal?                 @db.Decimal
  amountDue                                           Decimal?                 @db.Decimal
  hasRemainingAmountInvoiced                          Boolean?
  token                                               String?                  @db.VarChar
  isArchived                                          Boolean?                 @default(false)
  organizationInvoiceOrganizationIdToorganization     Organization?            @relation(name: "invoiceInvoiceOrganizationIdToorganization", fields: [organizationId], references: [id])
  organizationId                                      String?
  tenant                                              Tenant?                  @relation(fields: [tenantId], references: [id])
  tenantId                                            String?
  organizationInvoiceFromOrganizationIdToorganization Organization             @relation(name: "invoiceInvoiceFromOrganizationIdToorganization", fields: [fromOrganizationId], references: [id])
  fromOrganizationId                                  String
  organizationContact                                 OrganizationContact?     @relation(fields: [toContactId], references: [id])
  toContactId                                         String?
  invoiceEstimateHistory                              InvoiceEstimateHistory[]
  invoiceItem                                         InvoiceItem[]
  payment                                             Payment[]
  tagInvoice                                          TagInvoice[]

  @@index([organizationId], map: "IDX_058ef835f99e28fc6717cd7c80")
  @@index([tenantId], map: "IDX_7fb52a5f267f53b7d93af3d8c3")
  @@index([fromOrganizationId], map: "IDX_b5c33892e630b66c65d623baf8")
  @@index([toContactId], map: "IDX_d9e965da0f63c94983d3a1006a")
  @@map("invoice")
}

model InvoiceEstimateHistory {
  id             String        @id(map: "PK_368a354d1bfdbe97963765e088e") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt      DateTime      @default(now()) @db.Timestamp(6)
  updatedAt      DateTime      @default(now()) @db.Timestamp(6)
  action         String        @db.VarChar
  invoice        Invoice       @relation(fields: [invoiceId], references: [id])
  invoiceId      String
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?
  tenant         Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId       String?
  user           User?         @relation(fields: [userId], references: [id])
  userId         String?

  @@index([invoiceId], map: "IDX_31ec3d5a6b0985cec544c64217")
  @@index([organizationId], map: "IDX_856f24297f120604f8ae294276")
  @@index([tenantId], map: "IDX_cc0ac824ba89deda98bb418e8c")
  @@index([userId], map: "IDX_da2893697d57368470952a76f6")
  @@map("invoice_estimate_history")
}

model InvoiceItem {
  id                  String               @id(map: "PK_621317346abdf61295516f3cb76") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt           DateTime             @default(now()) @db.Timestamp(6)
  updatedAt           DateTime             @default(now()) @db.Timestamp(6)
  description         String?              @db.VarChar
  price               Decimal              @db.Decimal
  quantity            Decimal              @db.Decimal
  totalValue          Decimal              @db.Decimal
  applyTax            Boolean?
  applyDiscount       Boolean?
  organizationProject OrganizationProject? @relation(fields: [projectId], references: [id])
  projectId           String?
  invoice             Invoice?             @relation(fields: [invoiceId], references: [id])
  invoiceId           String?
  task                Task?                @relation(fields: [taskId], references: [id])
  taskId              String?
  expense             Expense?             @relation(fields: [expenseId], references: [id])
  expenseId           String?
  employee            Employee?            @relation(fields: [employeeId], references: [id])
  employeeId          String?
  product             Product?             @relation(fields: [productId], references: [id])
  productId           String?
  organization        Organization?        @relation(fields: [organizationId], references: [id])
  organizationId      String?
  tenant              Tenant?              @relation(fields: [tenantId], references: [id])
  tenantId            String?

  @@index([organizationId], map: "IDX_e89749c8e8258b2ec110c0776f")
  @@index([tenantId], map: "IDX_f78214cd9de76e80fe8a6305f5")
  @@map("invoice_item")
}

model IssueType {
  id                  String               @id(map: "PK_cbaac4689773f8f434641a1b6b7") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt           DateTime             @default(now()) @db.Timestamp(6)
  updatedAt           DateTime             @default(now()) @db.Timestamp(6)
  name                String               @db.VarChar
  value               String               @db.VarChar
  description         String?              @db.VarChar
  icon                String?              @db.VarChar
  color               String?              @db.VarChar
  isSystem            Boolean              @default(false)
  organizationProject OrganizationProject? @relation(fields: [projectId], references: [id])
  projectId           String?
  organization        Organization?        @relation(fields: [organizationId], references: [id])
  organizationId      String?
  imageAsset          ImageAsset?          @relation(fields: [imageId], references: [id])
  imageId             String?
  organizationTeam    OrganizationTeam?    @relation(fields: [organizationTeamId], references: [id])
  organizationTeamId  String?
  tenant              Tenant?              @relation(fields: [tenantId], references: [id])
  tenantId            String?

  @@index([projectId], map: "IDX_131331557078611a68b4a5b2e7")
  @@index([organizationId], map: "IDX_16dbef9d1b2b422abdce8ee3ae")
  @@index([imageId], map: "IDX_33779b0395f72af0b50dc526d1")
  @@index([name], map: "IDX_4af451ab46a94e94394c72d911")
  @@index([organizationTeamId], map: "IDX_586513cceb16777fd14a17bfe1")
  @@index([tenantId], map: "IDX_8b12c913c39c72fe5980427c96")
  @@index([value], map: "IDX_af2d743ed61571bcdc5d9a27a0")
  @@map("issue_type")
}

model JobPreset {
  id                                String                              @id(map: "PK_dd4f738d442d8e3b681eb884baa") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                         DateTime                            @default(now()) @db.Timestamp(6)
  updatedAt                         DateTime                            @default(now()) @db.Timestamp(6)
  name                              String                              @db.VarChar
  tenant                            Tenant?                             @relation(fields: [tenantId], references: [id])
  tenantId                          String?
  organization                      Organization?                       @relation(fields: [organizationId], references: [id])
  organizationId                    String?
  employeeJobPreset                 EmployeeJobPreset[]
  employeeUpworkJobSearchCriterion  EmployeeUpworkJobSearchCriterion[]
  jobPresetUpworkJobSearchCriterion JobPresetUpworkJobSearchCriterion[]

  @@index([tenantId], map: "IDX_7e53ea80aca15da11a8a5ec038")
  @@index([organizationId], map: "IDX_a4b038417e3221c0791dd8c771")
  @@index([name], map: "IDX_f2c1b6770dd2a3abfa35f49411")
  @@map("job_preset")
}

model JobPresetUpworkJobSearchCriterion {
  id                  String               @id(map: "PK_5384590c2acd8512b04245eda42") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt           DateTime             @default(now()) @db.Timestamp(6)
  updatedAt           DateTime             @default(now()) @db.Timestamp(6)
  keyword             String?              @db.VarChar
  jobType             String?
  tenant              Tenant?              @relation(fields: [tenantId], references: [id])
  tenantId            String?
  jobPreset           JobPreset            @relation(fields: [jobPresetId], references: [id])
  jobPresetId         String
  jobSearchCategory   JobSearchCategory?   @relation(fields: [categoryId], references: [id])
  categoryId          String?
  jobSearchOccupation JobSearchOccupation? @relation(fields: [occupationId], references: [id])
  occupationId        String?
  organization        Organization?        @relation(fields: [organizationId], references: [id])
  organizationId      String?

  @@index([tenantId], map: "IDX_2323220b4decfd2f4d8307fd78")
  @@index([organizationId], map: "IDX_d5ca48cfacfb516543d6507ca4")
  @@map("job_preset_upwork_job_search_criterion")
}

model JobSearchCategory {
  id                                String                              @id(map: "PK_884dcc4f15bc5b095b725eba477") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                         DateTime                            @default(now()) @db.Timestamp(6)
  updatedAt                         DateTime                            @default(now()) @db.Timestamp(6)
  name                              String                              @db.VarChar
  jobSourceCategoryId               String?                             @db.VarChar
  jobSource                         String                              @default("upwork")
  tenant                            Tenant?                             @relation(fields: [tenantId], references: [id])
  tenantId                          String?
  organization                      Organization?                       @relation(fields: [organizationId], references: [id])
  organizationId                    String?
  employeeUpworkJobSearchCriterion  EmployeeUpworkJobSearchCriterion[]
  jobPresetUpworkJobSearchCriterion JobPresetUpworkJobSearchCriterion[]

  @@index([tenantId], map: "IDX_35e120f2b6e5188391cf068d3b")
  @@index([name], map: "IDX_3b335bbcbf7d5e00853acaa165")
  @@index([jobSource], map: "IDX_6ee5218c869b57197e4a209bed")
  @@index([organizationId], map: "IDX_86381fb6d28978b101b3aec8ca")
  @@index([jobSourceCategoryId], map: "IDX_d0a798419c775b9157bf0269f4")
  @@map("job_search_category")
}

model JobSearchOccupation {
  id                                String                              @id(map: "PK_37e51c412e7d220fac1aae7d626") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                         DateTime                            @default(now()) @db.Timestamp(6)
  updatedAt                         DateTime                            @default(now()) @db.Timestamp(6)
  name                              String                              @db.VarChar
  jobSourceOccupationId             String?                             @db.VarChar
  jobSource                         String                              @default("upwork")
  organization                      Organization?                       @relation(fields: [organizationId], references: [id])
  organizationId                    String?
  tenant                            Tenant?                             @relation(fields: [tenantId], references: [id])
  tenantId                          String?
  employeeUpworkJobSearchCriterion  EmployeeUpworkJobSearchCriterion[]
  jobPresetUpworkJobSearchCriterion JobPresetUpworkJobSearchCriterion[]

  @@index([organizationId], map: "IDX_1a62a99e1016e4a2b461e886ec")
  @@index([tenantId], map: "IDX_44e22d88b47daf2095491b7cac")
  @@index([name], map: "IDX_9f1288205ae91f91cf356cac2f")
  @@index([jobSource], map: "IDX_c8723c90a6f007f8d7e882a04f")
  @@index([jobSourceOccupationId], map: "IDX_cb64573b18dd7b23f591f15502")
  @@map("job_search_occupation")
}

model KeyResult {
  id                                    String               @id(map: "PK_9064c5abe9ba68432934564d43f") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                             DateTime             @default(now()) @db.Timestamp(6)
  updatedAt                             DateTime             @default(now()) @db.Timestamp(6)
  name                                  String               @db.VarChar
  description                           String               @db.VarChar
  typeField                             String               @map("type") @db.VarChar
  targetValue                           Int?
  initialValue                          Int?
  unit                                  String?              @db.VarChar
  update                                Int
  progress                              Int
  deadline                              String               @db.VarChar
  hardDeadline                          DateTime?            @db.Timestamp(6)
  softDeadline                          DateTime?            @db.Timestamp(6)
  status                                String               @db.VarChar
  weight                                String?              @db.VarChar
  organizationProject                   OrganizationProject? @relation(fields: [projectId], references: [id])
  projectId                             String?
  goalKpi                               GoalKpi?             @relation(fields: [kpiId], references: [id])
  kpiId                                 String?
  employeeKeyResultOwnerIdToemployee    Employee             @relation(name: "employeeKeyResultOwnerIdToemployee", fields: [ownerId], references: [id])
  ownerId                               String
  tenant                                Tenant?              @relation(fields: [tenantId], references: [id])
  tenantId                              String?
  employeeKeyResultLeadIdToemployee     Employee?            @relation(name: "employeeKeyResultLeadIdToemployee", fields: [leadId], references: [id])
  leadId                                String?
  organization                          Organization?        @relation(fields: [organizationId], references: [id])
  organizationId                        String?
  task                                  Task?                @relation(fields: [taskId], references: [id])
  taskId                                String?
  goalGoalAlignedKeyResultIdTokeyResult Goal[]               @relation(name: "goalGoalAlignedKeyResultIdTokeyResult")
  goalKeyResultGoalIdTogoal             Goal?                @relation(name: "goalKeyResultGoalIdTogoal", fields: [goalKeyResultGoalIdTogoalId], references: [id])
  goalKeyResultGoalIdTogoalId           String?
  keyResultUpdate                       KeyResultUpdate[]

  @@index([projectId], map: "IDX_38dc003f3484eff4b59918e9ae")
  @@index([goalId], map: "IDX_3e1d08761a717c1dd71fe67249")
  @@index([kpiId], map: "IDX_4e1e975124c1d717814a4bb2ec")
  @@index([ownerId], map: "IDX_5880347716f9ec5056ec15112c")
  @@index([tenantId], map: "IDX_8ac2c6b487d03157adda874789")
  @@index([leadId], map: "IDX_c89adeff0de3aedb2e772a5bf4")
  @@index([organizationId], map: "IDX_d1f45ca98f17bd84a5e430feaf")
  @@index([taskId], map: "IDX_d8547e21ccb8e37ac9f0d69c1a")
  @@map("key_result")
}

model KeyResultTemplate {
  id              String           @id(map: "PK_b467deee2c9467582074306d80d") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt       DateTime         @default(now()) @db.Timestamp(6)
  updatedAt       DateTime         @default(now()) @db.Timestamp(6)
  name            String           @db.VarChar
  typeField       String           @map("type") @db.VarChar
  unit            String?          @db.VarChar
  targetValue     Int?
  initialValue    Int?
  deadline        String           @db.VarChar
  goalTemplate    GoalTemplate?    @relation(fields: [goalId], references: [id])
  goalId          String?
  goalKpiTemplate GoalKpiTemplate? @relation(fields: [kpiId], references: [id])
  kpiId           String?
  tenant          Tenant?          @relation(fields: [tenantId], references: [id])
  tenantId        String?
  organization    Organization?    @relation(fields: [organizationId], references: [id])
  organizationId  String?

  @@index([goalId], map: "IDX_46426ea45456e240a092b73204")
  @@index([tenantId], map: "IDX_86c09eb673b0e66129dbdc7211")
  @@index([organizationId], map: "IDX_fab6b6200b9ed6fd002c1ff62a")
  @@map("key_result_template")
}

model KeyResultUpdate {
  id             String        @id(map: "PK_d1d24d6a1d1069e293fe24f50d6") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt      DateTime      @default(now()) @db.Timestamp(6)
  updatedAt      DateTime      @default(now()) @db.Timestamp(6)
  update         Int
  progress       Int
  owner          String        @db.VarChar
  status         String        @db.VarChar
  keyResult      KeyResult?    @relation(fields: [keyResultId], references: [id])
  keyResultId    String?
  tenant         Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId       String?
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?

  @@index([tenantId], map: "IDX_cd9cbc0d5b6d62dbb63c3b3a65")
  @@index([organizationId], map: "IDX_fd4b0cb7a44ed914acdda55e29")
  @@map("key_result_update")
}

model KnowledgeBase {
  id                   String                 @id(map: "PK_19d3f52f6da1501b7e235f1da5c") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt            DateTime               @default(now()) @db.Timestamp(6)
  updatedAt            DateTime               @default(now()) @db.Timestamp(6)
  name                 String                 @db.VarChar
  flag                 String                 @db.VarChar
  icon                 String                 @db.VarChar
  privacy              String                 @db.VarChar
  language             String                 @db.VarChar
  color                String                 @db.VarChar
  description          String?                @db.VarChar
  data                 String?                @db.VarChar
  index                Int?
  organization         Organization?          @relation(fields: [organizationId], references: [id])
  organizationId       String?
  tenant               Tenant?                @relation(fields: [tenantId], references: [id])
  tenantId             String?
  knowledgeBase        KnowledgeBase?         @relation(name: "otherKnowledgeBase", fields: [parentId], references: [id])
  parentId             String?
  otherKnowledgeBase   KnowledgeBase[]        @relation(name: "otherKnowledgeBase")
  knowledgeBaseArticle KnowledgeBaseArticle[]

  @@index([organizationId], map: "IDX_2ba72a9dec732a10e8c05bcdec")
  @@index([tenantId], map: "IDX_bcb30c9893f4c8d0c4e556b4ed")
  @@index([parentId], map: "IDX_ff979040ce93cbc60863d322ec")
  @@map("knowledge_base")
}

model KnowledgeBaseArticle {
  id                  String                @id(map: "PK_c5b373d858b6e8866dec56ae313") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt           DateTime              @default(now()) @db.Timestamp(6)
  updatedAt           DateTime              @default(now()) @db.Timestamp(6)
  name                String                @db.VarChar
  description         String?               @db.VarChar
  data                String?               @db.VarChar
  draft               Boolean
  privacy             Boolean
  index               Int
  tenant              Tenant?               @relation(fields: [tenantId], references: [id])
  tenantId            String?
  organization        Organization?         @relation(fields: [organizationId], references: [id])
  organizationId      String?
  knowledgeBase       KnowledgeBase         @relation(fields: [categoryId], references: [id])
  categoryId          String
  knowledgeBaseAuthor KnowledgeBaseAuthor[]

  @@index([tenantId], map: "IDX_06a9902fedc1f9dcdbaf14afb0")
  @@index([organizationId], map: "IDX_3547f82f867489542ceae58a49")
  @@index([categoryId], map: "IDX_66af194845635058239e794e1b")
  @@map("knowledge_base_article")
}

model KnowledgeBaseAuthor {
  id                   String               @id(map: "PK_edf0d4be3efe6361a73cf958503") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt            DateTime             @default(now()) @db.Timestamp(6)
  updatedAt            DateTime             @default(now()) @db.Timestamp(6)
  tenant               Tenant?              @relation(fields: [tenantId], references: [id])
  tenantId             String?
  knowledgeBaseArticle KnowledgeBaseArticle @relation(fields: [articleId], references: [id])
  articleId            String
  organization         Organization?        @relation(fields: [organizationId], references: [id])
  organizationId       String?
  employee             Employee             @relation(fields: [employeeId], references: [id])
  employeeId           String

  @@index([tenantId], map: "IDX_1551e821871d9230cc0dafbbe5")
  @@index([articleId], map: "IDX_2d5ecab1f06b327bad54553614")
  @@index([organizationId], map: "IDX_81558bb2bef673628d92540b4e")
  @@index([employeeId], map: "IDX_8eb7e413257d7a26104f4e326f")
  @@map("knowledge_base_author")
}

model Language {
  organizationLanguage OrganizationLanguage[]
  id                   String                 @id(map: "PK_cc0a99e710eb3733f6fb42b1d4c") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt            DateTime               @default(now()) @db.Timestamp(6)
  updatedAt            DateTime               @default(now()) @db.Timestamp(6)
  name                 String                 @db.VarChar
  code                 String?                @unique @db.VarChar
  isSystem             Boolean?               @default(true) @map("is_system")
  description          String?                @db.VarChar
  color                String                 @db.VarChar

  @@map("language")
}

model Merchant {
  id                String              @id(map: "PK_9a3850e0537d869734fc9bff5d6") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt         DateTime            @default(now()) @db.Timestamp(6)
  updatedAt         DateTime            @default(now()) @db.Timestamp(6)
  name              String              @db.VarChar
  code              String              @db.VarChar
  email             String              @db.VarChar
  phone             String?             @db.VarChar
  description       String?             @db.VarChar
  active            Boolean             @default(true)
  currency          String              @default("USD") @db.VarChar
  imageAsset        ImageAsset?         @relation(fields: [logoId], references: [id])
  logoId            String?
  tenant            Tenant?             @relation(fields: [tenantId], references: [id])
  tenantId          String?
  organization      Organization?       @relation(fields: [organizationId], references: [id])
  organizationId    String?
  contact           Contact?            @relation(fields: [contactId], references: [id])
  contactId         String?             @unique
  tagMerchant       TagMerchant[]
  warehouseMerchant WarehouseMerchant[]

  @@index([logoId], map: "IDX_20acc3c3a6c900c6ef9fc68199")
  @@index([tenantId], map: "IDX_533144d7ae94180235ea456625")
  @@index([organizationId], map: "IDX_d306a524b507f72fa8550aeffe")
  @@index([contactId], map: "IDX_e03ddff05652be527e04abdc56")
  @@map("merchant")
}

model Migration {
  id        Int    @id(map: "PK_8c82d7f526340ab734260ea46be") @default(autoincrement())
  timestamp BigInt
  name      String @db.VarChar

  @@map("migrations")
}

model Organization {
  accountingTemplate                               AccountingTemplate[]
  activity                                         Activity[]
  activityProofDuration                            Int                                   @default(1)
  allowDeleteTime                                  Boolean                               @default(true)
  allowManualTime                                  Boolean                               @default(true)
  allowModifyTime                                  Boolean                               @default(true)
  allowScreenshotCapture                           Boolean                               @default(true)
  allowTrackInactivity                             Boolean                               @default(true)
  appointmentEmployee                              AppointmentEmployee[]
  approvalPolicy                                   ApprovalPolicy[]
  availabilitySlot                                 AvailabilitySlot[]
  banner                                           String?                               @db.VarChar
  bonusPercentage                                  Int?
  bonusType                                        String?                               @db.VarChar
  brandColor                                       String?                               @db.VarChar
  candidate                                        Candidate[]
  candidateCriterionRating                         CandidateCriterionRating[]
  candidateDocument                                CandidateDocument[]
  candidateEducation                               CandidateEducation[]
  candidateExperience                              CandidateExperience[]
  candidateFeedback                                CandidateFeedback[]
  candidateInterview                               CandidateInterview[]
  candidateInterviewer                             CandidateInterviewer[]
  candidatePersonalQuality                         CandidatePersonalQuality[]
  candidateSkill                                   CandidateSkill[]
  candidateSource                                  CandidateSource[]
  candidateTechnology                              CandidateTechnology[]
  changelog                                        Changelog[]
  clientFocus                                      String?                               @map("client_focus") @db.VarChar
  contactContactOrganizationIdToorganization       Contact[]                             @relation(name: "contactContactOrganizationIdToorganization")
  contactOrganizationContactIdTocontact            Contact?                              @relation(name: "contactOrganizationContactIdTocontact", fields: [contactOrganizationContactIdTocontactId], references: [id])
  contactOrganizationContactIdTocontactId          String?
  convertAcceptedEstimates                         Boolean?
  createdAt                                        DateTime                              @default(now()) @db.Timestamp(6)
  currency                                         String                                @db.VarChar
  currencyPosition                                 String                                @default("LEFT") @db.VarChar
  customSmtp                                       CustomSmtp[]
  dateFormat                                       String?                               @db.VarChar
  daysUntilDue                                     Int?
  deal                                             Deal[]
  defaultAlignmentType                             String?                               @db.VarChar
  defaultEndTime                                   String?                               @db.VarChar
  defaultInvoiceEstimateTerms                      String?                               @db.VarChar
  defaultStartTime                                 String?                               @db.VarChar
  defaultValueDateType                             EnumOrganizationDefaultValueDateType? @default(TODAY)
  discountAfterTax                                 Boolean?
  emailSent                                        EmailSent[]
  emailTemplate                                    EmailTemplate[]
  employee                                         Employee[]
  employeeAppointment                              EmployeeAppointment[]
  employeeAward                                    EmployeeAward[]
  employeeLevel                                    EmployeeLevel[]
  employeePhone                                    EmployeePhone[]
  employeeProposalTemplate                         EmployeeProposalTemplate[]
  employeeRecurringExpense                         EmployeeRecurringExpense[]
  employeeSetting                                  EmployeeSetting[]
  employeeUpworkJobSearchCriterion                 EmployeeUpworkJobSearchCriterion[]
  equipment                                        Equipment[]
  equipmentSharing                                 EquipmentSharing[]
  equipmentSharingPolicy                           EquipmentSharingPolicy[]
  estimateEmail                                    EstimateEmail[]
  eventType                                        EventType[]
  expense                                          Expense[]
  expenseCategory                                  ExpenseCategory[]
  featureOrganization                              FeatureOrganization[]
  fiscalEndDate                                    DateTime?                             @db.Timestamp(6)
  fiscalInformation                                String?                               @db.VarChar
  fiscalStartDate                                  DateTime?                             @db.Timestamp(6)
  futureDateAllowed                                Boolean?
  goal                                             Goal[]
  goalGeneralSetting                               GoalGeneralSetting[]
  goalKpi                                          GoalKpi[]
  goalKpiTemplate                                  GoalKpiTemplate[]
  goalTemplate                                     GoalTemplate[]
  goalTimeFrame                                    GoalTimeFrame[]
  id                                               String                                @id(map: "PK_472c1f99a32def1b0abb219cd67") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  imageAssetImageAssetOrganizationIdToorganization ImageAsset[]                          @relation(name: "imageAssetImageAssetOrganizationIdToorganization")
  imageAssetOrganizationImageIdToimageAsset        ImageAsset?                           @relation(name: "imageAssetOrganizationImageIdToimageAsset", fields: [imageAssetOrganizationImageIdToimageAssetId], references: [id])
  imageAssetOrganizationImageIdToimageAssetId      String?
  imageUrl                                         String?                               @db.VarChar(500)
  inactivityTimeLimit                              Int                                   @default(10)
  income                                           Income[]
  integrationEntitySetting                         IntegrationEntitySetting[]
  integrationEntitySettingTied                     IntegrationEntitySettingTied[]
  integrationMap                                   IntegrationMap[]
  integrationSetting                               IntegrationSetting[]
  integrationTenant                                IntegrationTenant[]
  invite                                           Invite[]
  inviteExpiryPeriod                               Int?
  invitesAllowed                                   Boolean?                              @default(true)
  invoiceEstimateHistory                           InvoiceEstimateHistory[]
  invoiceInvoiceFromOrganizationIdToorganization   Invoice[]                             @relation(name: "invoiceInvoiceFromOrganizationIdToorganization")
  invoiceInvoiceOrganizationIdToorganization       Invoice[]                             @relation(name: "invoiceInvoiceOrganizationIdToorganization")
  invoiceItem                                      InvoiceItem[]
  isActive                                         Boolean                               @default(true)
  isDefault                                        Boolean                               @default(false)
  isRemoveIdleTime                                 Boolean                               @default(false)
  issueType                                        IssueType[]
  jobPreset                                        JobPreset[]
  jobPresetUpworkJobSearchCriterion                JobPresetUpworkJobSearchCriterion[]
  jobSearchCategory                                JobSearchCategory[]
  jobSearchOccupation                              JobSearchOccupation[]
  keyResult                                        KeyResult[]
  keyResultTemplate                                KeyResultTemplate[]
  keyResultUpdate                                  KeyResultUpdate[]
  knowledgeBase                                    KnowledgeBase[]
  knowledgeBaseArticle                             KnowledgeBaseArticle[]
  knowledgeBaseAuthor                              KnowledgeBaseAuthor[]
  merchant                                         Merchant[]
  minimumProjectSize                               String?                               @db.VarChar
  name                                             String                                @db.VarChar
  numberFormat                                     String?                               @db.VarChar
  officialName                                     String?                               @db.VarChar
  organizationAward                                OrganizationAward[]
  organizationContact                              OrganizationContact[]
  organizationDepartment                           OrganizationDepartment[]
  organizationDocument                             OrganizationDocument[]
  organizationEmploymentType                       OrganizationEmploymentType[]
  organizationLanguage                             OrganizationLanguage[]
  organizationPosition                             OrganizationPosition[]
  organizationProject                              OrganizationProject[]
  organizationRecurringExpense                     OrganizationRecurringExpense[]
  organizationSprint                               OrganizationSprint[]
  organizationTaskSetting                          OrganizationTaskSetting[]
  organizationTeam                                 OrganizationTeam[]
  organizationTeamEmployee                         OrganizationTeamEmployee[]
  organizationTeamJoinRequest                      OrganizationTeamJoinRequest[]
  organizationVendor                               OrganizationVendor[]
  overview                                         String?                               @db.VarChar
  payment                                          Payment[]
  pipeline                                         Pipeline[]
  pipelineStage                                    PipelineStage[]
  product                                          Product[]
  productCategory                                  ProductCategory[]
  productCategoryTranslation                       ProductCategoryTranslation[]
  productOption                                    ProductOption[]
  productOptionGroup                               ProductOptionGroup[]
  productOptionGroupTranslation                    ProductOptionGroupTranslation[]
  productOptionTranslation                         ProductOptionTranslation[]
  productTranslation                               ProductTranslation[]
  productType                                      ProductType[]
  productTypeTranslation                           ProductTypeTranslation[]
  productVariant                                   ProductVariant[]
  productVariantPrice                              ProductVariantPrice[]
  productVariantSetting                            ProductVariantSetting[]
  profileLink                                      String?                               @map("profile_link") @db.VarChar
  proposal                                         Proposal[]
  regionCode                                       String?                               @db.VarChar
  registrationDate                                 DateTime?                             @db.Timestamp(6)
  reportOrganization                               ReportOrganization[]
  requestApproval                                  RequestApproval[]
  requestApprovalEmployee                          RequestApprovalEmployee[]
  requestApprovalTeam                              RequestApprovalTeam[]
  requireClient                                    Boolean                               @default(false)
  requireDescription                               Boolean                               @default(false)
  requireProject                                   Boolean                               @default(false)
  requireReason                                    Boolean                               @default(false)
  requireTask                                      Boolean                               @default(false)
  screenshot                                       Screenshot[]
  separateInvoiceItemTaxAndDiscount                Boolean?
  shortDescription                                 String?                               @map("short_description") @db.VarChar
  showBonusesPaid                                  Boolean?                              @map("show_bonuses_paid")
  showClients                                      Boolean?                              @map("show_clients")
  showClientsCount                                 Boolean?                              @map("show_clients_count")
  showEmployeesCount                               Boolean?                              @map("show_employees_count")
  showIncome                                       Boolean?                              @map("show_income")
  showMinimumProjectSize                           Boolean?                              @map("show_minimum_project_size")
  showProfits                                      Boolean?                              @map("show_profits")
  showProjectsCount                                Boolean?                              @map("show_projects_count")
  showTotalHours                                   Boolean?                              @map("show_total_hours")
  skill                                            Skill[]
  skillOrganization                                SkillOrganization[]
  startWeekOn                                      String?                               @db.VarChar
  tag                                              Tag[]
  tagOrganization                                  TagOrganization[]
  task                                             Task[]
  taskLinkedIssues                                 TaskLinkedIssue[]
  taskPriority                                     TaskPriority[]
  taskRelatedIssueType                             TaskRelatedIssueType[]
  taskSize                                         TaskSize[]
  taskStatus                                       TaskStatus[]
  taskVersion                                      TaskVersion[]
  taxId                                            String?                               @db.VarChar
  tenant                                           Tenant?                               @relation(fields: [tenantId], references: [id])
  tenantId                                         String?
  timeFormat                                       Int                                   @default(12)
  timeLog                                          TimeLog[]
  timeOffPolicy                                    TimeOffPolicy[]
  timeOffRequest                                   TimeOffRequest[]
  timesheet                                        Timesheet[]
  timeSlot                                         TimeSlot[]
  timeSlotMinute                                   TimeSlotMinute[]
  timeZone                                         String?                               @db.VarChar
  totalEmployees                                   Int?
  updatedAt                                        DateTime                              @default(now()) @db.Timestamp(6)
  upworkOrganizationId                             String?                               @db.VarChar
  userOrganization                                 UserOrganization[]
  valueDate                                        DateTime?                             @db.Timestamp(6)
  warehouse                                        Warehouse[]
  warehouseProduct                                 WarehouseProduct[]
  warehouseProductVariant                          WarehouseProductVariant[]
  website                                          String?                               @db.VarChar

  @@index([isDefault], map: "IDX_03e5eecc2328eb545ff748cbdd")
  @@index([currency], map: "IDX_15458cef74076623c270500053")
  @@index([defaultValueDateType], map: "IDX_2360aa7a4b5ab99e026584f305")
  @@index([profileLink], map: "IDX_40460ab803bf6e5a62b75a35c5")
  @@index([imageId], map: "IDX_47b6a97e09895a06606a4a8042")
  @@index([banner], map: "IDX_6cc2b2052744e352834a4c9e78")
  @@index([tenantId], map: "IDX_745a293c8b2c750bc421fa0633")
  @@index([contactId], map: "IDX_7965db2b12872551b586f76dd7")
  @@index([overview], map: "IDX_9ea70bf5c390b00e7bb96b86ed")
  @@index([totalEmployees], map: "IDX_b03a8a28f6ebdb6df8f630216b")
  @@index([name], map: "IDX_c21e615583a3ebbb0977452afb")
  @@index([clientFocus], map: "IDX_c75285bf286b17c7ca5537857b")
  @@index([shortDescription], map: "IDX_f37d866c3326eca5f579cef35c")
  @@map("organization")
}

model OrganizationAward {
  id             String        @id(map: "PK_85fa7182b9cf348b6ad11af9505") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt      DateTime      @default(now()) @db.Timestamp(6)
  updatedAt      DateTime      @default(now()) @db.Timestamp(6)
  name           String        @db.VarChar
  year           String        @db.VarChar
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?
  tenant         Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId       String?

  @@index([organizationId], map: "IDX_2e0d21aab892b5993abaac09bc")
  @@index([name], map: "IDX_31626e7d39eb95b710d5a2d80f")
  @@index([tenantId], map: "IDX_af6423760433da72002a7f369e")
  @@map("organization_award")
}

model OrganizationContact {
  id                          String                               @id(map: "PK_1b315ca37fec4b8bdbdf1b59d28") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                   DateTime                             @default(now()) @db.Timestamp(6)
  updatedAt                   DateTime                             @default(now()) @db.Timestamp(6)
  name                        String                               @db.VarChar
  primaryEmail                String?                              @db.VarChar
  primaryPhone                String?                              @db.VarChar
  notes                       String?                              @db.VarChar
  imageUrl                    String?                              @db.VarChar(500)
  budget                      Int?
  createdBy                   String?                              @db.VarChar
  inviteStatus                EnumOrganizationContactInviteStatus?
  contactType                 EnumOrganizationContactContactType   @default(CLIENT)
  budgetType                  EnumOrganizationContactBudgetType?   @default(cost)
  organization                Organization?                        @relation(fields: [organizationId], references: [id])
  organizationId              String?
  imageAsset                  ImageAsset?                          @relation(fields: [imageId], references: [id])
  imageId                     String?
  contact                     Contact?                             @relation(fields: [contactId], references: [id])
  contactId                   String?                              @unique
  tenant                      Tenant?                              @relation(fields: [tenantId], references: [id])
  tenantId                    String?
  deal                        Deal?
  expense                     Expense[]
  income                      Income[]
  inviteOrganizationContact   InviteOrganizationContact[]
  invoice                     Invoice[]
  organizationContactEmployee OrganizationContactEmployee[]
  organizationProject         OrganizationProject[]
  payment                     Payment[]
  proposal                    Proposal[]
  tagOrganizationContact      TagOrganizationContact[]
  timeLog                     TimeLog[]

  @@index([organizationId], map: "IDX_6200736cb4d3617b004e5b647f")
  @@index([imageId], map: "IDX_8cfcdc6bc8fb55e273d9ace5fd")
  @@index([contactId], map: "IDX_a86d2e378b953cb39261f457d2")
  @@index([name], map: "IDX_de33f92e042365d196d959e774")
  @@index([tenantId], map: "IDX_e68c43e315ad3aaea4e99cf461")
  @@map("organization_contact")
}

model OrganizationContactEmployee {
  organizationContact   OrganizationContact @relation(fields: [organizationContactId], references: [id])
  organizationContactId String
  employee              Employee            @relation(fields: [employeeId], references: [id])
  employeeId            String
  id                    String              @id @default(cuid())

  @@unique([employeeId, organizationContactId], map: "PK_79df0e2f3e32dcea7eac509c08f")
  @@index([organizationContactId], map: "IDX_beffeb7f338fa98354948c0789")
  @@index([employeeId], map: "IDX_cd2bd8302bfb6093d0908c36dc")
  @@map("organization_contact_employee")
}

model OrganizationDepartment {
  id                             String                           @id(map: "PK_6bc7ba541f5d542483eea88d4f8") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                      DateTime                         @default(now()) @db.Timestamp(6)
  updatedAt                      DateTime                         @default(now()) @db.Timestamp(6)
  name                           String                           @db.VarChar
  tenant                         Tenant?                          @relation(fields: [tenantId], references: [id])
  tenantId                       String?
  organization                   Organization?                    @relation(fields: [organizationId], references: [id])
  organizationId                 String?
  candidateDepartment            CandidateDepartment[]
  inviteOrganizationDepartment   InviteOrganizationDepartment[]
  organizationDepartmentEmployee OrganizationDepartmentEmployee[]
  tagOrganizationDepartment      TagOrganizationDepartment[]

  @@index([name], map: "IDX_91b652409dc1fb2f712590dd21")
  @@index([tenantId], map: "IDX_b3644ff7cd65239e29d292a41d")
  @@index([organizationId], map: "IDX_c61a562a2379d1c0077fe7de33")
  @@map("organization_department")
}

model OrganizationDepartmentEmployee {
  employee                 Employee               @relation(fields: [employeeId], references: [id])
  employeeId               String
  organizationDepartment   OrganizationDepartment @relation(fields: [organizationDepartmentId], references: [id])
  organizationDepartmentId String
  id                       String                 @id @default(cuid())

  @@unique([organizationDepartmentId, employeeId], map: "PK_a31d2a838b7b0fce2b6213071e5")
  @@index([employeeId], map: "IDX_0d4f83695591ae3c98a0544ac8")
  @@index([organizationDepartmentId], map: "IDX_c34e79a3aa682bbd3f0e8cf4c4")
  @@map("organization_department_employee")
}

model OrganizationDocument {
  id             String        @id(map: "PK_89fbc3c423bb134c8dd015958e1") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt      DateTime      @default(now()) @db.Timestamp(6)
  updatedAt      DateTime      @default(now()) @db.Timestamp(6)
  name           String        @db.VarChar
  documentUrl    String?       @db.VarChar
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?
  tenant         Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId       String?
  imageAsset     ImageAsset?   @relation(fields: [documentId], references: [id])
  documentId     String?

  @@index([organizationId], map: "IDX_1057ec001a4c6b258658143047")
  @@index([tenantId], map: "IDX_4bc83945c022a862a33629ff1e")
  @@index([documentId], map: "IDX_c129dee7d1cb84e01e69b5e2c6")
  @@map("organization_document")
}

model OrganizationEmploymentType {
  id                                 String                               @id(map: "PK_536ca16fa8ff67c78030f1a102f") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                          DateTime                             @default(now()) @db.Timestamp(6)
  updatedAt                          DateTime                             @default(now()) @db.Timestamp(6)
  name                               String                               @db.VarChar
  tenant                             Tenant?                              @relation(fields: [tenantId], references: [id])
  tenantId                           String?
  organization                       Organization?                        @relation(fields: [organizationId], references: [id])
  organizationId                     String?
  candidateEmploymentType            CandidateEmploymentType[]
  organizationEmploymentTypeEmployee OrganizationEmploymentTypeEmployee[]
  tagOrganizationEmploymentType      TagOrganizationEmploymentType[]

  @@index([tenantId], map: "IDX_227b5bd9867287cbbeece8f6ba")
  @@index([organizationId], map: "IDX_a583cfe32f492f5ba99b7bb205")
  @@map("organization_employment_type")
}

model OrganizationEmploymentTypeEmployee {
  organizationEmploymentType   OrganizationEmploymentType @relation(fields: [organizationEmploymentTypeId], references: [id])
  organizationEmploymentTypeId String
  employee                     Employee                   @relation(fields: [employeeId], references: [id])
  employeeId                   String
  id                           String                     @id @default(cuid())

  @@unique([organizationEmploymentTypeId, employeeId], map: "PK_cf7c1f2fbfb4fccaa5564b5edc3")
  @@index([organizationEmploymentTypeId], map: "IDX_3bfdb894d67e6a29aa95780bb4")
  @@index([employeeId], map: "IDX_3ed17d3e624435e9f2ad71e058")
  @@map("organization_employment_type_employee")
}

model OrganizationLanguage {
  id             String        @id(map: "PK_71bde6f6a7875239ffbeff339b7") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt      DateTime      @default(now()) @db.Timestamp(6)
  updatedAt      DateTime      @default(now()) @db.Timestamp(6)
  name           String        @db.VarChar
  level          String        @db.VarChar
  language       Language      @relation(fields: [languageCode], references: [id])
  languageCode   String
  tenant         Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId       String?
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?

  @@index([languageCode], map: "IDX_020516e74a57cb85d75381e841")
  @@index([tenantId], map: "IDX_225e476592214e32e117a85213")
  @@index([organizationId], map: "IDX_4513931e2d530f78d7144c8c7c")
  @@map("organization_language")
}

model OrganizationPosition {
  id                      String                    @id(map: "PK_b2340755b17ab4cde329463700b") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt               DateTime                  @default(now()) @db.Timestamp(6)
  updatedAt               DateTime                  @default(now()) @db.Timestamp(6)
  name                    String                    @db.VarChar
  organization            Organization?             @relation(fields: [organizationId], references: [id])
  organizationId          String?
  tenant                  Tenant?                   @relation(fields: [tenantId], references: [id])
  tenantId                String?
  candidate               Candidate[]
  employee                Employee[]
  tagOrganizationPosition TagOrganizationPosition[]

  @@index([name], map: "IDX_3f02c20145af9997253531349c")
  @@index([organizationId], map: "IDX_a0409e39f23ff6d418f2c03df5")
  @@index([tenantId], map: "IDX_a8f497b1006ec967964abb0d49")
  @@map("organization_position")
}

model OrganizationProject {
  id                          String                        @id(map: "PK_81bf90b67fca82af6657f0bfd91") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                   DateTime                      @default(now()) @db.Timestamp(6)
  updatedAt                   DateTime                      @default(now()) @db.Timestamp(6)
  name                        String                        @db.VarChar
  startDate                   DateTime?                     @db.Timestamp(6)
  endDate                     DateTime?                     @db.Timestamp(6)
  billing                     String?                       @db.VarChar
  currency                    String?                       @db.VarChar
  publicField                 Boolean?                      @map("public")
  owner                       String?                       @db.VarChar
  taskListType                String                        @default("GRID") @db.VarChar
  code                        String?                       @db.VarChar
  description                 String?                       @db.VarChar
  color                       String?                       @db.VarChar
  billable                    Boolean?
  billingFlat                 Boolean?
  openSource                  Boolean?
  projectUrl                  String?                       @db.VarChar
  openSourceProjectUrl        String?                       @db.VarChar
  budget                      Int?
  budgetType                  String?                       @default("cost")
  membersCount                Int?                          @default(0)
  imageUrl                    String?                       @db.VarChar(500)
  imageAsset                  ImageAsset?                   @relation(fields: [imageId], references: [id])
  imageId                     String?
  tenant                      Tenant?                       @relation(fields: [tenantId], references: [id])
  tenantId                    String?
  organization                Organization?                 @relation(fields: [organizationId], references: [id])
  organizationId              String?
  organizationContact         OrganizationContact?          @relation(fields: [organizationContactId], references: [id])
  organizationContactId       String?
  activity                    Activity[]
  expense                     Expense[]
  inviteOrganizationProject   InviteOrganizationProject[]
  invoiceItem                 InvoiceItem[]
  issueType                   IssueType[]
  keyResult                   KeyResult[]
  organizationProjectEmployee OrganizationProjectEmployee[]
  organizationSprint          OrganizationSprint[]
  organizationTaskSetting     OrganizationTaskSetting[]
  payment                     Payment[]
  tagOrganizationProject      TagOrganizationProject[]
  task                        Task[]
  taskPriority                TaskPriority[]
  taskRelatedIssueType        TaskRelatedIssueType[]
  taskSize                    TaskSize[]
  taskStatus                  TaskStatus[]
  taskVersion                 TaskVersion[]
  timeLog                     TimeLog[]

  @@index([imageId], map: "IDX_063324fdceb51f7086e401ed2c")
  @@index([name], map: "IDX_37215da8dee9503d759adb3538")
  @@index([tenantId], map: "IDX_7cf84e8b5775f349f81a1f3cc4")
  @@index([organizationId], map: "IDX_9d8afc1e1e64d4b7d48dd2229d")
  @@index([organizationContactId], map: "IDX_bc1e32c13683dbb16ada1c6da1")
  @@index([currency], map: "IDX_c210effeb6314d325bc024d21e")
  @@map("organization_project")
}

model OrganizationProjectEmployee {
  organizationProject   OrganizationProject @relation(fields: [organizationProjectId], references: [id])
  organizationProjectId String
  employee              Employee            @relation(fields: [employeeId], references: [id])
  employeeId            String
  id                    String              @id @default(cuid())

  @@unique([employeeId, organizationProjectId], map: "PK_5be2464327d74ba4e2b2240aac4")
  @@index([organizationProjectId], map: "IDX_2ba868f42c2301075b7c141359")
  @@index([employeeId], map: "IDX_6b5b0c3d994f59d9c800922257")
  @@map("organization_project_employee")
}

model OrganizationRecurringExpense {
  id                       String        @id(map: "PK_dcb949b0c34d2a0297ce8bcea73") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                DateTime      @default(now()) @db.Timestamp(6)
  updatedAt                DateTime      @default(now()) @db.Timestamp(6)
  startDay                 Int
  startMonth               Int
  startYear                Int
  startDate                DateTime      @db.Timestamp(6)
  endDay                   Int?
  endMonth                 Int?
  endYear                  Int?
  endDate                  DateTime?     @db.Timestamp(6)
  categoryName             String        @db.VarChar
  value                    Decimal       @db.Decimal
  currency                 String        @db.VarChar
  splitExpense             Boolean?
  parentRecurringExpenseId String?       @db.VarChar
  tenant                   Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId                 String?
  organization             Organization? @relation(fields: [organizationId], references: [id])
  organizationId           String?

  @@index([tenantId], map: "IDX_0b19a287858af40661bd3eb741")
  @@index([currency], map: "IDX_61387780d015923453f4b015b4")
  @@index([parentRecurringExpenseId], map: "IDX_637ac2c467df4bc3b71795a866")
  @@index([organizationId], map: "IDX_8a12e7a0d47d3c6a6b35f7984e")
  @@index([categoryName], map: "IDX_f1e5497ee6be7ba3f2ee90bf4b")
  @@map("organization_recurring_expense")
}

model OrganizationSprint {
  id                  String              @id(map: "PK_1711f05c8de98d9ccf00acbccd2") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt           DateTime            @default(now()) @db.Timestamp(6)
  updatedAt           DateTime            @default(now()) @db.Timestamp(6)
  name                String              @db.VarChar
  goal                String?             @db.VarChar
  tenant              Tenant?             @relation(fields: [tenantId], references: [id])
  tenantId            String?
  length              Int                 @default(7)
  startDate           DateTime?           @db.Timestamp(6)
  endDate             DateTime?           @db.Timestamp(6)
  dayStart            Int?
  task                Task[]
  isActive            Boolean?
  organization        Organization?       @relation(fields: [organizationId], references: [id])
  organizationId      String?
  organizationProject OrganizationProject @relation(fields: [projectId], references: [id])
  projectId           String

  @@index([organizationId], map: "IDX_8a1fe8afb3aa672bae5993fbe7")
  @@index([tenantId], map: "IDX_f57ad03c4e471bd8530494ea63")
  @@map("organization_sprint")
}

model OrganizationTaskSetting {
  isTasksCommentsEnabled                Boolean              @default(true)
  id                                    String               @id(map: "PK_7f5ac995aeaec3033889398147c") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt                             DateTime             @default(now()) @db.Timestamp(6)
  updatedAt                             DateTime             @default(now()) @db.Timestamp(6)
  isTasksPrivacyEnabled                 Boolean              @default(true)
  isTasksMultipleAssigneesEnabled       Boolean              @default(true)
  isTasksManualTimeEnabled              Boolean              @default(true)
  isTasksGroupEstimationEnabled         Boolean              @default(true)
  isTasksHistoryEnabled                 Boolean              @default(true)
  isTasksAcceptanceCriteriaEnabled      Boolean              @default(true)
  isTasksDraftsEnabled                  Boolean              @default(true)
  isTasksEstimationInHoursEnabled       Boolean              @default(true)
  isTasksEstimationInStoryPointsEnabled Boolean              @default(true)
  isTasksProofOfCompletionEnabled       Boolean              @default(true)
  tasksProofOfCompletionType            String               @default("PRIVATE") @db.VarChar
  isTasksLinkedEnabled                  Boolean              @default(true)
  isTasksNotifyLeftEnabled              Boolean              @default(true)
  tasksNotifyLeftPeriodDays             Int                  @default(7)
  isTasksAutoCloseEnabled               Boolean              @default(true)
  tasksAutoClosePeriodDays              Int                  @default(7)
  isTasksAutoArchiveEnabled             Boolean              @default(true)
  tasksAutoArchivePeriodDays            Int                  @default(7)
  isTasksAutoStatusEnabled              Boolean              @default(true)
  organizationProject                   OrganizationProject? @relation(fields: [projectId], references: [id])
  projectId                             String?
  organizationTeam                      OrganizationTeam?    @relation(fields: [organizationTeamId], references: [id])
  organizationTeamId                    String?
  tenant                                Tenant?              @relation(fields: [tenantId], references: [id])
  tenantId                              String?
  organization                          Organization?        @relation(fields: [organizationId], references: [id])
  organizationId                        String?

  @@index([projectId], map: "IDX_19ab7adf33199bc6f913db277d")
  @@index([organizationTeamId], map: "IDX_20a290f166c0810eafbf271717")
  @@index([tenantId], map: "IDX_582768159ef0c749e8552ea9bc")
  @@index([organizationId], map: "IDX_5830901876e426adfc15fb7341")
  @@map("organization_task_setting")
}

model OrganizationTeam {
  id                          String                        @id(map: "PK_edd4226d4171cbe90fd0ee16a2a") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                   DateTime                      @default(now()) @db.Timestamp(6)
  updatedAt                   DateTime                      @default(now()) @db.Timestamp(6)
  name                        String                        @db.VarChar
  prefix                      String?                       @db.VarChar
  publicField                 Boolean?                      @default(false) @map("public")
  profileLink                 String?                       @map("profile_link") @db.VarChar
  equipmentSharesTeams        EquipmentSharesTeam[]
  logo                        String?                       @db.VarChar
  color                       String?                       @db.VarChar
  emoji                       String?                       @db.VarChar
  teamSize                    String?                       @db.VarChar
  tenant                      Tenant?                       @relation(fields: [tenantId], references: [id])
  tenantId                    String?
  imageAsset                  ImageAsset?                   @relation(fields: [imageId], references: [id])
  imageId                     String?
  user                        User?                         @relation(fields: [createdById], references: [id])
  createdById                 String?
  organization                Organization?                 @relation(fields: [organizationId], references: [id])
  organizationId              String?
  goal                        Goal[]
  inviteOrganizationTeam      InviteOrganizationTeam[]
  issueType                   IssueType[]
  organizationTaskSetting     OrganizationTaskSetting[]
  organizationTeamEmployee    OrganizationTeamEmployee[]
  organizationTeamJoinRequest OrganizationTeamJoinRequest[]
  organizationTeamTasksTask   OrganizationTeamTasksTask[]
  requestApprovalTeam         RequestApprovalTeam[]
  tag                         Tag[]
  tagOrganizationTeam         TagOrganizationTeam[]
  taskPriority                TaskPriority[]
  taskRelatedIssueType        TaskRelatedIssueType[]
  taskSize                    TaskSize[]
  taskStatus                  TaskStatus[]
  taskTeam                    TaskTeam[]
  taskVersion                 TaskVersion[]
  timeLog                     TimeLog[]

  @@index([name], map: "IDX_103ae3eb65f4b091efc55cb532")
  @@index([tenantId], map: "IDX_176f5ed3c4534f3110d423d569")
  @@index([imageId], map: "IDX_51e91be110fa0b8e70066f5727")
  @@index([createdById], map: "IDX_da625f694eb1e23e585f301008")
  @@index([profileLink], map: "IDX_e22ab0f1236b1a07785b641727")
  @@index([organizationId], map: "IDX_eef1c19a0cb5321223cfe3286c")
  @@map("organization_team")
}

model OrganizationTeamEmployee {
  id                 String           @id(map: "PK_d67cf2683dff6b64a436a354b57") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt          DateTime         @default(now()) @db.Timestamp(6)
  updatedAt          DateTime         @default(now()) @db.Timestamp(6)
  isTrackingEnabled  Boolean?         @default(true)
  organizationTeam   OrganizationTeam @relation(fields: [organizationTeamId], references: [id])
  organizationTeamId String
  employee           Employee         @relation(fields: [employeeId], references: [id])
  employeeId         String
  role               Role?            @relation(fields: [roleId], references: [id])
  roleId             String?
  organization       Organization?    @relation(fields: [organizationId], references: [id])
  organizationId     String?
  tenant             Tenant?          @relation(fields: [tenantId], references: [id])
  tenantId           String?

  @@index([organizationTeamId], map: "IDX_8dc83cdd7c519d73afc0d8bdf0")
  @@index([employeeId], map: "IDX_a2a5601d799fbfc29c17b99243")
  @@index([roleId], map: "IDX_ce83034f38496f5fe3f1979697")
  @@index([organizationId], map: "IDX_d8eba1c0e500c60be1b69c1e77")
  @@index([tenantId], map: "IDX_fe12e1b76bbb76209134d9bdc2")
  @@map("organization_team_employee")
}

model OrganizationTeamJoinRequest {
  id                 String            @id(map: "PK_131578c98f3a9e8a72b9a8a1374") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt          DateTime          @default(now()) @db.Timestamp(6)
  updatedAt          DateTime          @default(now()) @db.Timestamp(6)
  email              String            @db.VarChar
  fullName           String?           @db.VarChar
  linkAddress        String?           @db.VarChar
  position           String?           @db.VarChar
  status             String?           @db.VarChar
  code               Int?
  token              String?           @db.VarChar
  expiredAt          DateTime?         @db.Timestamp(6)
  organizationTeam   OrganizationTeam? @relation(fields: [organizationTeamId], references: [id])
  organizationTeamId String?
  user               User?             @relation(fields: [userId], references: [id])
  userId             String?
  organization       Organization?     @relation(fields: [organizationId], references: [id])
  organizationId     String?
  tenant             Tenant?           @relation(fields: [tenantId], references: [id])
  tenantId           String?

  @@index([organizationTeamId], map: "IDX_171b852be7c1f387eca93775aa")
  @@index([userId], map: "IDX_5e73656ce0355347477c42ae19")
  @@index([organizationId], map: "IDX_c15823bf3f63b1fe331d9de662")
  @@index([tenantId], map: "IDX_d9529008c733cb90044b8c2ad6")
  @@map("organization_team_join_request")
}

model OrganizationTeamTasksTask {
  organizationTeam   OrganizationTeam @relation(fields: [organizationTeamId], references: [id])
  organizationTeamId String
  task               Task             @relation(fields: [taskId], references: [id])
  taskId             String
  id                 String           @id @default(cuid())

  @@unique([organizationTeamId, taskId], map: "PK_248c1e62556919cafd26cd67052")
  @@index([organizationTeamId], map: "IDX_2a6fb43dc7e7aebcda95e32a10")
  @@index([taskId], map: "IDX_d15fbe1e1d9c1f56651d8d3831")
  @@map("organization_team_tasks_task")
}

model OrganizationVendor {
  id                    String                  @id(map: "PK_5573f4c64e453e02d1354552b5c") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt             DateTime                @default(now()) @db.Timestamp(6)
  updatedAt             DateTime                @default(now()) @db.Timestamp(6)
  name                  String                  @db.VarChar
  email                 String?                 @db.VarChar
  phone                 String?                 @db.VarChar
  website               String?                 @db.VarChar
  organization          Organization?           @relation(fields: [organizationId], references: [id])
  organizationId        String?
  tenant                Tenant?                 @relation(fields: [tenantId], references: [id])
  tenantId              String?
  expense               Expense[]
  tagOrganizationVendor TagOrganizationVendor[]

  @@index([organizationId], map: "IDX_56dd132aa3743cfa9b034d020e")
  @@index([tenantId], map: "IDX_7e0bf6063e1728c9813d5da7ca")
  @@index([name], map: "IDX_e56e80136b07ecd52545368611")
  @@map("organization_vendor")
}

model PasswordReset {
  id        String   @id(map: "PK_8515e60a2cc41584fa4784f52ce") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @default(now()) @db.Timestamp(6)
  email     String   @db.VarChar
  token     String   @db.VarChar

  @@index([email], map: "IDX_1c88db6e50f0704688d1f1978c")
  @@index([token], map: "IDX_36e929b98372d961bb63bd4b4e")
  @@map("password_reset")
}

model Payment {
  invoice               Invoice?                  @relation(fields: [invoiceId], references: [id])
  invoiceId             String?
  organizationProject   OrganizationProject?      @relation(fields: [projectId], references: [id])
  projectId             String?
  organization          Organization?             @relation(fields: [organizationId], references: [id])
  organizationId        String?
  id                    String                    @id(map: "PK_fcaec7df5adf9cac408c686b2ab") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt             DateTime                  @default(now()) @db.Timestamp(6)
  updatedAt             DateTime                  @default(now()) @db.Timestamp(6)
  paymentDate           DateTime?                 @db.Timestamp(6)
  amount                Decimal?                  @db.Decimal
  note                  String?                   @db.VarChar
  currency              String                    @db.VarChar
  overdue               Boolean?
  paymentMethod         EnumPaymentPaymentMethod?
  user                  User                      @relation(fields: [recordedById], references: [id])
  recordedById          String
  employee              Employee?                 @relation(fields: [employeeId], references: [id])
  employeeId            String?
  tenant                Tenant?                   @relation(fields: [tenantId], references: [id])
  tenantId              String?
  organizationContact   OrganizationContact?      @relation(fields: [organizationContactId], references: [id])
  organizationContactId String?
  tagPayment            TagPayment[]

  @@index([recordedById], map: "IDX_3f13c738eff604a85700746ec7")
  @@index([employeeId], map: "IDX_62ef561a3bb084a7d12dad8a2d")
  @@index([tenantId], map: "IDX_6959c37c3acf0832103a253570")
  @@index([organizationContactId], map: "IDX_82753b9e315af84b20eaf84d77")
  @@index([invoiceId], map: "IDX_87223c7f1d4c2ca51cf6992784")
  @@index([projectId], map: "IDX_8846e403ec45e1ad8c309f91a3")
  @@index([organizationId], map: "IDX_be7fcc9fb8cd5a74cb602ec6c9")
  @@map("payment")
}

model Pipeline {
  id             String          @id(map: "PK_df8aedd50509192d995535d68cd") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt      DateTime        @default(now()) @db.Timestamp(6)
  updatedAt      DateTime        @default(now()) @db.Timestamp(6)
  description    String?
  name           String          @db.VarChar
  isActive       Boolean
  tenant         Tenant?         @relation(fields: [tenantId], references: [id])
  tenantId       String?
  organization   Organization?   @relation(fields: [organizationId], references: [id])
  organizationId String?
  pipelineStage  PipelineStage[]

  @@index([tenantId], map: "IDX_683274c59fb08b21249096e305")
  @@index([organizationId], map: "IDX_873ade98fbd6ca71c8b4d1bbca")
  @@map("pipeline")
}

model PipelineStage {
  id             String        @id(map: "PK_1d98a4c60c2cf5e2bc816a3e54d") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt      DateTime      @default(now()) @db.Timestamp(6)
  updatedAt      DateTime      @default(now()) @db.Timestamp(6)
  description    String?
  index          Int
  name           String        @db.VarChar
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?
  tenant         Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId       String?
  pipeline       Pipeline      @relation(fields: [pipelineId], references: [id])
  pipelineId     String
  deal           Deal[]

  @@index([organizationId], map: "IDX_04d16bdd72668de12c3e41a85a")
  @@index([tenantId], map: "IDX_28965bf63ad4c0976892d0fd5e")
  @@map("pipeline_stage")
}

model Product {
  id                 String               @id(map: "PK_bebc9158e480b949565b4dc7a82") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt          DateTime             @default(now()) @db.Timestamp(6)
  updatedAt          DateTime             @default(now()) @db.Timestamp(6)
  enabled            Boolean              @default(true)
  code               String               @db.VarChar
  imageUrl           String?              @db.VarChar
  tenant             Tenant?              @relation(fields: [tenantId], references: [id])
  tenantId           String?
  organization       Organization?        @relation(fields: [organizationId], references: [id])
  organizationId     String?
  productType        ProductType?         @relation(fields: [productTypeId], references: [id])
  productTypeId      String?
  imageAsset         ImageAsset?          @relation(fields: [featuredImageId], references: [id])
  featuredImageId    String?
  productCategory    ProductCategory?     @relation(fields: [productCategoryId], references: [id])
  productCategoryId  String?
  invoiceItem        InvoiceItem[]
  productGalleryItem ProductGalleryItem[]
  productOptionGroup ProductOptionGroup[]
  productTranslation ProductTranslation[]
  productVariant     ProductVariant[]
  tagProduct         TagProduct[]
  warehouseProduct   WarehouseProduct[]

  @@index([tenantId], map: "IDX_08293ca31a601d3cd0228120bc")
  @@index([organizationId], map: "IDX_32a4bdd261ec81f4ca6b3abe26")
  @@index([productTypeId], map: "IDX_374bfd0d1b0e1398d7206456d9")
  @@index([featuredImageId], map: "IDX_4627873dbc1af07d732e6eec7b")
  @@index([productCategoryId], map: "IDX_618194d24a7ea86a165d7ec628")
  @@map("product")
}

model ProductCategory {
  id                         String                       @id(map: "PK_0dce9bc93c2d2c399982d04bef1") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                  DateTime                     @default(now()) @db.Timestamp(6)
  updatedAt                  DateTime                     @default(now()) @db.Timestamp(6)
  imageUrl                   String?                      @db.VarChar
  tenant                     Tenant?                      @relation(fields: [tenantId], references: [id])
  tenantId                   String?
  organization               Organization?                @relation(fields: [organizationId], references: [id])
  organizationId             String?
  imageAsset                 ImageAsset?                  @relation(fields: [imageId], references: [id])
  imageId                    String?
  product                    Product[]
  productCategoryTranslation ProductCategoryTranslation[]

  @@index([tenantId], map: "IDX_0a0cf25cd8232a154d1cce2641")
  @@index([organizationId], map: "IDX_853302351eaa4daa39920c270a")
  @@index([imageId], map: "IDX_f38e86bd280ff9c9c7d9cb7839")
  @@map("product_category")
}

model ProductCategoryTranslation {
  id              String          @id(map: "PK_40ac21f239e150f3568da259974") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt       DateTime        @default(now()) @db.Timestamp(6)
  updatedAt       DateTime        @default(now()) @db.Timestamp(6)
  name            String          @db.VarChar
  description     String?         @db.VarChar
  languageCode    String          @db.VarChar
  tenant          Tenant?         @relation(fields: [tenantId], references: [id])
  tenantId        String?
  productCategory ProductCategory @relation(fields: [referenceId], references: [id])
  referenceId     String
  organization    Organization?   @relation(fields: [organizationId], references: [id])
  organizationId  String?

  @@index([tenantId], map: "IDX_27d71aa2e843f07fbf36329be3")
  @@index([referenceId], map: "IDX_586294149d24cd835678878ef1")
  @@index([organizationId], map: "IDX_e46203bf1dbf3291d174f02cb3")
  @@map("product_category_translation")
}

model ProductGalleryItem {
  imageAsset   ImageAsset @relation(fields: [imageAssetId], references: [id])
  imageAssetId String
  product      Product    @relation(fields: [productId], references: [id])
  productId    String
  id           String     @id @default(cuid())

  @@unique([productId, imageAssetId], map: "PK_0e61083f753a1f5503a840f57e3")
  @@index([imageAssetId], map: "IDX_825848065557eac3678b164cee")
  @@index([productId], map: "IDX_f7187fa710c6a5d22f46192637")
  @@map("product_gallery_item")
}

model ProductOption {
  id                                 String                               @id(map: "PK_4cf3c467e9bc764bdd32c4cd938") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                          DateTime                             @default(now()) @db.Timestamp(6)
  updatedAt                          DateTime                             @default(now()) @db.Timestamp(6)
  name                               String                               @db.VarChar
  code                               String?                              @db.VarChar
  organization                       Organization?                        @relation(fields: [organizationId], references: [id])
  organizationId                     String?
  tenant                             Tenant?                              @relation(fields: [tenantId], references: [id])
  tenantId                           String?
  productOptionGroup                 ProductOptionGroup                   @relation(fields: [groupId], references: [id])
  groupId                            String
  productOptionTranslation           ProductOptionTranslation[]
  productVariantOptionsProductOption ProductVariantOptionsProductOption[]

  @@index([organizationId], map: "IDX_47ffb82a65c43f102b7e0efa41")
  @@index([tenantId], map: "IDX_985d235aa5394937c4493262c7")
  @@index([groupId], map: "IDX_a6debf9198e2fbfa006aa10d71")
  @@map("product_option")
}

model ProductOptionGroup {
  id                            String                          @id(map: "PK_d76e92fdbbb5a2e6752ffd4a2c1") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                     DateTime                        @default(now()) @db.Timestamp(6)
  updatedAt                     DateTime                        @default(now()) @db.Timestamp(6)
  name                          String                          @db.VarChar
  tenant                        Tenant?                         @relation(fields: [tenantId], references: [id])
  tenantId                      String?
  organization                  Organization?                   @relation(fields: [organizationId], references: [id])
  organizationId                String?
  product                       Product                         @relation(fields: [productId], references: [id])
  productId                     String
  productOption                 ProductOption[]
  productOptionGroupTranslation ProductOptionGroupTranslation[]

  @@index([tenantId], map: "IDX_462a7fd3ce68935cf973c6709f")
  @@index([organizationId], map: "IDX_4a1430a01b71ecdfcd54b2b6c5")
  @@index([productId], map: "IDX_a6e91739227bf4d442f23c52c7")
  @@map("product_option_group")
}

model ProductOptionGroupTranslation {
  id                 String             @id(map: "PK_44ab19f118175288dff147c4a00") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt          DateTime           @default(now()) @db.Timestamp(6)
  updatedAt          DateTime           @default(now()) @db.Timestamp(6)
  name               String             @db.VarChar
  languageCode       String             @db.VarChar
  organization       Organization?      @relation(fields: [organizationId], references: [id])
  organizationId     String?
  productOptionGroup ProductOptionGroup @relation(fields: [referenceId], references: [id])
  referenceId        String
  tenant             Tenant?            @relation(fields: [tenantId], references: [id])
  tenantId           String?

  @@index([organizationId], map: "IDX_0e2fcc31743e20a45fc3cf0211")
  @@index([referenceId], map: "IDX_c9ce1da98b6d93293daafee63a")
  @@index([tenantId], map: "IDX_fd6b39f1fd1db026b5dcc3c795")
  @@map("product_option_group_translation")
}

model ProductOptionTranslation {
  id             String        @id(map: "PK_69c79a84baabcad3c7328576ac0") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt      DateTime      @default(now()) @db.Timestamp(6)
  updatedAt      DateTime      @default(now()) @db.Timestamp(6)
  name           String        @db.VarChar
  description    String?       @db.VarChar
  languageCode   String        @db.VarChar
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?
  tenant         Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId       String?
  productOption  ProductOption @relation(fields: [referenceId], references: [id])
  referenceId    String

  @@index([organizationId], map: "IDX_4dc2f466cfa3d0b7fef19d1273")
  @@index([tenantId], map: "IDX_9869d7680f48487e584f5d2fca")
  @@index([referenceId], map: "IDX_f43c46e12db0580af320db7738")
  @@map("product_option_translation")
}

model ProductTranslation {
  id             String        @id(map: "PK_62d00fbc92e7a495701d6fee9d5") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt      DateTime      @default(now()) @db.Timestamp(6)
  updatedAt      DateTime      @default(now()) @db.Timestamp(6)
  name           String        @db.VarChar
  description    String?       @db.VarChar
  languageCode   String        @db.VarChar
  tenant         Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId       String?
  product        Product       @relation(fields: [referenceId], references: [id])
  referenceId    String
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?

  @@index([tenantId], map: "IDX_7533fd275bfb3219ce9eb4004c")
  @@index([referenceId], map: "IDX_d24bc28e54f1dc296452a25591")
  @@index([organizationId], map: "IDX_e6abcacc3d3a4f9cf5ca97f2b2")
  @@map("product_translation")
}

model ProductType {
  id                     String                   @id(map: "PK_e0843930fbb8854fe36ca39dae1") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt              DateTime                 @default(now()) @db.Timestamp(6)
  updatedAt              DateTime                 @default(now()) @db.Timestamp(6)
  icon                   String?                  @db.VarChar
  organization           Organization?            @relation(fields: [organizationId], references: [id])
  organizationId         String?
  tenant                 Tenant?                  @relation(fields: [tenantId], references: [id])
  tenantId               String?
  product                Product[]
  productTypeTranslation ProductTypeTranslation[]

  @@index([organizationId], map: "IDX_e4e4120b0c19d3a207ce38d758")
  @@index([tenantId], map: "IDX_f206c807fc7e41fc8a8b6679ae")
  @@map("product_type")
}

model ProductTypeTranslation {
  id             String        @id(map: "PK_add5418ce92da4d30bff0a89af7") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt      DateTime      @default(now()) @db.Timestamp(6)
  updatedAt      DateTime      @default(now()) @db.Timestamp(6)
  name           String        @db.VarChar
  description    String?       @db.VarChar
  languageCode   String        @db.VarChar
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?
  tenant         Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId       String?
  productType    ProductType   @relation(fields: [referenceId], references: [id])
  referenceId    String

  @@index([organizationId], map: "IDX_2dd271bdeb602b8c3956287e33")
  @@index([tenantId], map: "IDX_30aafca59cdb456bf5231f9e46")
  @@index([referenceId], map: "IDX_f4b767c43b4e9130c63382c9b2")
  @@map("product_type_translation")
}

model ProductVariant {
  id                                                                         String                               @id(map: "PK_1ab69c9935c61f7c70791ae0a9f") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                                                                  DateTime                             @default(now()) @db.Timestamp(6)
  updatedAt                                                                  DateTime                             @default(now()) @db.Timestamp(6)
  taxes                                                                      Int                                  @default(0)
  notes                                                                      String?                              @db.VarChar
  quantity                                                                   Int                                  @default(0)
  billingInvoicingPolicy                                                     String                               @default("Quantity ordered") @db.VarChar
  internalReference                                                          String?                              @db.VarChar
  enabled                                                                    Boolean                              @default(true)
  productVariantPriceProductVariantPriceIdToproductVariantPrice              ProductVariantPrice?                 @relation(name: "productVariantPriceProductVariantPriceIdToproductVariantPrice", fields: [priceId], references: [id])
  priceId                                                                    String?                              @unique
  organization                                                               Organization?                        @relation(fields: [organizationId], references: [id])
  organizationId                                                             String?
  product                                                                    Product?                             @relation(fields: [productId], references: [id])
  productId                                                                  String?
  tenant                                                                     Tenant?                              @relation(fields: [tenantId], references: [id])
  tenantId                                                                   String?
  productVariantSettingProductVariantSettingIdToproductVariantSetting        ProductVariantSetting?               @relation(name: "productVariantProductVariantSettingIdToproductVariantSetting", fields: [settingId], references: [id])
  settingId                                                                  String?                              @unique
  imageAsset                                                                 ImageAsset?                          @relation(fields: [imageId], references: [id])
  imageId                                                                    String?
  productVariantOptionsProductOption                                         ProductVariantOptionsProductOption[]
  productVariantPriceProductVariantPriceProductVariantIdToproductVariant     ProductVariantPrice?                 @relation(name: "productVariantPriceProductVariantPriceProductVariantIdToproductVariant")
  productVariantSettingProductVariantSettingProductVariantIdToproductVariant ProductVariantSetting?               @relation(name: "productVariantProductVariantSettingProductVariantIdToproductVariant")
  warehouseProductVariant                                                    WarehouseProductVariant[]

  @@index([organizationId], map: "IDX_6a289b10030ae86903406e3c9b")
  @@index([productId], map: "IDX_6e420052844edf3a5506d863ce")
  @@index([tenantId], map: "IDX_9121e00c4dc3500dc610cf8722")
  @@index([imageId], map: "IDX_b83f23626741630a8629960715")
  @@map("product_variant")
}

model ProductVariantOptionsProductOption {
  productVariant   ProductVariant @relation(fields: [productVariantId], references: [id])
  productVariantId String
  productOption    ProductOption  @relation(fields: [productOptionId], references: [id])
  productOptionId  String
  id               String         @id @default(cuid())

  @@unique([productVariantId, productOptionId], map: "PK_c57de5cb6bb74504180604a00c0")
  @@index([productVariantId], map: "IDX_526f0131260eec308a3bd2b61b")
  @@index([productOptionId], map: "IDX_e96a71affe63c97f7fa2f076da")
  @@map("product_variant_options_product_option")
}

model ProductVariantPrice {
  id                                                                String          @id(map: "PK_ba659ff2940702124e799c5c854") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                                                         DateTime        @default(now()) @db.Timestamp(6)
  updatedAt                                                         DateTime        @default(now()) @db.Timestamp(6)
  unitCost                                                          Int             @default(0)
  unitCostCurrency                                                  String          @default("USD") @db.VarChar
  retailPrice                                                       Int             @default(0)
  retailPriceCurrency                                               String          @default("USD") @db.VarChar
  organization                                                      Organization?   @relation(fields: [organizationId], references: [id])
  organizationId                                                    String?
  productVariantProductVariantPriceProductVariantIdToproductVariant ProductVariant? @relation(name: "productVariantPriceProductVariantPriceProductVariantIdToproductVariant", fields: [productVariantId], references: [id])
  productVariantId                                                  String?         @unique
  tenant                                                            Tenant?         @relation(fields: [tenantId], references: [id])
  tenantId                                                          String?
  productVariantProductVariantPriceIdToproductVariantPrice          ProductVariant? @relation(name: "productVariantPriceProductVariantPriceIdToproductVariantPrice")

  @@index([organizationId], map: "IDX_0cfba32db58a952f58b1e35cf1")
  @@index([tenantId], map: "IDX_7052eaf00a5795afa5ebf35995")
  @@map("product_variant_price")
}

model ProductVariantSetting {
  id                                                                  String          @id(map: "PK_68ee4279dae4e21ca296f0c11d0") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                                                           DateTime        @default(now()) @db.Timestamp(6)
  updatedAt                                                           DateTime        @default(now()) @db.Timestamp(6)
  isSubscription                                                      Boolean         @default(false)
  isPurchaseAutomatically                                             Boolean         @default(false)
  canBeSold                                                           Boolean         @default(true)
  canBePurchased                                                      Boolean         @default(true)
  canBeCharged                                                        Boolean         @default(false)
  canBeRented                                                         Boolean         @default(false)
  isEquipment                                                         Boolean         @default(false)
  trackInventory                                                      Boolean         @default(false)
  tenant                                                              Tenant?         @relation(fields: [tenantId], references: [id])
  tenantId                                                            String?
  productVariantProductVariantSettingProductVariantIdToproductVariant ProductVariant? @relation(name: "productVariantProductVariantSettingProductVariantIdToproductVariant", fields: [productVariantId], references: [id])
  productVariantId                                                    String?         @unique
  organization                                                        Organization?   @relation(fields: [organizationId], references: [id])
  organizationId                                                      String?
  productVariantProductVariantSettingIdToproductVariantSetting        ProductVariant? @relation(name: "productVariantProductVariantSettingIdToproductVariantSetting")

  @@index([tenantId], map: "IDX_2efe48435d4ba480a4bb8b96fa")
  @@index([organizationId], map: "IDX_bed9d45e15866d9b8e87e7a7bf")
  @@map("product_variant_setting")
}

model Proposal {
  id                    String               @id(map: "PK_ca872ecfe4fef5720d2d39e4275") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt             DateTime             @default(now()) @db.Timestamp(6)
  updatedAt             DateTime             @default(now()) @db.Timestamp(6)
  jobPostUrl            String?              @db.VarChar
  valueDate             DateTime?            @db.Timestamp(6)
  jobPostContent        String               @db.VarChar
  proposalContent       String               @db.VarChar
  status                String               @db.VarChar
  tenant                Tenant?              @relation(fields: [tenantId], references: [id])
  tenantId              String?
  organizationContact   OrganizationContact? @relation(fields: [organizationContactId], references: [id])
  organizationContactId String?
  organization          Organization?        @relation(fields: [organizationId], references: [id])
  organizationId        String?
  employee              Employee?            @relation(fields: [employeeId], references: [id])
  employeeId            String?
  tagProposal           TagProposal[]

  @@index([tenantId], map: "IDX_4177329f5e6ddbfb6416592713")
  @@index([jobPostUrl], map: "IDX_cc28a54171231fbd9a127051f0")
  @@index([organizationId], map: "IDX_d59ec6899d435f430799795ad7")
  @@map("proposal")
}

model Report {
  id                 String               @id(map: "PK_99e4d0bea58cba73c57f935a546") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt          DateTime             @default(now()) @db.Timestamp(6)
  updatedAt          DateTime             @default(now()) @db.Timestamp(6)
  name               String               @db.VarChar
  slug               String?              @db.VarChar
  description        String?              @db.VarChar
  image              String?              @db.VarChar
  iconClass          String?              @db.VarChar
  showInMenu         Boolean              @default(false)
  reportCategory     ReportCategory       @relation(fields: [categoryId], references: [id])
  categoryId         String
  reportOrganization ReportOrganization[]

  @@index([name], map: "IDX_6f9ee54eb839117e83b937648d")
  @@index([slug], map: "IDX_ef16fed5f7e6951027502e6458")
  @@map("report")
}

model ReportCategory {
  id        String   @id(map: "PK_43c9bfc713c0e2a3c21c4a583c5") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @default(now()) @db.Timestamp(6)
  name      String   @db.VarChar
  iconClass String?  @db.VarChar
  report    Report[]

  @@index([name], map: "IDX_fa278d337ba5e200d44ade6697")
  @@map("report_category")
}

model ReportOrganization {
  id             String        @id(map: "PK_2ce57f6e69de6bd1b3f28a06db1") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt      DateTime      @default(now()) @db.Timestamp(6)
  updatedAt      DateTime      @default(now()) @db.Timestamp(6)
  isEnabled      Boolean       @default(true)
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?
  report         Report        @relation(fields: [reportId], references: [id])
  reportId       String
  tenant         Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId       String?

  @@index([organizationId], map: "IDX_5193788a3ebc1143bedb74cf72")
  @@index([tenantId], map: "IDX_edf9bd011d7f08e3e18a5becb8")
  @@map("report_organization")
}

model RequestApproval {
  id                      String                    @id(map: "PK_31e8193d208fec62c105223d8ac") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt               DateTime                  @default(now()) @db.Timestamp(6)
  updatedAt               DateTime                  @default(now()) @db.Timestamp(6)
  name                    String                    @db.VarChar
  status                  Int?
  createdBy               String?                   @db.VarChar
  createdByName           String?                   @db.VarChar
  minCount                Int?                      @map("min_count")
  requestId               String?                   @db.VarChar
  requestType             String?                   @db.VarChar
  approvalPolicy          ApprovalPolicy?           @relation(fields: [approvalPolicyId], references: [id])
  approvalPolicyId        String?
  organization            Organization?             @relation(fields: [organizationId], references: [id])
  organizationId          String?
  tenant                  Tenant?                   @relation(fields: [tenantId], references: [id])
  tenantId                String?
  requestApprovalEmployee RequestApprovalEmployee[]
  requestApprovalTeam     RequestApprovalTeam[]
  tagRequestApproval      TagRequestApproval[]

  @@index([approvalPolicyId], map: "IDX_26bb3420001d31337393ed05bc")
  @@index([organizationId], map: "IDX_8343741e7929043b2a7de89f73")
  @@index([tenantId], map: "IDX_9feaa23ed7bc47d51315e304bb")
  @@index([name], map: "IDX_c63fafc733ff8ab37dede8ffec")
  @@map("request_approval")
}

model RequestApprovalEmployee {
  id                String          @id(map: "PK_0f6e94eb31b0ae7e8d43523fa2e") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt         DateTime        @default(now()) @db.Timestamp(6)
  updatedAt         DateTime        @default(now()) @db.Timestamp(6)
  status            Int?
  organization      Organization?   @relation(fields: [organizationId], references: [id])
  organizationId    String?
  requestApproval   RequestApproval @relation(fields: [requestApprovalId], references: [id])
  requestApprovalId String
  tenant            Tenant?         @relation(fields: [tenantId], references: [id])
  tenantId          String?
  employee          Employee        @relation(fields: [employeeId], references: [id])
  employeeId        String

  @@index([organizationId], map: "IDX_4071f027554eefff65ac8123e6")
  @@index([requestApprovalId], map: "IDX_563fec5539b89a57f40731f985")
  @@index([tenantId], map: "IDX_a5445b38b780b29b09369e36a9")
  @@index([employeeId], map: "IDX_ce2113039f070b3f003aa0db61")
  @@map("request_approval_employee")
}

model RequestApprovalTeam {
  id                String           @id(map: "PK_4b4b7aaa7147834fede372801e3") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt         DateTime         @default(now()) @db.Timestamp(6)
  updatedAt         DateTime         @default(now()) @db.Timestamp(6)
  status            Int?
  requestApproval   RequestApproval  @relation(fields: [requestApprovalId], references: [id])
  requestApprovalId String
  organization      Organization?    @relation(fields: [organizationId], references: [id])
  organizationId    String?
  tenant            Tenant?          @relation(fields: [tenantId], references: [id])
  tenantId          String?
  organizationTeam  OrganizationTeam @relation(fields: [teamId], references: [id])
  teamId            String

  @@index([requestApprovalId], map: "IDX_6c75d8a8c609e88896b2653cc4")
  @@index([organizationId], map: "IDX_77e1050669b32cfff482f96016")
  @@index([tenantId], map: "IDX_94b2a3d0f17c9549dea1493dc9")
  @@index([teamId], map: "IDX_9ccdaee6c5c62cda8f7375e841")
  @@map("request_approval_team")
}

model Role {
  id                       String                     @id(map: "PK_b36bcfe02fc8de3c57a8b2391c2") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                DateTime                   @default(now()) @db.Timestamp(6)
  updatedAt                DateTime                   @default(now()) @db.Timestamp(6)
  name                     String                     @db.VarChar
  isSystem                 Boolean                    @default(false)
  tenant                   Tenant?                    @relation(fields: [tenantId], references: [id])
  tenantId                 String?
  invite                   Invite[]
  organizationTeamEmployee OrganizationTeamEmployee[]
  rolePermission           RolePermission[]
  user                     User[]

  @@index([tenantId], map: "IDX_1751a572e91385a09d41c62471")
  @@index([name], map: "IDX_ae4578dcaed5adff96595e6166")
  @@map("role")
}

model RolePermission {
  id          String   @id(map: "PK_96c8f1fd25538d3692024115b47") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt   DateTime @default(now()) @db.Timestamp(6)
  updatedAt   DateTime @default(now()) @db.Timestamp(6)
  permission  String   @db.VarChar
  enabled     Boolean? @default(false)
  description String?  @db.VarChar
  tenant      Tenant?  @relation(fields: [tenantId], references: [id])
  tenantId    String?
  role        Role     @relation(fields: [roleId], references: [id])
  roleId      String

  @@index([permission], map: "IDX_8307c5c44a4ad6210b767b17a9")
  @@index([tenantId], map: "IDX_cbd053921056e77c0a8e03122a")
  @@index([roleId], map: "IDX_e3130a39c1e4a740d044e68573")
  @@map("role_permission")
}

model Screenshot {
  id              String                         @id(map: "PK_ba03e6a8a41f430189837f84fd9") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt       DateTime                       @default(now()) @db.Timestamp(6)
  updatedAt       DateTime                       @default(now()) @db.Timestamp(6)
  file            String                         @db.VarChar
  thumb           String?                        @db.VarChar
  recordedAt      DateTime?                      @db.Timestamp(6)
  deletedAt       DateTime?                      @db.Timestamp(6)
  storageProvider EnumScreenshotStorageProvider?
  organization    Organization?                  @relation(fields: [organizationId], references: [id])
  organizationId  String?
  tenant          Tenant?                        @relation(fields: [tenantId], references: [id])
  tenantId        String?
  timeSlot        TimeSlot?                      @relation(fields: [timeSlotId], references: [id])
  timeSlotId      String?

  @@index([organizationId], map: "IDX_0951aacffe3f8d0cff54cf2f34")
  @@index([tenantId], map: "IDX_235004f3dafac90692cd64d915")
  @@index([storageProvider], map: "IDX_2b374e5cdee1145ebb2a832f20")
  @@index([recordedAt], map: "IDX_3d7feb5fe793e4811cdb79f983")
  @@index([timeSlotId], map: "IDX_5b594d02d98d5defcde323abe5")
  @@index([deletedAt], map: "IDX_785958f324b568a307c9496909")
  @@map("screenshot")
}

model Skill {
  id                String              @id(map: "PK_a0d33334424e64fb78dc3ce7196") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt         DateTime            @default(now()) @db.Timestamp(6)
  updatedAt         DateTime            @default(now()) @db.Timestamp(6)
  name              String              @db.VarChar
  description       String?             @db.VarChar
  color             String              @db.VarChar
  tenant            Tenant?             @relation(fields: [tenantId], references: [id])
  tenantId          String?
  organization      Organization?       @relation(fields: [organizationId], references: [id])
  organizationId    String?
  skillEmployee     SkillEmployee[]
  skillOrganization SkillOrganization[]

  @@index([tenantId], map: "IDX_8e502eac7ed1347c71c26beae8")
  @@index([organizationId], map: "IDX_b2923d394f3636671ff9b3c3e8")
  @@map("skill")
}

model SkillEmployee {
  employee   Employee @relation(fields: [employeeId], references: [id])
  employeeId String
  skill      Skill    @relation(fields: [skillId], references: [id])
  skillId    String
  id         String   @id @default(cuid())

  @@unique([skillId, employeeId], map: "PK_cc3612fe6c013c5fff237aba454")
  @@index([employeeId], map: "IDX_760034f54e598d519b5f0c4ece")
  @@index([skillId], map: "IDX_e699b50ca468e75bbd36913dcc")
  @@map("skill_employee")
}

model SkillOrganization {
  skill          Skill        @relation(fields: [skillId], references: [id])
  skillId        String
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String
  id             String       @id @default(cuid())

  @@unique([skillId, organizationId], map: "PK_c0cf3d3890c81e0919d7d1fd0f0")
  @@index([skillId], map: "IDX_61593ade5fed9445738ddbe39c")
  @@index([organizationId], map: "IDX_b65cfda00c52e1fc26cc96e52c")
  @@map("skill_organization")
}

model Tag {
  updatedAt                      DateTime                         @default(now()) @db.Timestamp(6)
  name                           String                           @db.VarChar
  id                             String                           @id(map: "PK_8e4052373c579afc1471f526760") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                      DateTime                         @default(now()) @db.Timestamp(6)
  description                    String?                          @db.VarChar
  color                          String                           @db.VarChar
  isSystem                       Boolean                          @default(false)
  icon                           String?                          @db.VarChar
  organizationTeam               OrganizationTeam?                @relation(fields: [organizationTeamId], references: [id])
  organizationTeamId             String?
  tenant                         Tenant?                          @relation(fields: [tenantId], references: [id])
  tenantId                       String?
  organization                   Organization?                    @relation(fields: [organizationId], references: [id])
  organizationId                 String?
  tagCandidate                   TagCandidate[]
  tagEmployee                    TagEmployee[]
  tagEmployeeLevel               TagEmployeeLevel[]
  tagEquipment                   TagEquipment[]
  tagEventType                   TagEventType[]
  tagExpense                     TagExpense[]
  tagIncome                      TagIncome[]
  tagIntegration                 TagIntegration[]
  tagInvoice                     TagInvoice[]
  tagMerchant                    TagMerchant[]
  tagOrganization                TagOrganization[]
  tagOrganizationContact         TagOrganizationContact[]
  tagOrganizationDepartment      TagOrganizationDepartment[]
  tagOrganizationEmploymentType  TagOrganizationEmploymentType[]
  tagOrganizationExpenseCategory TagOrganizationExpenseCategory[]
  tagOrganizationPosition        TagOrganizationPosition[]
  tagOrganizationProject         TagOrganizationProject[]
  tagOrganizationTeam            TagOrganizationTeam[]
  tagOrganizationVendor          TagOrganizationVendor[]
  tagPayment                     TagPayment[]
  tagProduct                     TagProduct[]
  tagProposal                    TagProposal[]
  tagRequestApproval             TagRequestApproval[]
  tagTask                        TagTask[]
  tagUser                        TagUser[]
  tagWarehouse                   TagWarehouse[]

  @@index([organizationTeamId], map: "IDX_49746602acc4e5e8721062b69e")
  @@index([tenantId], map: "IDX_b08dd29fb6a8acdf83c83d8988")
  @@index([organizationId], map: "IDX_c2f6bec0b39eaa3a6d90903ae9")
  @@map("tag")
}

model TagCandidate {
  candidate   Candidate @relation(fields: [candidateId], references: [id])
  candidateId String
  tag         Tag       @relation(fields: [tagId], references: [id])
  tagId       String
  id          String    @id @default(cuid())

  @@unique([candidateId, tagId], map: "PK_b3a596d6c508c76517a24090d22")
  @@index([candidateId], map: "IDX_34e4625cc9b010079f1b5758b3")
  @@index([tagId], map: "IDX_7e0891bb331b08bd4abb6776b7")
  @@map("tag_candidate")
}

model TagEmployee {
  tag        Tag      @relation(fields: [tagId], references: [id])
  tagId      String
  employee   Employee @relation(fields: [employeeId], references: [id])
  employeeId String
  id         String   @id @default(cuid())

  @@unique([employeeId, tagId], map: "PK_f02244ef2ccbcc5498a8259b3dc")
  @@index([tagId], map: "IDX_b1ffe2a63a48b486e18dc59d1b")
  @@index([employeeId], map: "IDX_e0ddfccfe9816681c410ebf2b9")
  @@map("tag_employee")
}

model TagEmployeeLevel {
  employeeLevel   EmployeeLevel @relation(fields: [employeeLevelId], references: [id])
  employeeLevelId String
  tag             Tag           @relation(fields: [tagId], references: [id])
  tagId           String
  id              String        @id @default(cuid())

  @@unique([employeeLevelId, tagId], map: "PK_b599f224a34659242cf78f1ca05")
  @@index([employeeLevelId], map: "IDX_b3565ff8073d4f66c46d27fe88")
  @@index([tagId], map: "IDX_f3caf4cc158fe8b8e06578e792")
  @@map("tag_employee_level")
}

model TagEquipment {
  tag         Tag       @relation(fields: [tagId], references: [id])
  tagId       String
  equipment   Equipment @relation(fields: [equipmentId], references: [id])
  equipmentId String
  id          String    @id @default(cuid())

  @@unique([equipmentId, tagId], map: "PK_0dbbcefe12308eeda2a9d4d6c78")
  @@index([tagId], map: "IDX_0360b8197c2a38d6fe882cb1af")
  @@index([equipmentId], map: "IDX_bb0062d51a75164fcb64041ee7")
  @@map("tag_equipment")
}

model TagEventType {
  eventType   EventType @relation(fields: [eventTypeId], references: [id])
  eventTypeId String
  tag         Tag       @relation(fields: [tagId], references: [id])
  tagId       String
  id          String    @id @default(cuid())

  @@unique([eventTypeId, tagId], map: "PK_0505a044d09085a7bce5e705d0b")
  @@index([eventTypeId], map: "IDX_094af399a26d4a1d3ae17ea11e")
  @@index([tagId], map: "IDX_34b8f471aac00eaec6f2830e5b")
  @@map("tag_event_type")
}

model TagExpense {
  expense   Expense @relation(fields: [expenseId], references: [id])
  expenseId String
  tag       Tag     @relation(fields: [tagId], references: [id])
  tagId     String
  id        String  @id @default(cuid())

  @@unique([expenseId, tagId], map: "PK_4bba149e75e4b60261ae562930f")
  @@index([expenseId], map: "IDX_6f1108552ea7a70a4d958b338c")
  @@index([tagId], map: "IDX_8dcfbd0d960672fefe681bcba9")
  @@map("tag_expense")
}

model TagIncome {
  tag      Tag    @relation(fields: [tagId], references: [id])
  tagId    String
  income   Income @relation(fields: [incomeId], references: [id])
  incomeId String
  id       String @id @default(cuid())

  @@unique([incomeId, tagId], map: "PK_498400f0e51ae897bb0612318af")
  @@index([tagId], map: "IDX_00e2fd30761a36911648166044")
  @@index([incomeId], map: "IDX_55c9568ebe1c4addc3deb6922e")
  @@map("tag_income")
}

model TagIntegration {
  tag           Tag         @relation(fields: [tagId], references: [id])
  tagId         String
  integration   Integration @relation(fields: [integrationId], references: [id])
  integrationId String
  id            String      @id @default(cuid())

  @@unique([integrationId, tagId], map: "PK_403dfc4a5211261f78f87bedb9b")
  @@index([tagId], map: "IDX_0f19ad9872190b7a67a9652d5e")
  @@index([integrationId], map: "IDX_c9a85b16615bc5c3035802adb0")
  @@map("tag_integration")
}

model TagInvoice {
  tag       Tag     @relation(fields: [tagId], references: [id])
  tagId     String
  invoice   Invoice @relation(fields: [invoiceId], references: [id])
  invoiceId String
  id        String  @id @default(cuid())

  @@unique([invoiceId, tagId], map: "PK_da533af878d6590b772c98e1525")
  @@index([tagId], map: "IDX_0728fc2cc26e8802cbf41aaf27")
  @@index([invoiceId], map: "IDX_5a07958d7c6253b311dbdc34ff")
  @@map("tag_invoice")
}

model TagMerchant {
  tag        Tag      @relation(fields: [tagId], references: [id])
  tagId      String
  merchant   Merchant @relation(fields: [merchantId], references: [id])
  merchantId String
  id         String   @id @default(cuid())

  @@unique([merchantId, tagId], map: "PK_7427f8c73ff5dda1863e621ec19")
  @@index([tagId], map: "IDX_4af822b453c7d7d5f033e6ea16")
  @@index([merchantId], map: "IDX_e7d60a4e9906d056a8966e279f")
  @@map("tag_merchant")
}

model TagOrganization {
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String
  tag            Tag          @relation(fields: [tagId], references: [id])
  tagId          String
  id             String       @id @default(cuid())

  @@unique([organizationId, tagId], map: "PK_bb8848fda18a21b73ab43e9988c")
  @@index([organizationId], map: "IDX_7ca79ff010025397cf9f216bde")
  @@index([tagId], map: "IDX_f5e70849adc6f2f81fcbccae77")
  @@map("tag_organization")
}

model TagOrganizationContact {
  organizationContact   OrganizationContact @relation(fields: [organizationContactId], references: [id])
  organizationContactId String
  tag                   Tag                 @relation(fields: [tagId], references: [id])
  tagId                 String
  id                    String              @id @default(cuid())

  @@unique([organizationContactId, tagId], map: "PK_9c446f8b403074bfd90d06bcf49")
  @@index([organizationContactId], map: "IDX_1fb664a63f20bea6a3f0b38771")
  @@index([tagId], map: "IDX_8a06f5aded97d1b5e81005e121")
  @@map("tag_organization_contact")
}

model TagOrganizationDepartment {
  tag                      Tag                    @relation(fields: [tagId], references: [id])
  tagId                    String
  organizationDepartment   OrganizationDepartment @relation(fields: [organizationDepartmentId], references: [id])
  organizationDepartmentId String
  id                       String                 @id @default(cuid())

  @@unique([organizationDepartmentId, tagId], map: "PK_35c078336a1922ec389219b2c45")
  @@index([tagId], map: "IDX_0eb285a6b1ac7e3d0a542e50a4")
  @@index([organizationDepartmentId], map: "IDX_c2c9cd2ea533d5442de455fb3e")
  @@map("tag_organization_department")
}

model TagOrganizationEmploymentType {
  organizationEmploymentType   OrganizationEmploymentType @relation(fields: [organizationEmploymentTypeId], references: [id])
  organizationEmploymentTypeId String
  tag                          Tag                        @relation(fields: [tagId], references: [id])
  tagId                        String
  id                           String                     @id @default(cuid())

  @@unique([organizationEmploymentTypeId, tagId], map: "PK_46f098c3f1370818a7924a7519b")
  @@index([organizationEmploymentTypeId], map: "IDX_41a87d3cfa58c851bbf03ad4e8")
  @@index([tagId], map: "IDX_904a731b2ae6bc1aa52c8302a9")
  @@map("tag_organization_employment_type")
}

model TagOrganizationExpenseCategory {
  expenseCategory   ExpenseCategory @relation(fields: [expenseCategoryId], references: [id])
  expenseCategoryId String
  tag               Tag             @relation(fields: [tagId], references: [id])
  tagId             String
  id                String          @id @default(cuid())

  @@unique([expenseCategoryId, tagId], map: "PK_2ab89f7775405681c3466663390")
  @@index([expenseCategoryId], map: "IDX_107a93f89c8f31f4386ae4b19d")
  @@index([tagId], map: "IDX_727dbf5e1100023681e216d6a9")
  @@map("tag_organization_expense_category")
}

model TagOrganizationPosition {
  organizationPosition   OrganizationPosition @relation(fields: [organizationPositionId], references: [id])
  organizationPositionId String
  tag                    Tag                  @relation(fields: [tagId], references: [id])
  tagId                  String
  id                     String               @id @default(cuid())

  @@unique([organizationPositionId, tagId], map: "PK_484993118e08f2007588ee3fc30")
  @@index([organizationPositionId], map: "IDX_1f7e0230bc542d703781020378")
  @@index([tagId], map: "IDX_c71c381e77b0543ed4023aeef7")
  @@map("tag_organization_position")
}

model TagOrganizationProject {
  tag                   Tag                 @relation(fields: [tagId], references: [id])
  tagId                 String
  organizationProject   OrganizationProject @relation(fields: [organizationProjectId], references: [id])
  organizationProjectId String
  id                    String              @id @default(cuid())

  @@unique([organizationProjectId, tagId], map: "PK_6c30c1ae22624d30378dc45bfdf")
  @@index([tagId], map: "IDX_18be859b371e9159dfc2cecbe1")
  @@index([organizationProjectId], map: "IDX_b69fa5d1b1d02cdbe301ea6b10")
  @@map("tag_organization_project")
}

model TagOrganizationTeam {
  tag                Tag              @relation(fields: [tagId], references: [id])
  tagId              String
  organizationTeam   OrganizationTeam @relation(fields: [organizationTeamId], references: [id])
  organizationTeamId String
  id                 String           @id @default(cuid())

  @@unique([organizationTeamId, tagId], map: "PK_4602d7474789a3685fff8e2b783")
  @@index([tagId], map: "IDX_2382356b63c832a137079210bd")
  @@index([organizationTeamId], map: "IDX_4b5e0ca086e6124eeddf84252f")
  @@map("tag_organization_team")
}

model TagOrganizationVendor {
  organizationVendor   OrganizationVendor @relation(fields: [organizationVendorId], references: [id])
  organizationVendorId String
  tag                  Tag                @relation(fields: [tagId], references: [id])
  tagId                String
  id                   String             @id @default(cuid())

  @@unique([organizationVendorId, tagId], map: "PK_80f9db94598383855c44ed8db34")
  @@index([organizationVendorId], map: "IDX_7dde3307daf6d6dec1513ecc56")
  @@index([tagId], map: "IDX_f71369c1cb86ae9fd4d5452f9a")
  @@map("tag_organization_vendor")
}

model TagPayment {
  payment   Payment @relation(fields: [paymentId], references: [id])
  paymentId String
  tag       Tag     @relation(fields: [tagId], references: [id])
  tagId     String
  id        String  @id @default(cuid())

  @@unique([paymentId, tagId], map: "PK_3678b16dfcdff3b7ba29fbc3ec4")
  @@index([paymentId], map: "IDX_1fcb2a337ee905ab36c4aea3a3")
  @@index([tagId], map: "IDX_e087c0540b5098d115b50d954c")
  @@map("tag_payment")
}

model TagProduct {
  product   Product @relation(fields: [productId], references: [id])
  productId String
  tag       Tag     @relation(fields: [tagId], references: [id])
  tagId     String
  id        String  @id @default(cuid())

  @@unique([productId, tagId], map: "PK_34c67de1e9525aae8fd2b313df8")
  @@index([productId], map: "IDX_e516b4a2a1a8d4beda7217eeac")
  @@index([tagId], map: "IDX_f75a28915b38d926902c0f85b2")
  @@map("tag_product")
}

model TagProposal {
  proposal   Proposal @relation(fields: [proposalId], references: [id])
  proposalId String
  tag        Tag      @relation(fields: [tagId], references: [id])
  tagId      String
  id         String   @id @default(cuid())

  @@unique([proposalId, tagId], map: "PK_c1bbcee9e95d51c04260dc7f2bf")
  @@index([proposalId], map: "IDX_3f55851a03524e567594d50774")
  @@index([tagId], map: "IDX_451853704de278eef61a37fa7a")
  @@map("tag_proposal")
}

model TagRequestApproval {
  tag               Tag             @relation(fields: [tagId], references: [id])
  tagId             String
  requestApproval   RequestApproval @relation(fields: [requestApprovalId], references: [id])
  requestApprovalId String
  id                String          @id @default(cuid())

  @@unique([requestApprovalId, tagId], map: "PK_df8dcc1900379a096ca03dc19f1")
  @@index([tagId], map: "IDX_6c6576bff4b497a4975337fa5e")
  @@index([requestApprovalId], map: "IDX_74938a30181630c480b36e27d7")
  @@map("tag_request_approval")
}

model TagTask {
  task   Task   @relation(fields: [taskId], references: [id])
  taskId String
  tag    Tag    @relation(fields: [tagId], references: [id])
  tagId  String
  id     String @id @default(cuid())

  @@unique([taskId, tagId], map: "PK_d1663765eb64fa7e28b7a4002ca")
  @@index([taskId], map: "IDX_4b4e8f61e866248f2ddf8ce181")
  @@index([tagId], map: "IDX_bf7c34187a346f499e4dbc4b08")
  @@map("tag_task")
}

model TagUser {
  user   User   @relation(fields: [userId], references: [id])
  userId String
  tag    Tag    @relation(fields: [tagId], references: [id])
  tagId  String
  id     String @id @default(cuid())

  @@unique([userId, tagId], map: "PK_8d89574b11150c846973a4704a3")
  @@index([userId], map: "IDX_6a58ed56a12604c076a8e0cfda")
  @@index([tagId], map: "IDX_e64a306f3215dbb99bbb26ca59")
  @@map("tag_user")
}

model TagWarehouse {
  warehouse   Warehouse @relation(fields: [warehouseId], references: [id])
  warehouseId String
  tag         Tag       @relation(fields: [tagId], references: [id])
  tagId       String
  id          String    @id @default(cuid())

  @@unique([warehouseId, tagId], map: "PK_0c1cc63368e3f0a8ea8ce9eee5c")
  @@index([warehouseId], map: "IDX_08385e1e045b83d25978568743")
  @@index([tagId], map: "IDX_3557d514afd3794d40128e0542")
  @@map("tag_warehouse")
}

model Task {
  id                                               String                      @id(map: "PK_fb213f79ee45060ba925ecd576e") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                                        DateTime                    @default(now()) @db.Timestamp(6)
  updatedAt                                        DateTime                    @default(now()) @db.Timestamp(6)
  title                                            String                      @db.VarChar
  description                                      String?                     @db.VarChar
  status                                           String?                     @db.VarChar
  estimate                                         Int?
  dueDate                                          DateTime?                   @db.Timestamp(6)
  numberField                                      Int?                        @map("number")
  prefix                                           String?                     @db.VarChar
  priority                                         String?                     @db.VarChar
  size                                             String?                     @db.VarChar
  publicField                                      Boolean?                    @default(true) @map("public")
  startDate                                        DateTime?                   @db.Timestamp(6)
  resolvedAt                                       DateTime?                   @db.Timestamp(6)
  version                                          String?                     @db.VarChar
  issueType                                        String?                     @db.VarChar
  organizationSprint                               OrganizationSprint?         @relation(fields: [organizationSprintId], references: [id])
  organizationSprintId                             String?
  organizationProject                              OrganizationProject?        @relation(fields: [projectId], references: [id])
  projectId                                        String?
  organization                                     Organization?               @relation(fields: [organizationId], references: [id])
  organizationId                                   String?
  task                                             Task?                       @relation(name: "otherTask", fields: [parentId], references: [id])
  parentId                                         String?
  user                                             User?                       @relation(fields: [creatorId], references: [id])
  creatorId                                        String?
  tenant                                           Tenant?                     @relation(fields: [tenantId], references: [id])
  tenantId                                         String?
  activity                                         Activity[]
  employeeTasksTask                                EmployeeTasksTask[]
  invoiceItem                                      InvoiceItem[]
  keyResult                                        KeyResult[]
  organizationTeamTasksTask                        OrganizationTeamTasksTask[]
  tagTask                                          TagTask[]
  otherTask                                        Task[]                      @relation(name: "otherTask")
  taskEmployee                                     TaskEmployee[]
  taskLinkedIssuesTaskLinkedIssuesTaskToIdTotask   TaskLinkedIssue[]           @relation(name: "taskLinkedIssuesTaskLinkedIssuesTaskToIdTotask")
  taskLinkedIssuesTaskLinkedIssuesTaskFromIdTotask TaskLinkedIssue[]           @relation(name: "taskLinkedIssuesTaskLinkedIssuesTaskFromIdTotask")
  taskTeam                                         TaskTeam[]
  timeLog                                          TimeLog[]

  @@unique([projectId, numberField], map: "taskNumber")
  @@index([organizationSprintId], map: "IDX_1e1f64696aa3a26d3e12c840e5")
  @@index([status], map: "IDX_2fe7a278e6f08d2be55740a939")
  @@index([projectId], map: "IDX_3797a20ef5553ae87af126bc2f")
  @@index([organizationId], map: "IDX_5b0272d923a31c972bed1a1ac4")
  @@index([size], map: "IDX_7127880d6fae956ecc1c84ac31")
  @@index([creatorId], map: "IDX_94fe6b3a5aec5f85427df4f8cd")
  @@index([tenantId], map: "IDX_e91cbff3d206f150ccc14d0c3a")
  @@index([issueType], map: "IDX_ed5441fb13e82854a994da5a78")
  @@index([priority], map: "IDX_f092f3386f10f2e2ef5b0b6ad1")
  @@map("task")
}

model TaskEmployee {
  task       Task     @relation(fields: [taskId], references: [id])
  taskId     String
  employee   Employee @relation(fields: [employeeId], references: [id])
  employeeId String
  id         String   @id @default(cuid())

  @@unique([taskId, employeeId], map: "PK_60bd79a9fccf99615511cfa85fb")
  @@index([taskId], map: "IDX_790858593698e54cba501eb690")
  @@index([employeeId], map: "IDX_f38b1bd46f8831704348003bbf")
  @@map("task_employee")
}

model TaskLinkedIssue {
  id                                   String        @id(map: "PK_7305665cc71cc7a48200e465608") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt                            DateTime      @default(now()) @db.Timestamp(6)
  updatedAt                            DateTime      @default(now()) @db.Timestamp(6)
  action                               Int
  taskTaskLinkedIssuesTaskToIdTotask   Task          @relation(name: "taskLinkedIssuesTaskLinkedIssuesTaskToIdTotask", fields: [taskToId], references: [id])
  taskToId                             String
  tenant                               Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId                             String?
  organization                         Organization? @relation(fields: [organizationId], references: [id])
  organizationId                       String?
  taskTaskLinkedIssuesTaskFromIdTotask Task          @relation(name: "taskLinkedIssuesTaskLinkedIssuesTaskFromIdTotask", fields: [taskFromId], references: [id])
  taskFromId                           String

  @@index([taskToId], map: "IDX_0848fd2b8c23c0ab55146297cf")
  @@index([tenantId], map: "IDX_20b50abc5c97610a75d49ad381")
  @@index([organizationId], map: "IDX_24114c4059e6b6991daba541b1")
  @@index([taskFromId], map: "IDX_6deea7b3671e45973e191a1502")
  @@map("task_linked_issues")
}

model TaskPriority {
  id                  String               @id(map: "PK_42fc82c4e184b727a3ccd7863ee") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt           DateTime             @default(now()) @db.Timestamp(6)
  updatedAt           DateTime             @default(now()) @db.Timestamp(6)
  name                String               @db.VarChar
  value               String               @db.VarChar
  description         String?              @db.VarChar
  icon                String?              @db.VarChar
  color               String?              @db.VarChar
  isSystem            Boolean              @default(false)
  tenant              Tenant?              @relation(fields: [tenantId], references: [id])
  tenantId            String?
  organizationTeam    OrganizationTeam?    @relation(fields: [organizationTeamId], references: [id])
  organizationTeamId  String?
  organization        Organization?        @relation(fields: [organizationId], references: [id])
  organizationId      String?
  organizationProject OrganizationProject? @relation(fields: [projectId], references: [id])
  projectId           String?

  @@index([tenantId], map: "IDX_1818655f27b8cf4f0d1dbfeb8d")
  @@index([value], map: "IDX_46daede7b19176b6ad959d70da")
  @@index([organizationTeamId], map: "IDX_52b039cff6a1adf6b7f9e49ee4")
  @@index([name], map: "IDX_7d656b4cba8f11e639dbc5aab3")
  @@index([organizationId], map: "IDX_7fd1b30d159b608cbf59009f68")
  @@index([projectId], map: "IDX_db4237960ca989eb7a48cd433b")
  @@map("task_priority")
}

model TaskRelatedIssueType {
  id                  String               @id(map: "PK_11693c6ae3157d04eaaeedd0446") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt           DateTime             @default(now()) @db.Timestamp(6)
  updatedAt           DateTime             @default(now()) @db.Timestamp(6)
  name                String               @db.VarChar
  value               String               @db.VarChar
  description         String?              @db.VarChar
  icon                String?              @db.VarChar
  color               String?              @db.VarChar
  isSystem            Boolean              @default(false)
  organizationTeam    OrganizationTeam?    @relation(fields: [organizationTeamId], references: [id])
  organizationTeamId  String?
  tenant              Tenant?              @relation(fields: [tenantId], references: [id])
  tenantId            String?
  organization        Organization?        @relation(fields: [organizationId], references: [id])
  organizationId      String?
  organizationProject OrganizationProject? @relation(fields: [projectId], references: [id])
  projectId           String?

  @@index([organizationTeamId], map: "IDX_4967ebdca0aefb9d43e56695e4")
  @@index([value], map: "IDX_61a7cb4452d9e23f91231b7fd6")
  @@index([name], map: "IDX_9423f99da972c150f85dbc11c1")
  @@index([tenantId], map: "IDX_b7b0ea8ac2825fb981c1181d11")
  @@index([organizationId], map: "IDX_bed691e21fe01cf5aceee72295")
  @@index([projectId], map: "IDX_d99fe5b50dbe5078e0d9a9b6a9")
  @@map("task_related_issue_type")
}

model TaskSize {
  id                  String               @id(map: "PK_a08ebf2a6737612dff6d587b82e") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt           DateTime             @default(now()) @db.Timestamp(6)
  updatedAt           DateTime             @default(now()) @db.Timestamp(6)
  name                String               @db.VarChar
  value               String               @db.VarChar
  description         String?              @db.VarChar
  icon                String?              @db.VarChar
  color               String?              @db.VarChar
  isSystem            Boolean              @default(false)
  organization        Organization?        @relation(fields: [organizationId], references: [id])
  organizationId      String?
  organizationProject OrganizationProject? @relation(fields: [projectId], references: [id])
  projectId           String?
  organizationTeam    OrganizationTeam?    @relation(fields: [organizationTeamId], references: [id])
  organizationTeamId  String?
  tenant              Tenant?              @relation(fields: [tenantId], references: [id])
  tenantId            String?

  @@index([value], map: "IDX_1a7b137d009616a2ff1aa6834f")
  @@index([organizationId], map: "IDX_596512cc6508a482cc23ae6ab7")
  @@index([name], map: "IDX_90c54f57b29cc8b67edc2738ae")
  @@index([projectId], map: "IDX_ad6792b26526bd96ab18d63454")
  @@index([organizationTeamId], map: "IDX_f4438327b3c2afb0832569b2a1")
  @@index([tenantId], map: "IDX_f6ec2207e50680a475d71c8979")
  @@map("task_size")
}

model TaskStatus {
  id                  String               @id(map: "PK_e12743a7086ec826733f54e1d95") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt           DateTime             @default(now()) @db.Timestamp(6)
  updatedAt           DateTime             @default(now()) @db.Timestamp(6)
  name                String               @db.VarChar
  value               String               @db.VarChar
  description         String?              @db.VarChar
  icon                String?              @db.VarChar
  color               String?              @db.VarChar
  isSystem            Boolean              @default(false)
  organizationTeam    OrganizationTeam?    @relation(fields: [organizationTeamId], references: [id])
  organizationTeamId  String?
  organization        Organization?        @relation(fields: [organizationId], references: [id])
  organizationId      String?
  organizationProject OrganizationProject? @relation(fields: [projectId], references: [id])
  projectId           String?
  tenant              Tenant?              @relation(fields: [tenantId], references: [id])
  tenantId            String?

  @@index([organizationTeamId], map: "IDX_0330b4a942b536d8d1f264abe3")
  @@index([value], map: "IDX_68eaba689ed6d3e27ec93d3e88")
  @@index([organizationId], map: "IDX_9b9a828a49f4bd6383a4073fe2")
  @@index([projectId], map: "IDX_a19e8975e5c296640d457dfc11")
  @@index([name], map: "IDX_b0c955f276679dd2b2735c3936")
  @@index([tenantId], map: "IDX_efbaf00a743316b394cc31e4a2")
  @@map("task_status")
}

model TaskTeam {
  organizationTeam   OrganizationTeam @relation(fields: [organizationTeamId], references: [id])
  organizationTeamId String
  task               Task             @relation(fields: [taskId], references: [id])
  taskId             String
  id                 String           @id @default(cuid())

  @@unique([taskId, organizationTeamId], map: "PK_50695a0740cb895e0e8429b4739")
  @@index([organizationTeamId], map: "IDX_0ef34c9f9d6dc8d14f1fbb10e8")
  @@index([taskId], map: "IDX_47689f911b0cbb16c94a56a9c5")
  @@map("task_team")
}

model TaskVersion {
  id                  String               @id(map: "PK_fa7a775200136d1eedfc0070455") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt           DateTime             @default(now()) @db.Timestamp(6)
  updatedAt           DateTime             @default(now()) @db.Timestamp(6)
  name                String               @db.VarChar
  value               String               @db.VarChar
  description         String?              @db.VarChar
  icon                String?              @db.VarChar
  color               String?              @db.VarChar
  isSystem            Boolean              @default(false)
  tenant              Tenant?              @relation(fields: [tenantId], references: [id])
  tenantId            String?
  organizationProject OrganizationProject? @relation(fields: [projectId], references: [id])
  projectId           String?
  organizationTeam    OrganizationTeam?    @relation(fields: [organizationTeamId], references: [id])
  organizationTeamId  String?
  organization        Organization?        @relation(fields: [organizationId], references: [id])
  organizationId      String?

  @@index([name], map: "IDX_3396dda57286ca17ab61fd3704")
  @@index([tenantId], map: "IDX_379c8bd0ce203341148c1f99ee")
  @@index([projectId], map: "IDX_91988120385964f213aec8aa84")
  @@index([organizationTeamId], map: "IDX_959e77718a2e76ee56498c1106")
  @@index([organizationId], map: "IDX_9c845f353378371ee3aa60f686")
  @@index([value], map: "IDX_e9fd8df772ad2d955a65f4c68a")
  @@map("task_version")
}

model Tenant {
  id                                    String                              @id(map: "PK_da8c6efd67bb301e810e56ac139") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                             DateTime                            @default(now()) @db.Timestamp(6)
  updatedAt                             DateTime                            @default(now()) @db.Timestamp(6)
  name                                  String                              @db.VarChar
  logo                                  String?                             @db.VarChar
  accountingTemplate                    AccountingTemplate[]
  activity                              Activity[]
  appointmentEmployee                   AppointmentEmployee[]
  approvalPolicy                        ApprovalPolicy[]
  availabilitySlot                      AvailabilitySlot[]
  candidate                             Candidate[]
  candidateCriterionRating              CandidateCriterionRating[]
  candidateDocument                     CandidateDocument[]
  candidateEducation                    CandidateEducation[]
  candidateExperience                   CandidateExperience[]
  candidateFeedback                     CandidateFeedback[]
  candidateInterview                    CandidateInterview[]
  candidateInterviewer                  CandidateInterviewer[]
  candidatePersonalQuality              CandidatePersonalQuality[]
  candidateSkill                        CandidateSkill[]
  candidateSource                       CandidateSource[]
  candidateTechnology                   CandidateTechnology[]
  changelog                             Changelog[]
  contact                               Contact[]
  customSmtp                            CustomSmtp[]
  deal                                  Deal[]
  emailReset                            EmailReset[]
  emailSent                             EmailSent[]
  emailTemplate                         EmailTemplate[]
  employee                              Employee[]
  employeeAppointment                   EmployeeAppointment[]
  employeeAward                         EmployeeAward[]
  employeeLevel                         EmployeeLevel[]
  employeePhone                         EmployeePhone[]
  employeeProposalTemplate              EmployeeProposalTemplate[]
  employeeRecurringExpense              EmployeeRecurringExpense[]
  employeeSetting                       EmployeeSetting[]
  employeeUpworkJobSearchCriterion      EmployeeUpworkJobSearchCriterion[]
  equipment                             Equipment[]
  equipmentSharing                      EquipmentSharing[]
  equipmentSharingPolicy                EquipmentSharingPolicy[]
  estimateEmail                         EstimateEmail[]
  eventType                             EventType[]
  expense                               Expense[]
  expenseCategory                       ExpenseCategory[]
  featureOrganization                   FeatureOrganization[]
  goal                                  Goal[]
  goalGeneralSetting                    GoalGeneralSetting[]
  goalKpi                               GoalKpi[]
  goalKpiTemplate                       GoalKpiTemplate[]
  goalTemplate                          GoalTemplate[]
  goalTimeFrame                         GoalTimeFrame[]
  imageAssetImageAssetTenantIdTotenant  ImageAsset[]                        @relation(name: "imageAssetImageAssetTenantIdTotenant")
  imageAssetTenantImageIdToimageAsset   ImageAsset?                         @relation(name: "imageAssetTenantImageIdToimageAsset", fields: [imageAssetTenantImageIdToimageAssetId], references: [id])
  imageAssetTenantImageIdToimageAssetId String?
  importHistory                         ImportHistory[]
  importRecord                          ImportRecord[]
  income                                Income[]
  integrationEntitySetting              IntegrationEntitySetting[]
  integrationEntitySettingTied          IntegrationEntitySettingTied[]
  integrationMap                        IntegrationMap[]
  integrationSetting                    IntegrationSetting[]
  integrationTenant                     IntegrationTenant[]
  invite                                Invite[]
  invoice                               Invoice[]
  invoiceEstimateHistory                InvoiceEstimateHistory[]
  invoiceItem                           InvoiceItem[]
  issueType                             IssueType[]
  jobPreset                             JobPreset[]
  jobPresetUpworkJobSearchCriterion     JobPresetUpworkJobSearchCriterion[]
  jobSearchCategory                     JobSearchCategory[]
  jobSearchOccupation                   JobSearchOccupation[]
  keyResult                             KeyResult[]
  keyResultTemplate                     KeyResultTemplate[]
  keyResultUpdate                       KeyResultUpdate[]
  knowledgeBase                         KnowledgeBase[]
  knowledgeBaseArticle                  KnowledgeBaseArticle[]
  knowledgeBaseAuthor                   KnowledgeBaseAuthor[]
  merchant                              Merchant[]
  organization                          Organization[]
  organizationAward                     OrganizationAward[]
  organizationContact                   OrganizationContact[]
  organizationDepartment                OrganizationDepartment[]
  organizationDocument                  OrganizationDocument[]
  organizationEmploymentType            OrganizationEmploymentType[]
  organizationLanguage                  OrganizationLanguage[]
  organizationPosition                  OrganizationPosition[]
  organizationProject                   OrganizationProject[]
  organizationRecurringExpense          OrganizationRecurringExpense[]
  organizationSprint                    OrganizationSprint[]
  organizationTaskSetting               OrganizationTaskSetting[]
  organizationTeam                      OrganizationTeam[]
  organizationTeamEmployee              OrganizationTeamEmployee[]
  organizationTeamJoinRequest           OrganizationTeamJoinRequest[]
  organizationVendor                    OrganizationVendor[]
  payment                               Payment[]
  pipeline                              Pipeline[]
  pipelineStage                         PipelineStage[]
  product                               Product[]
  productCategory                       ProductCategory[]
  productCategoryTranslation            ProductCategoryTranslation[]
  productOption                         ProductOption[]
  productOptionGroup                    ProductOptionGroup[]
  productOptionGroupTranslation         ProductOptionGroupTranslation[]
  productOptionTranslation              ProductOptionTranslation[]
  productTranslation                    ProductTranslation[]
  productType                           ProductType[]
  productTypeTranslation                ProductTypeTranslation[]
  productVariant                        ProductVariant[]
  productVariantPrice                   ProductVariantPrice[]
  productVariantSetting                 ProductVariantSetting[]
  proposal                              Proposal[]
  reportOrganization                    ReportOrganization[]
  requestApproval                       RequestApproval[]
  requestApprovalEmployee               RequestApprovalEmployee[]
  requestApprovalTeam                   RequestApprovalTeam[]
  role                                  Role[]
  rolePermission                        RolePermission[]
  screenshot                            Screenshot[]
  skill                                 Skill[]
  tag                                   Tag[]
  task                                  Task[]
  taskLinkedIssues                      TaskLinkedIssue[]
  taskPriority                          TaskPriority[]
  taskRelatedIssueType                  TaskRelatedIssueType[]
  taskSize                              TaskSize[]
  taskStatus                            TaskStatus[]
  taskVersion                           TaskVersion[]
  tenantSetting                         TenantSetting[]
  timeLog                               TimeLog[]
  timeOffPolicy                         TimeOffPolicy[]
  timeOffRequest                        TimeOffRequest[]
  timeSlot                              TimeSlot[]
  timeSlotMinute                        TimeSlotMinute[]
  timesheet                             Timesheet[]
  user                                  User[]
  userOrganization                      UserOrganization[]
  warehouse                             Warehouse[]
  warehouseProduct                      WarehouseProduct[]
  warehouseProductVariant               WarehouseProductVariant[]

  @@index([name], map: "IDX_56211336b5ff35fd944f225917")
  @@index([imageId], map: "IDX_d154d06dac0d0e0a5d9a083e25")
  @@map("tenant")
}

model TenantSetting {
  id        String   @id(map: "PK_5be851ba95ad60d3697c0fdf1ef") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @default(now()) @db.Timestamp(6)
  name      String   @db.VarChar
  value     String?  @db.VarChar
  tenant    Tenant?  @relation(fields: [tenantId], references: [id])
  tenantId  String?

  @@index([tenantId], map: "IDX_affdab301e348b892175f30fa3")
  @@map("tenant_setting")
}

model TimeLog {
  id                    String               @id(map: "PK_b74817f73944f78f239601069f2") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt             DateTime             @default(now()) @db.Timestamp(6)
  updatedAt             DateTime             @default(now()) @db.Timestamp(6)
  startedAt             DateTime?            @db.Timestamp(6)
  stoppedAt             DateTime?            @db.Timestamp(6)
  logType               String               @default("TRACKED") @db.VarChar
  source                String               @default("BROWSER") @db.VarChar
  description           String?              @db.VarChar
  reason                String?              @db.VarChar
  isBillable            Boolean              @default(false)
  deletedAt             DateTime?            @db.Timestamp(6)
  isRunning             Boolean?
  version               String?              @db.VarChar
  organizationTeam      OrganizationTeam?    @relation(fields: [organizationTeamId], references: [id])
  organizationTeamId    String?
  task                  Task?                @relation(fields: [taskId], references: [id])
  taskId                String?
  organizationProject   OrganizationProject? @relation(fields: [projectId], references: [id])
  projectId             String?
  employee              Employee             @relation(fields: [employeeId], references: [id])
  employeeId            String
  organization          Organization?        @relation(fields: [organizationId], references: [id])
  organizationId        String?
  organizationContact   OrganizationContact? @relation(fields: [organizationContactId], references: [id])
  organizationContactId String?
  timesheet             Timesheet?           @relation(fields: [timesheetId], references: [id])
  timesheetId           String?
  tenant                Tenant?              @relation(fields: [tenantId], references: [id])
  tenantId              String?
  timeSlotTimeLogs      TimeSlotTimeLog[]

  @@index([startedAt], map: "IDX_189b79acd611870aba62b3594e")
  @@index([organizationTeamId], map: "IDX_18dcdf754396f0cb0308dc91f4")
  @@index([taskId], map: "IDX_1ddf2da35e34378fd845d80a18")
  @@index([source], map: "IDX_402290e7045e0c10ef97d9f982")
  @@index([projectId], map: "IDX_54776f6f5fd3c13c3bc1fbfac5")
  @@index([isBillable], map: "IDX_722b9cb3a991c964d86396b6bc")
  @@index([version], map: "IDX_79001d281ecb766005b3d331c1")
  @@index([stoppedAt], map: "IDX_a1f8fcd70164d915fe7dd4a1ec")
  @@index([employeeId], map: "IDX_a89a849957e005bafb8e4220bc")
  @@index([organizationId], map: "IDX_aed2d5cc5680fba9d387c7f931")
  @@index([deletedAt], map: "IDX_c52aae9bd99b254f62a6a71a54")
  @@index([organizationContactId], map: "IDX_d1e8f22c02c5e949453dde7f2d")
  @@index([timesheetId], map: "IDX_e65393bb52aa8275b1392c73f7")
  @@index([logType], map: "IDX_e80fb588b1086ce2a4f2244814")
  @@index([isRunning], map: "IDX_f447474d185cd70b3015853874")
  @@index([tenantId], map: "IDX_fa9018cb248ea0f3b2b30ef143")
  @@map("time_log")
}

model TimeOffPolicy {
  id                    String                  @id(map: "PK_fce6b0e46ad8e48cd9ef25f2d36") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt             DateTime                @default(now()) @db.Timestamp(6)
  updatedAt             DateTime                @default(now()) @db.Timestamp(6)
  name                  String                  @db.VarChar
  requiresApproval      Boolean
  paid                  Boolean
  tenant                Tenant?                 @relation(fields: [tenantId], references: [id])
  tenantId              String?
  organization          Organization?           @relation(fields: [organizationId], references: [id])
  organizationId        String?
  timeOffPolicyEmployee TimeOffPolicyEmployee[]
  timeOffRequest        TimeOffRequest[]

  @@index([tenantId], map: "IDX_1c0ed84d54f8fbe4af10dfcda1")
  @@index([name], map: "IDX_7d7f69c79df4a6f152b0e362b1")
  @@index([organizationId], map: "IDX_c2744cffeca55c3c9c52bb9789")
  @@map("time_off_policy")
}

model TimeOffPolicyEmployee {
  timeOffPolicy   TimeOffPolicy @relation(fields: [timeOffPolicyId], references: [id])
  timeOffPolicyId String
  employee        Employee      @relation(fields: [employeeId], references: [id])
  employeeId      String
  id              String        @id @default(cuid())

  @@unique([employeeId, timeOffPolicyId], map: "PK_46cd285feb2ed714df9a260d810")
  @@index([timeOffPolicyId], map: "IDX_0f823750ac5a7d899cc5d8d040")
  @@index([employeeId], map: "IDX_c451f53f5a6cd97db94e1c9482")
  @@map("time_off_policy_employee")
}

model TimeOffRequest {
  id                     String                   @id(map: "PK_cd772fb7872c550c988fd42c93d") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt              DateTime                 @default(now()) @db.Timestamp(6)
  updatedAt              DateTime                 @default(now()) @db.Timestamp(6)
  documentUrl            String?                  @db.VarChar
  description            String?                  @db.VarChar
  start                  DateTime                 @db.Timestamp(6)
  end                    DateTime                 @db.Timestamp(6)
  requestDate            DateTime                 @db.Timestamp(6)
  status                 String                   @db.VarChar
  isHoliday              Boolean?                 @default(false)
  isArchived             Boolean?                 @default(false)
  tenant                 Tenant?                  @relation(fields: [tenantId], references: [id])
  tenantId               String?
  organization           Organization?            @relation(fields: [organizationId], references: [id])
  organizationId         String?
  imageAsset             ImageAsset?              @relation(fields: [documentId], references: [id])
  documentId             String?
  timeOffPolicy          TimeOffPolicy            @relation(fields: [policyId], references: [id])
  policyId               String
  timeOffRequestEmployee TimeOffRequestEmployee[]

  @@index([tenantId], map: "IDX_4989834dd1c9c8ea3576ed99ce")
  @@index([organizationId], map: "IDX_981333982a6df8b815957dcbf2")
  @@index([documentId], map: "IDX_c009cdd795be674c2047062374")
  @@index([policyId], map: "IDX_c1f8ae47dc2f1882afc5045c73")
  @@map("time_off_request")
}

model TimeOffRequestEmployee {
  timeOffRequest   TimeOffRequest @relation(fields: [timeOffRequestId], references: [id])
  timeOffRequestId String
  employee         Employee       @relation(fields: [employeeId], references: [id])
  employeeId       String
  id               String         @id @default(cuid())

  @@unique([employeeId, timeOffRequestId], map: "PK_780109136f243911fd9da8a807e")
  @@index([timeOffRequestId], map: "IDX_0a8cf0aacf95ce66e73e75a95c")
  @@index([employeeId], map: "IDX_cd312469204347b1210397770a")
  @@map("time_off_request_employee")
}

model TimeSlot {
  timeSlotTimeLogs TimeSlotTimeLog[]
  id               String            @id(map: "PK_03f782f8c4af029253f6ad5bacf") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt        DateTime          @default(now()) @db.Timestamp(6)
  updatedAt        DateTime          @default(now()) @db.Timestamp(6)
  duration         Int               @default(0)
  keyboard         Int               @default(0)
  mouse            Int               @default(0)
  overall          Int               @default(0)
  startedAt        DateTime          @db.Timestamp(6)
  employee         Employee          @relation(fields: [employeeId], references: [id])
  employeeId       String
  organization     Organization?     @relation(fields: [organizationId], references: [id])
  organizationId   String?
  tenant           Tenant?           @relation(fields: [tenantId], references: [id])
  tenantId         String?
  activity         Activity[]
  screenshot       Screenshot[]
  timeSlotMinute   TimeSlotMinute[]

  @@index([duration], map: "IDX_0c707825a7c2ecc4e186b07ebf")
  @@index([employeeId], map: "IDX_7913305b850c7afc89b6ed96a3")
  @@index([organizationId], map: "IDX_b407841271245501dd1a8c7551")
  @@index([tenantId], map: "IDX_b8284109257b5137256b5b3e84")
  @@index([startedAt], map: "IDX_c6e7d1075bfd97eea6643b1479")
  @@index([overall], map: "IDX_f44e721669d5c6bed32cd6a3bf")
  @@map("time_slot")
}

model TimeSlotMinute {
  id             String        @id(map: "PK_620fe1f2b27a920a28c5b8398c2") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt      DateTime      @default(now()) @db.Timestamp(6)
  updatedAt      DateTime      @default(now()) @db.Timestamp(6)
  keyboard       Int           @default(0)
  mouse          Int           @default(0)
  datetime       DateTime      @db.Timestamp(6)
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?
  timeSlot       TimeSlot      @relation(fields: [timeSlotId], references: [id])
  timeSlotId     String
  tenant         Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId       String?

  @@unique([timeSlotId, datetime], map: "UQ_0ac1d2777eefcee82db52ca3660")
  @@index([organizationId], map: "IDX_82c5edbd179359212f16f0d386")
  @@index([timeSlotId], map: "IDX_9272701d3da8bd8507f316c915")
  @@index([tenantId], map: "IDX_c7f72cb68b22b8ab988158e4d2")
  @@map("time_slot_minute")
}

model TimeSlotTimeLog {
  timeLog    TimeLog  @relation(fields: [timeLogId], references: [id])
  timeLogId  String
  timeSlot   TimeSlot @relation(fields: [timeSlotId], references: [id])
  timeSlotId String
  id         String   @id @default(cuid())

  @@unique([timeSlotId, timeLogId], map: "PK_84931d1a9078253918390719bd3")
  @@index([timeLogId], map: "IDX_2fc2675c79cb3cbceb32bf2dc7")
  @@index([timeSlotId], map: "IDX_63c61a88461ff5c115c3b6bcde")
  @@map("time_slot_time_logs")
}

model Timesheet {
  id             String        @id(map: "PK_53c30fa094ae81f166955fb1036") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt      DateTime      @default(now()) @db.Timestamp(6)
  updatedAt      DateTime      @default(now()) @db.Timestamp(6)
  duration       Int           @default(0)
  keyboard       Int           @default(0)
  mouse          Int           @default(0)
  overall        Int           @default(0)
  startedAt      DateTime?     @db.Timestamp(6)
  stoppedAt      DateTime?     @db.Timestamp(6)
  approvedAt     DateTime?     @db.Timestamp(6)
  submittedAt    DateTime?     @db.Timestamp(6)
  lockedAt       DateTime?     @db.Timestamp(6)
  isBilled       Boolean       @default(false)
  status         String        @default("PENDING") @db.VarChar
  deletedAt      DateTime?     @db.Timestamp(6)
  tenant         Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId       String?
  user           User?         @relation(fields: [approvedById], references: [id])
  approvedById   String?
  employee       Employee      @relation(fields: [employeeId], references: [id])
  employeeId     String
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?
  timeLog        TimeLog[]

  @@index([status], map: "IDX_23fdffa8369387d87101090684")
  @@index([tenantId], map: "IDX_25b8df69c9b7f5752c6a6a6ef7")
  @@index([lockedAt], map: "IDX_3502c60f98a7cda58dea75bcb5")
  @@index([submittedAt], map: "IDX_3f8fc4b5718fcaa913f9438e27")
  @@index([approvedAt], map: "IDX_6a79eb7534066b11f59243ede1")
  @@index([approvedById], map: "IDX_6c1f81934a3f597b3b1a17f562")
  @@index([employeeId], map: "IDX_8c8f821cb0fe0dd387491ea7d9")
  @@index([startedAt], map: "IDX_930e2b28de9ecb1ea689d5a97a")
  @@index([organizationId], map: "IDX_aca65a79fe0c1ec9e6a59022c5")
  @@index([isBilled], map: "IDX_c828facbb4250117f83416d9f7")
  @@index([deletedAt], map: "IDX_d9c9895301adc96bb9eedbc27f")
  @@index([stoppedAt], map: "IDX_f6558fbb3158ab90da1c41d943")
  @@map("timesheet")
}

model User {
  id                            String                            @id(map: "PK_cace4a159ff9f2512dd42373760") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                     DateTime                          @default(now()) @db.Timestamp(6)
  updatedAt                     DateTime                          @default(now()) @db.Timestamp(6)
  thirdPartyId                  String?                           @db.VarChar
  firstName                     String?                           @db.VarChar
  lastName                      String?                           @db.VarChar
  email                         String?                           @db.VarChar
  hash                          String?                           @db.VarChar
  imageUrl                      String?                           @db.VarChar(500)
  preferredLanguage             String?                           @default("en") @db.VarChar
  refreshToken                  String?                           @db.VarChar
  isActive                      Boolean?                          @default(true)
  preferredComponentLayout      EnumUserPreferredComponentLayout? @default(TABLE)
  code                          Int?
  codeExpireAt                  DateTime?                         @db.Timestamp(6)
  emailVerifiedAt               DateTime?                         @db.Timestamp(6)
  emailToken                    String?                           @db.VarChar
  phoneNumber                   String?                           @db.VarChar
  timeZone                      String?                           @db.VarChar
  imageAsset                    ImageAsset?                       @relation(fields: [imageId], references: [id])
  imageId                       String?
  tenant                        Tenant?                           @relation(fields: [tenantId], references: [id])
  tenantId                      String?
  role                          Role?                             @relation(fields: [roleId], references: [id])
  roleId                        String?
  candidate                     Candidate?
  deal                          Deal[]
  emailReset                    EmailReset[]
  emailSent                     EmailSent[]
  employee                      Employee?
  inviteInviteInvitedByIdTouser Invite[]                          @relation(name: "inviteInviteInvitedByIdTouser")
  inviteInviteUserIdTouser      Invite[]                          @relation(name: "inviteInviteUserIdTouser")
  invoiceEstimateHistory        InvoiceEstimateHistory[]
  organizationTeam              OrganizationTeam[]
  organizationTeamJoinRequest   OrganizationTeamJoinRequest[]
  payment                       Payment[]
  tagUser                       TagUser[]
  task                          Task[]
  timesheet                     Timesheet[]
  userOrganization              UserOrganization[]

  @@index([thirdPartyId], map: "IDX_19de43e9f1842360ce646253d7")
  @@index([firstName], map: "IDX_58e4dbff0e1a32a9bdc861bb29")
  @@index([imageId], map: "IDX_5e028298e103e1694147ada69e")
  @@index([tenantId], map: "IDX_685bf353c85f23b6f848e4dcde")
  @@index([username], map: "IDX_78a916df40e02a9deb1c4b75ed")
  @@index([roleId], map: "IDX_c28e52f758e7bbc53828db9219")
  @@index([email], map: "IDX_e12875dfb3b1d92d7d7c5377e2")
  @@index([lastName], map: "IDX_f0e1b4ecdca13b177e2e3a0613")
  @@index([phoneNumber], map: "IDX_f2578043e491921209f5dadd08")
  @@map("user")
}

model UserOrganization {
  id             String        @id(map: "PK_3e103cdf85b7d6cb620b4db0f0c") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt      DateTime      @default(now()) @db.Timestamp(6)
  updatedAt      DateTime      @default(now()) @db.Timestamp(6)
  isDefault      Boolean       @default(true)
  isActive       Boolean       @default(true)
  user           User          @relation(fields: [userId], references: [id])
  userId         String
  tenant         Tenant?       @relation(fields: [tenantId], references: [id])
  tenantId       String?
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?

  @@index([isDefault], map: "IDX_1f97ff07fb198bd0a7786b2abd")
  @@index([userId], map: "IDX_29c3c8cc3ea9db22e4a347f4b5")
  @@index([tenantId], map: "IDX_611e1392c8cc9b101e3ea7ad80")
  @@index([organizationId], map: "IDX_7143f31467178a6164a42426c1")
  @@index([isActive], map: "IDX_ca24fc59aac015d9660955f5f6")
  @@map("user_organization")
}

model Warehouse {
  id                String              @id(map: "PK_965abf9f99ae8c5983ae74ebde8") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt         DateTime            @default(now()) @db.Timestamp(6)
  updatedAt         DateTime            @default(now()) @db.Timestamp(6)
  name              String              @db.VarChar
  code              String              @db.VarChar
  email             String              @db.VarChar
  description       String?             @db.VarChar
  active            Boolean             @default(true)
  contact           Contact?            @relation(fields: [contactId], references: [id])
  contactId         String?             @unique
  tenant            Tenant?             @relation(fields: [tenantId], references: [id])
  tenantId          String?
  imageAsset        ImageAsset?         @relation(fields: [logoId], references: [id])
  logoId            String?
  organization      Organization?       @relation(fields: [organizationId], references: [id])
  organizationId    String?
  tagWarehouse      TagWarehouse[]
  warehouseMerchant WarehouseMerchant[]
  warehouseProduct  WarehouseProduct[]

  @@index([contactId], map: "IDX_84594016a98da8b87e0f51cd93")
  @@index([tenantId], map: "IDX_9b2f00761a6b1b77cb6289e3ff")
  @@index([logoId], map: "IDX_f502dc6d9802306f9d1584932b")
  @@index([organizationId], map: "IDX_f5735eafddabdb4b20f621a976")
  @@map("warehouse")
}

model WarehouseMerchant {
  merchant    Merchant  @relation(fields: [merchantId], references: [id])
  merchantId  String
  warehouse   Warehouse @relation(fields: [warehouseId], references: [id])
  warehouseId String
  id          String    @id @default(cuid())

  @@unique([merchantId, warehouseId], map: "PK_6ec73c2cd91452e839edfda08d6")
  @@index([merchantId], map: "IDX_812f0cfb560ac6dda0d1345765")
  @@index([warehouseId], map: "IDX_a6bfc0dc6e5234e8e7ef698a36")
  @@map("warehouse_merchant")
}

model WarehouseProduct {
  id                      String                    @id(map: "PK_327c519be4aeb4ddabc14e595ca") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt               DateTime                  @default(now()) @db.Timestamp(6)
  updatedAt               DateTime                  @default(now()) @db.Timestamp(6)
  quantity                Decimal?                  @default(0) @db.Decimal
  product                 Product                   @relation(fields: [productId], references: [id])
  productId               String
  tenant                  Tenant?                   @relation(fields: [tenantId], references: [id])
  tenantId                String?
  warehouse               Warehouse                 @relation(fields: [warehouseId], references: [id])
  warehouseId             String
  organization            Organization?             @relation(fields: [organizationId], references: [id])
  organizationId          String?
  warehouseProductVariant WarehouseProductVariant[]

  @@index([productId], map: "IDX_3f934c4772e7c7f2c66d7ea4e7")
  @@index([tenantId], map: "IDX_62573a939f834f2de343f98288")
  @@index([warehouseId], map: "IDX_a8c9aee14d47ec7b3f2ac429eb")
  @@index([organizationId], map: "IDX_c899e17322d11e1977832e8c65")
  @@map("warehouse_product")
}

model WarehouseProductVariant {
  id                 String           @id(map: "PK_19bd2f6572fc64f8522e94babe9") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt          DateTime         @default(now()) @db.Timestamp(6)
  updatedAt          DateTime         @default(now()) @db.Timestamp(6)
  quantity           Decimal?         @default(0) @db.Decimal
  warehouseProduct   WarehouseProduct @relation(fields: [warehouseProductId], references: [id])
  warehouseProductId String
  tenant             Tenant?          @relation(fields: [tenantId], references: [id])
  tenantId           String?
  productVariant     ProductVariant   @relation(fields: [variantId], references: [id])
  variantId          String
  organization       Organization?    @relation(fields: [organizationId], references: [id])
  organizationId     String?

  @@index([warehouseProductId], map: "IDX_617306cb3613dd8d59301ae16f")
  @@index([tenantId], map: "IDX_a1c4a97b928b547c3041d3ac1f")
  @@index([variantId], map: "IDX_a2f863689d1316810c41c1ea38")
  @@index([organizationId], map: "IDX_d5f4b64e6a80546fd6dd4ac3ed")
  @@map("warehouse_product_variant")
}

enum EnumCandidateFeedbackStatus {
  APPLIED
  REJECTED
  HIRED
}

enum EnumExpenseStatus {
  INVOICED
  UNINVOICED
  PAID
  NOT_BILLABLE
}

enum EnumImageAssetStorageProvider {
  LOCAL
  S3
  WASABI
  CLOUDINARY
}

enum EnumOrganizationDefaultValueDateType {
  TODAY
  END_OF_MONTH
  START_OF_MONTH
}

enum EnumOrganizationContactInviteStatus {
  NOT_INVITED
  INVITED
  ACCEPTED
}

enum EnumOrganizationContactContactType {
  CLIENT
  CUSTOMER
  LEAD
}

enum EnumOrganizationContactBudgetType {
  hours
  cost
}

enum EnumPaymentPaymentMethod {
  BANK_TRANSFER
  CASH
  CHEQUE
  CREDIT_CARD
  DEBIT
  ONLINE
}

enum EnumScreenshotStorageProvider {
  LOCAL
  S3
  WASABI
  CLOUDINARY
}

enum EnumUserPreferredComponentLayout {
  CARDS_GRID
  TABLE
}
