/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { DateTimeFilter } from "../../util/DateTimeFilter";
import { IntFilter } from "../../util/IntFilter";
import { CandidateFeedbackWhereUniqueInput } from "../../candidateFeedback/base/CandidateFeedbackWhereUniqueInput";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";
import { OrganizationWhereUniqueInput } from "../../organization/base/OrganizationWhereUniqueInput";
import { CandidatePersonalQualityWhereUniqueInput } from "../../candidatePersonalQuality/base/CandidatePersonalQualityWhereUniqueInput";
import { CandidateTechnologyWhereUniqueInput } from "../../candidateTechnology/base/CandidateTechnologyWhereUniqueInput";

@InputType()
class CandidateCriterionRatingWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  createdAt?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  updatedAt?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  rating?: IntFilter;

  @ApiProperty({
    required: false,
    type: () => CandidateFeedbackWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CandidateFeedbackWhereUniqueInput)
  @IsOptional()
  @Field(() => CandidateFeedbackWhereUniqueInput, {
    nullable: true,
  })
  candidateFeedback?: CandidateFeedbackWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenant?: TenantWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrganizationWhereUniqueInput)
  @IsOptional()
  @Field(() => OrganizationWhereUniqueInput, {
    nullable: true,
  })
  organization?: OrganizationWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => CandidatePersonalQualityWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CandidatePersonalQualityWhereUniqueInput)
  @IsOptional()
  @Field(() => CandidatePersonalQualityWhereUniqueInput, {
    nullable: true,
  })
  candidatePersonalQuality?: CandidatePersonalQualityWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => CandidateTechnologyWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CandidateTechnologyWhereUniqueInput)
  @IsOptional()
  @Field(() => CandidateTechnologyWhereUniqueInput, {
    nullable: true,
  })
  candidateTechnology?: CandidateTechnologyWhereUniqueInput;
}

export { CandidateCriterionRatingWhereInput as CandidateCriterionRatingWhereInput };
