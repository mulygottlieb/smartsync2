/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, IsEnum, ValidateNested } from "class-validator";
import { DateTimeFilter } from "../../util/DateTimeFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { DecimalNullableFilter } from "../../util/DecimalNullableFilter";
import { EnumCandidateFeedbackStatus } from "./EnumCandidateFeedbackStatus";
import { CandidateInterviewWhereUniqueInput } from "../../candidateInterview/base/CandidateInterviewWhereUniqueInput";
import { OrganizationWhereUniqueInput } from "../../organization/base/OrganizationWhereUniqueInput";
import { CandidateInterviewerWhereUniqueInput } from "../../candidateInterviewer/base/CandidateInterviewerWhereUniqueInput";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";
import { CandidateWhereUniqueInput } from "../../candidate/base/CandidateWhereUniqueInput";
import { CandidateCriterionRatingListRelationFilter } from "../../candidateCriterionRating/base/CandidateCriterionRatingListRelationFilter";

@InputType()
class CandidateFeedbackWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  createdAt?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  updatedAt?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  description?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: DecimalNullableFilter,
  })
  @Type(() => DecimalNullableFilter)
  @IsOptional()
  @Field(() => DecimalNullableFilter, {
    nullable: true,
  })
  rating?: DecimalNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumCandidateFeedbackStatus,
  })
  @IsEnum(EnumCandidateFeedbackStatus)
  @IsOptional()
  @Field(() => EnumCandidateFeedbackStatus, {
    nullable: true,
  })
  status?: "APPLIED" | "REJECTED" | "HIRED";

  @ApiProperty({
    required: false,
    type: () => CandidateInterviewWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CandidateInterviewWhereUniqueInput)
  @IsOptional()
  @Field(() => CandidateInterviewWhereUniqueInput, {
    nullable: true,
  })
  candidateInterview?: CandidateInterviewWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrganizationWhereUniqueInput)
  @IsOptional()
  @Field(() => OrganizationWhereUniqueInput, {
    nullable: true,
  })
  organization?: OrganizationWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => CandidateInterviewerWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CandidateInterviewerWhereUniqueInput)
  @IsOptional()
  @Field(() => CandidateInterviewerWhereUniqueInput, {
    nullable: true,
  })
  candidateInterviewer?: CandidateInterviewerWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenant?: TenantWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => CandidateWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CandidateWhereUniqueInput)
  @IsOptional()
  @Field(() => CandidateWhereUniqueInput, {
    nullable: true,
  })
  candidate?: CandidateWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => CandidateCriterionRatingListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CandidateCriterionRatingListRelationFilter)
  @IsOptional()
  @Field(() => CandidateCriterionRatingListRelationFilter, {
    nullable: true,
  })
  candidateCriterionRating?: CandidateCriterionRatingListRelationFilter;
}

export { CandidateFeedbackWhereInput as CandidateFeedbackWhereInput };
