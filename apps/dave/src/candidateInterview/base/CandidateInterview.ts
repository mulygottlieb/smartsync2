/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsDate,
  IsOptional,
  IsBoolean,
  IsNumber,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { Decimal } from "decimal.js";
import { Organization } from "../../organization/base/Organization";
import { Tenant } from "../../tenant/base/Tenant";
import { Candidate } from "../../candidate/base/Candidate";
import { CandidateFeedback } from "../../candidateFeedback/base/CandidateFeedback";
import { CandidateInterviewer } from "../../candidateInterviewer/base/CandidateInterviewer";
import { CandidatePersonalQuality } from "../../candidatePersonalQuality/base/CandidatePersonalQuality";
import { CandidateTechnology } from "../../candidateTechnology/base/CandidateTechnology";

@ObjectType()
class CandidateInterview {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  title!: string;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  startTime!: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  endTime!: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  location!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  note!: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isArchived!: boolean | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  rating!: Decimal | null;

  @ApiProperty({
    required: false,
    type: () => Organization,
  })
  @ValidateNested()
  @Type(() => Organization)
  @IsOptional()
  organization?: Organization | null;

  @ApiProperty({
    required: false,
    type: () => Tenant,
  })
  @ValidateNested()
  @Type(() => Tenant)
  @IsOptional()
  tenant?: Tenant | null;

  @ApiProperty({
    required: false,
    type: () => Candidate,
  })
  @ValidateNested()
  @Type(() => Candidate)
  @IsOptional()
  candidate?: Candidate | null;

  @ApiProperty({
    required: false,
    type: () => [CandidateFeedback],
  })
  @ValidateNested()
  @Type(() => CandidateFeedback)
  @IsOptional()
  candidateFeedback?: Array<CandidateFeedback>;

  @ApiProperty({
    required: false,
    type: () => [CandidateInterviewer],
  })
  @ValidateNested()
  @Type(() => CandidateInterviewer)
  @IsOptional()
  candidateInterviewer?: Array<CandidateInterviewer>;

  @ApiProperty({
    required: false,
    type: () => [CandidatePersonalQuality],
  })
  @ValidateNested()
  @Type(() => CandidatePersonalQuality)
  @IsOptional()
  candidatePersonalQuality?: Array<CandidatePersonalQuality>;

  @ApiProperty({
    required: false,
    type: () => [CandidateTechnology],
  })
  @ValidateNested()
  @Type(() => CandidateTechnology)
  @IsOptional()
  candidateTechnology?: Array<CandidateTechnology>;
}

export { CandidateInterview as CandidateInterview };
