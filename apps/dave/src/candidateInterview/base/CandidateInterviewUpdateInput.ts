/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsDate,
  IsBoolean,
  IsNumber,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { Decimal } from "decimal.js";
import { OrganizationWhereUniqueInput } from "../../organization/base/OrganizationWhereUniqueInput";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";
import { CandidateWhereUniqueInput } from "../../candidate/base/CandidateWhereUniqueInput";
import { CandidateFeedbackUpdateManyWithoutCandidateInterviewsInput } from "./CandidateFeedbackUpdateManyWithoutCandidateInterviewsInput";
import { CandidateInterviewerUpdateManyWithoutCandidateInterviewsInput } from "./CandidateInterviewerUpdateManyWithoutCandidateInterviewsInput";
import { CandidatePersonalQualityUpdateManyWithoutCandidateInterviewsInput } from "./CandidatePersonalQualityUpdateManyWithoutCandidateInterviewsInput";
import { CandidateTechnologyUpdateManyWithoutCandidateInterviewsInput } from "./CandidateTechnologyUpdateManyWithoutCandidateInterviewsInput";

@InputType()
class CandidateInterviewUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  startTime?: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  endTime?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  location?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  note?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isArchived?: boolean | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  rating?: Decimal | null;

  @ApiProperty({
    required: false,
    type: () => OrganizationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrganizationWhereUniqueInput)
  @IsOptional()
  @Field(() => OrganizationWhereUniqueInput, {
    nullable: true,
  })
  organization?: OrganizationWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenant?: TenantWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => CandidateWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CandidateWhereUniqueInput)
  @IsOptional()
  @Field(() => CandidateWhereUniqueInput, {
    nullable: true,
  })
  candidate?: CandidateWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => CandidateFeedbackUpdateManyWithoutCandidateInterviewsInput,
  })
  @ValidateNested()
  @Type(() => CandidateFeedbackUpdateManyWithoutCandidateInterviewsInput)
  @IsOptional()
  @Field(() => CandidateFeedbackUpdateManyWithoutCandidateInterviewsInput, {
    nullable: true,
  })
  candidateFeedback?: CandidateFeedbackUpdateManyWithoutCandidateInterviewsInput;

  @ApiProperty({
    required: false,
    type: () => CandidateInterviewerUpdateManyWithoutCandidateInterviewsInput,
  })
  @ValidateNested()
  @Type(() => CandidateInterviewerUpdateManyWithoutCandidateInterviewsInput)
  @IsOptional()
  @Field(() => CandidateInterviewerUpdateManyWithoutCandidateInterviewsInput, {
    nullable: true,
  })
  candidateInterviewer?: CandidateInterviewerUpdateManyWithoutCandidateInterviewsInput;

  @ApiProperty({
    required: false,
    type: () =>
      CandidatePersonalQualityUpdateManyWithoutCandidateInterviewsInput,
  })
  @ValidateNested()
  @Type(() => CandidatePersonalQualityUpdateManyWithoutCandidateInterviewsInput)
  @IsOptional()
  @Field(
    () => CandidatePersonalQualityUpdateManyWithoutCandidateInterviewsInput,
    {
      nullable: true,
    }
  )
  candidatePersonalQuality?: CandidatePersonalQualityUpdateManyWithoutCandidateInterviewsInput;

  @ApiProperty({
    required: false,
    type: () => CandidateTechnologyUpdateManyWithoutCandidateInterviewsInput,
  })
  @ValidateNested()
  @Type(() => CandidateTechnologyUpdateManyWithoutCandidateInterviewsInput)
  @IsOptional()
  @Field(() => CandidateTechnologyUpdateManyWithoutCandidateInterviewsInput, {
    nullable: true,
  })
  candidateTechnology?: CandidateTechnologyUpdateManyWithoutCandidateInterviewsInput;
}

export { CandidateInterviewUpdateInput as CandidateInterviewUpdateInput };
