/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { DateTimeFilter } from "../../util/DateTimeFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { DecimalNullableFilter } from "../../util/DecimalNullableFilter";
import { OrganizationWhereUniqueInput } from "../../organization/base/OrganizationWhereUniqueInput";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";
import { CandidateWhereUniqueInput } from "../../candidate/base/CandidateWhereUniqueInput";
import { CandidateFeedbackListRelationFilter } from "../../candidateFeedback/base/CandidateFeedbackListRelationFilter";
import { CandidateInterviewerListRelationFilter } from "../../candidateInterviewer/base/CandidateInterviewerListRelationFilter";
import { CandidatePersonalQualityListRelationFilter } from "../../candidatePersonalQuality/base/CandidatePersonalQualityListRelationFilter";
import { CandidateTechnologyListRelationFilter } from "../../candidateTechnology/base/CandidateTechnologyListRelationFilter";

@InputType()
class CandidateInterviewWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  createdAt?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  updatedAt?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  title?: StringFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  startTime?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  endTime?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  location?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  note?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isArchived?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: DecimalNullableFilter,
  })
  @Type(() => DecimalNullableFilter)
  @IsOptional()
  @Field(() => DecimalNullableFilter, {
    nullable: true,
  })
  rating?: DecimalNullableFilter;

  @ApiProperty({
    required: false,
    type: () => OrganizationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrganizationWhereUniqueInput)
  @IsOptional()
  @Field(() => OrganizationWhereUniqueInput, {
    nullable: true,
  })
  organization?: OrganizationWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenant?: TenantWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => CandidateWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CandidateWhereUniqueInput)
  @IsOptional()
  @Field(() => CandidateWhereUniqueInput, {
    nullable: true,
  })
  candidate?: CandidateWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => CandidateFeedbackListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CandidateFeedbackListRelationFilter)
  @IsOptional()
  @Field(() => CandidateFeedbackListRelationFilter, {
    nullable: true,
  })
  candidateFeedback?: CandidateFeedbackListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CandidateInterviewerListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CandidateInterviewerListRelationFilter)
  @IsOptional()
  @Field(() => CandidateInterviewerListRelationFilter, {
    nullable: true,
  })
  candidateInterviewer?: CandidateInterviewerListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CandidatePersonalQualityListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CandidatePersonalQualityListRelationFilter)
  @IsOptional()
  @Field(() => CandidatePersonalQualityListRelationFilter, {
    nullable: true,
  })
  candidatePersonalQuality?: CandidatePersonalQualityListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CandidateTechnologyListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CandidateTechnologyListRelationFilter)
  @IsOptional()
  @Field(() => CandidateTechnologyListRelationFilter, {
    nullable: true,
  })
  candidateTechnology?: CandidateTechnologyListRelationFilter;
}

export { CandidateInterviewWhereInput as CandidateInterviewWhereInput };
