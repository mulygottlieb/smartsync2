/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsDate, IsOptional, ValidateNested } from "class-validator";
import { Type } from "class-transformer";
import { JobPreset } from "../../jobPreset/base/JobPreset";
import { Organization } from "../../organization/base/Organization";
import { Tenant } from "../../tenant/base/Tenant";
import { JobSearchOccupation } from "../../jobSearchOccupation/base/JobSearchOccupation";
import { Employee } from "../../employee/base/Employee";
import { JobSearchCategory } from "../../jobSearchCategory/base/JobSearchCategory";

@ObjectType()
class EmployeeUpworkJobSearchCriterion {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  keyword!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  jobType!: string | null;

  @ApiProperty({
    required: false,
    type: () => JobPreset,
  })
  @ValidateNested()
  @Type(() => JobPreset)
  @IsOptional()
  jobPreset?: JobPreset | null;

  @ApiProperty({
    required: false,
    type: () => Organization,
  })
  @ValidateNested()
  @Type(() => Organization)
  @IsOptional()
  organization?: Organization | null;

  @ApiProperty({
    required: false,
    type: () => Tenant,
  })
  @ValidateNested()
  @Type(() => Tenant)
  @IsOptional()
  tenant?: Tenant | null;

  @ApiProperty({
    required: false,
    type: () => JobSearchOccupation,
  })
  @ValidateNested()
  @Type(() => JobSearchOccupation)
  @IsOptional()
  jobSearchOccupation?: JobSearchOccupation | null;

  @ApiProperty({
    required: true,
    type: () => Employee,
  })
  @ValidateNested()
  @Type(() => Employee)
  employee?: Employee;

  @ApiProperty({
    required: false,
    type: () => JobSearchCategory,
  })
  @ValidateNested()
  @Type(() => JobSearchCategory)
  @IsOptional()
  jobSearchCategory?: JobSearchCategory | null;
}

export { EmployeeUpworkJobSearchCriterion as EmployeeUpworkJobSearchCriterion };
