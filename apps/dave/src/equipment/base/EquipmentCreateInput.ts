/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsNumber,
  IsOptional,
  IsBoolean,
  ValidateNested,
} from "class-validator";
import { Decimal } from "decimal.js";
import { ImageAssetWhereUniqueInput } from "../../imageAsset/base/ImageAssetWhereUniqueInput";
import { Type } from "class-transformer";
import { OrganizationWhereUniqueInput } from "../../organization/base/OrganizationWhereUniqueInput";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";
import { EquipmentSharingCreateNestedManyWithoutEquipmentItemsInput } from "./EquipmentSharingCreateNestedManyWithoutEquipmentItemsInput";
import { TagEquipmentCreateNestedManyWithoutEquipmentItemsInput } from "./TagEquipmentCreateNestedManyWithoutEquipmentItemsInput";

@InputType()
class EquipmentCreateInput {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  typeField!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  serialNumber!: string;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  manufacturedYear?: Decimal | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  initialCost?: Decimal | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  currency!: string;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  maxSharePeriod?: Decimal | null;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  autoApproveShare!: boolean;

  @ApiProperty({
    required: false,
    type: () => ImageAssetWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ImageAssetWhereUniqueInput)
  @IsOptional()
  @Field(() => ImageAssetWhereUniqueInput, {
    nullable: true,
  })
  imageAsset?: ImageAssetWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => OrganizationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrganizationWhereUniqueInput)
  @IsOptional()
  @Field(() => OrganizationWhereUniqueInput, {
    nullable: true,
  })
  organization?: OrganizationWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenant?: TenantWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => EquipmentSharingCreateNestedManyWithoutEquipmentItemsInput,
  })
  @ValidateNested()
  @Type(() => EquipmentSharingCreateNestedManyWithoutEquipmentItemsInput)
  @IsOptional()
  @Field(() => EquipmentSharingCreateNestedManyWithoutEquipmentItemsInput, {
    nullable: true,
  })
  equipmentSharing?: EquipmentSharingCreateNestedManyWithoutEquipmentItemsInput;

  @ApiProperty({
    required: false,
    type: () => TagEquipmentCreateNestedManyWithoutEquipmentItemsInput,
  })
  @ValidateNested()
  @Type(() => TagEquipmentCreateNestedManyWithoutEquipmentItemsInput)
  @IsOptional()
  @Field(() => TagEquipmentCreateNestedManyWithoutEquipmentItemsInput, {
    nullable: true,
  })
  tagEquipment?: TagEquipmentCreateNestedManyWithoutEquipmentItemsInput;
}

export { EquipmentCreateInput as EquipmentCreateInput };
