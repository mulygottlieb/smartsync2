/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsDate,
  IsInt,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { EquipmentSharingPolicyWhereUniqueInput } from "../../equipmentSharingPolicy/base/EquipmentSharingPolicyWhereUniqueInput";
import { EquipmentWhereUniqueInput } from "../../equipment/base/EquipmentWhereUniqueInput";
import { OrganizationWhereUniqueInput } from "../../organization/base/OrganizationWhereUniqueInput";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";
import { EquipmentSharesEmployeeUpdateManyWithoutEquipmentSharingsInput } from "./EquipmentSharesEmployeeUpdateManyWithoutEquipmentSharingsInput";
import { EquipmentSharesTeamUpdateManyWithoutEquipmentSharingsInput } from "./EquipmentSharesTeamUpdateManyWithoutEquipmentSharingsInput";

@InputType()
class EquipmentSharingUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  shareRequestDay?: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  shareStartDay?: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  shareEndDay?: Date | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  status?: number;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  createdBy?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  createdByName?: string | null;

  @ApiProperty({
    required: false,
    type: () => EquipmentSharingPolicyWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => EquipmentSharingPolicyWhereUniqueInput)
  @IsOptional()
  @Field(() => EquipmentSharingPolicyWhereUniqueInput, {
    nullable: true,
  })
  equipmentSharingPolicy?: EquipmentSharingPolicyWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => EquipmentWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => EquipmentWhereUniqueInput)
  @IsOptional()
  @Field(() => EquipmentWhereUniqueInput, {
    nullable: true,
  })
  equipment?: EquipmentWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => OrganizationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrganizationWhereUniqueInput)
  @IsOptional()
  @Field(() => OrganizationWhereUniqueInput, {
    nullable: true,
  })
  organization?: OrganizationWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenant?: TenantWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => EquipmentSharesEmployeeUpdateManyWithoutEquipmentSharingsInput,
  })
  @ValidateNested()
  @Type(() => EquipmentSharesEmployeeUpdateManyWithoutEquipmentSharingsInput)
  @IsOptional()
  @Field(() => EquipmentSharesEmployeeUpdateManyWithoutEquipmentSharingsInput, {
    nullable: true,
  })
  equipmentSharesEmployees?: EquipmentSharesEmployeeUpdateManyWithoutEquipmentSharingsInput;

  @ApiProperty({
    required: false,
    type: () => EquipmentSharesTeamUpdateManyWithoutEquipmentSharingsInput,
  })
  @ValidateNested()
  @Type(() => EquipmentSharesTeamUpdateManyWithoutEquipmentSharingsInput)
  @IsOptional()
  @Field(() => EquipmentSharesTeamUpdateManyWithoutEquipmentSharingsInput, {
    nullable: true,
  })
  equipmentSharesTeams?: EquipmentSharesTeamUpdateManyWithoutEquipmentSharingsInput;
}

export { EquipmentSharingUpdateInput as EquipmentSharingUpdateInput };
