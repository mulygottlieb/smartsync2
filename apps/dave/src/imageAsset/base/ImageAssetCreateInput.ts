/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";

import {
  IsString,
  IsOptional,
  IsInt,
  IsBoolean,
  IsNumber,
  IsEnum,
  IsDate,
  ValidateNested,
} from "class-validator";

import { Decimal } from "decimal.js";
import { EnumImageAssetStorageProvider } from "./EnumImageAssetStorageProvider";
import { Type } from "class-transformer";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";
import { OrganizationWhereUniqueInput } from "../../organization/base/OrganizationWhereUniqueInput";
import { OrganizationCreateNestedManyWithoutImageAssetsInput } from "./OrganizationCreateNestedManyWithoutImageAssetsInput";
import { TenantCreateNestedManyWithoutImageAssetsInput } from "./TenantCreateNestedManyWithoutImageAssetsInput";
import { EquipmentCreateNestedManyWithoutImageAssetsInput } from "./EquipmentCreateNestedManyWithoutImageAssetsInput";
import { IssueTypeCreateNestedManyWithoutImageAssetsInput } from "./IssueTypeCreateNestedManyWithoutImageAssetsInput";
import { MerchantCreateNestedManyWithoutImageAssetsInput } from "./MerchantCreateNestedManyWithoutImageAssetsInput";
import { OrganizationContactCreateNestedManyWithoutImageAssetsInput } from "./OrganizationContactCreateNestedManyWithoutImageAssetsInput";
import { OrganizationDocumentCreateNestedManyWithoutImageAssetsInput } from "./OrganizationDocumentCreateNestedManyWithoutImageAssetsInput";
import { OrganizationProjectCreateNestedManyWithoutImageAssetsInput } from "./OrganizationProjectCreateNestedManyWithoutImageAssetsInput";
import { OrganizationTeamCreateNestedManyWithoutImageAssetsInput } from "./OrganizationTeamCreateNestedManyWithoutImageAssetsInput";
import { ProductCreateNestedManyWithoutImageAssetsInput } from "./ProductCreateNestedManyWithoutImageAssetsInput";
import { ProductCategoryCreateNestedManyWithoutImageAssetsInput } from "./ProductCategoryCreateNestedManyWithoutImageAssetsInput";
import { ProductGalleryItemCreateNestedManyWithoutImageAssetsInput } from "./ProductGalleryItemCreateNestedManyWithoutImageAssetsInput";
import { ProductVariantCreateNestedManyWithoutImageAssetsInput } from "./ProductVariantCreateNestedManyWithoutImageAssetsInput";
import { TimeOffRequestCreateNestedManyWithoutImageAssetsInput } from "./TimeOffRequestCreateNestedManyWithoutImageAssetsInput";
import { UserCreateNestedManyWithoutImageAssetsInput } from "./UserCreateNestedManyWithoutImageAssetsInput";
import { WarehouseCreateNestedManyWithoutImageAssetsInput } from "./WarehouseCreateNestedManyWithoutImageAssetsInput";

@InputType()
class ImageAssetCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  url!: string;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  width!: number;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  height!: number;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  isFeatured!: boolean;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  thumb?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  size?: Decimal | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  externalProviderId?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumImageAssetStorageProvider,
  })
  @IsEnum(EnumImageAssetStorageProvider)
  @IsOptional()
  @Field(() => EnumImageAssetStorageProvider, {
    nullable: true,
  })
  storageProvider?: "LOCAL" | "S3" | "WASABI" | "CLOUDINARY" | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  deletedAt?: Date | null;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenantImageAssetTenantIdTotenant?: TenantWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => OrganizationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrganizationWhereUniqueInput)
  @IsOptional()
  @Field(() => OrganizationWhereUniqueInput, {
    nullable: true,
  })
  organizationImageAssetOrganizationIdToorganization?: OrganizationWhereUniqueInput | null;

  @ApiProperty({
    required: true,
    type: () => OrganizationCreateNestedManyWithoutImageAssetsInput,
  })
  @ValidateNested()
  @Type(() => OrganizationCreateNestedManyWithoutImageAssetsInput)
  @IsOptional()
  @Field(() => OrganizationCreateNestedManyWithoutImageAssetsInput, {
    nullable: true,
  })
  organizationOrganizationImageIdToimageAsset?: OrganizationCreateNestedManyWithoutImageAssetsInput;

  @ApiProperty({
    required: true,
    type: () => TenantCreateNestedManyWithoutImageAssetsInput,
  })
  @ValidateNested()
  @Type(() => TenantCreateNestedManyWithoutImageAssetsInput)
  @IsOptional()
  @Field(() => TenantCreateNestedManyWithoutImageAssetsInput, {
    nullable: true,
  })
  tenantTenantImageIdToimageAsset?: TenantCreateNestedManyWithoutImageAssetsInput;

  @ApiProperty({
    required: false,
    type: () => EquipmentCreateNestedManyWithoutImageAssetsInput,
  })
  @ValidateNested()
  @Type(() => EquipmentCreateNestedManyWithoutImageAssetsInput)
  @IsOptional()
  @Field(() => EquipmentCreateNestedManyWithoutImageAssetsInput, {
    nullable: true,
  })
  equipment?: EquipmentCreateNestedManyWithoutImageAssetsInput;

  @ApiProperty({
    required: false,
    type: () => IssueTypeCreateNestedManyWithoutImageAssetsInput,
  })
  @ValidateNested()
  @Type(() => IssueTypeCreateNestedManyWithoutImageAssetsInput)
  @IsOptional()
  @Field(() => IssueTypeCreateNestedManyWithoutImageAssetsInput, {
    nullable: true,
  })
  issueType?: IssueTypeCreateNestedManyWithoutImageAssetsInput;

  @ApiProperty({
    required: false,
    type: () => MerchantCreateNestedManyWithoutImageAssetsInput,
  })
  @ValidateNested()
  @Type(() => MerchantCreateNestedManyWithoutImageAssetsInput)
  @IsOptional()
  @Field(() => MerchantCreateNestedManyWithoutImageAssetsInput, {
    nullable: true,
  })
  merchant?: MerchantCreateNestedManyWithoutImageAssetsInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationContactCreateNestedManyWithoutImageAssetsInput,
  })
  @ValidateNested()
  @Type(() => OrganizationContactCreateNestedManyWithoutImageAssetsInput)
  @IsOptional()
  @Field(() => OrganizationContactCreateNestedManyWithoutImageAssetsInput, {
    nullable: true,
  })
  organizationContact?: OrganizationContactCreateNestedManyWithoutImageAssetsInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationDocumentCreateNestedManyWithoutImageAssetsInput,
  })
  @ValidateNested()
  @Type(() => OrganizationDocumentCreateNestedManyWithoutImageAssetsInput)
  @IsOptional()
  @Field(() => OrganizationDocumentCreateNestedManyWithoutImageAssetsInput, {
    nullable: true,
  })
  organizationDocument?: OrganizationDocumentCreateNestedManyWithoutImageAssetsInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationProjectCreateNestedManyWithoutImageAssetsInput,
  })
  @ValidateNested()
  @Type(() => OrganizationProjectCreateNestedManyWithoutImageAssetsInput)
  @IsOptional()
  @Field(() => OrganizationProjectCreateNestedManyWithoutImageAssetsInput, {
    nullable: true,
  })
  organizationProject?: OrganizationProjectCreateNestedManyWithoutImageAssetsInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationTeamCreateNestedManyWithoutImageAssetsInput,
  })
  @ValidateNested()
  @Type(() => OrganizationTeamCreateNestedManyWithoutImageAssetsInput)
  @IsOptional()
  @Field(() => OrganizationTeamCreateNestedManyWithoutImageAssetsInput, {
    nullable: true,
  })
  organizationTeam?: OrganizationTeamCreateNestedManyWithoutImageAssetsInput;

  @ApiProperty({
    required: false,
    type: () => ProductCreateNestedManyWithoutImageAssetsInput,
  })
  @ValidateNested()
  @Type(() => ProductCreateNestedManyWithoutImageAssetsInput)
  @IsOptional()
  @Field(() => ProductCreateNestedManyWithoutImageAssetsInput, {
    nullable: true,
  })
  product?: ProductCreateNestedManyWithoutImageAssetsInput;

  @ApiProperty({
    required: false,
    type: () => ProductCategoryCreateNestedManyWithoutImageAssetsInput,
  })
  @ValidateNested()
  @Type(() => ProductCategoryCreateNestedManyWithoutImageAssetsInput)
  @IsOptional()
  @Field(() => ProductCategoryCreateNestedManyWithoutImageAssetsInput, {
    nullable: true,
  })
  productCategory?: ProductCategoryCreateNestedManyWithoutImageAssetsInput;

  @ApiProperty({
    required: false,
    type: () => ProductGalleryItemCreateNestedManyWithoutImageAssetsInput,
  })
  @ValidateNested()
  @Type(() => ProductGalleryItemCreateNestedManyWithoutImageAssetsInput)
  @IsOptional()
  @Field(() => ProductGalleryItemCreateNestedManyWithoutImageAssetsInput, {
    nullable: true,
  })
  productGalleryItem?: ProductGalleryItemCreateNestedManyWithoutImageAssetsInput;

  @ApiProperty({
    required: false,
    type: () => ProductVariantCreateNestedManyWithoutImageAssetsInput,
  })
  @ValidateNested()
  @Type(() => ProductVariantCreateNestedManyWithoutImageAssetsInput)
  @IsOptional()
  @Field(() => ProductVariantCreateNestedManyWithoutImageAssetsInput, {
    nullable: true,
  })
  productVariant?: ProductVariantCreateNestedManyWithoutImageAssetsInput;

  @ApiProperty({
    required: false,
    type: () => TimeOffRequestCreateNestedManyWithoutImageAssetsInput,
  })
  @ValidateNested()
  @Type(() => TimeOffRequestCreateNestedManyWithoutImageAssetsInput)
  @IsOptional()
  @Field(() => TimeOffRequestCreateNestedManyWithoutImageAssetsInput, {
    nullable: true,
  })
  timeOffRequest?: TimeOffRequestCreateNestedManyWithoutImageAssetsInput;

  @ApiProperty({
    required: false,
    type: () => UserCreateNestedManyWithoutImageAssetsInput,
  })
  @ValidateNested()
  @Type(() => UserCreateNestedManyWithoutImageAssetsInput)
  @IsOptional()
  @Field(() => UserCreateNestedManyWithoutImageAssetsInput, {
    nullable: true,
  })
  user?: UserCreateNestedManyWithoutImageAssetsInput;

  @ApiProperty({
    required: false,
    type: () => WarehouseCreateNestedManyWithoutImageAssetsInput,
  })
  @ValidateNested()
  @Type(() => WarehouseCreateNestedManyWithoutImageAssetsInput)
  @IsOptional()
  @Field(() => WarehouseCreateNestedManyWithoutImageAssetsInput, {
    nullable: true,
  })
  warehouse?: WarehouseCreateNestedManyWithoutImageAssetsInput;
}

export { ImageAssetCreateInput as ImageAssetCreateInput };
