/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";

import {
  IsString,
  IsOptional,
  IsInt,
  IsBoolean,
  IsNumber,
  IsEnum,
  IsDate,
  ValidateNested,
} from "class-validator";

import { Decimal } from "decimal.js";
import { EnumImageAssetStorageProvider } from "./EnumImageAssetStorageProvider";
import { Type } from "class-transformer";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";
import { OrganizationWhereUniqueInput } from "../../organization/base/OrganizationWhereUniqueInput";
import { OrganizationUpdateManyWithoutImageAssetsInput } from "./OrganizationUpdateManyWithoutImageAssetsInput";
import { TenantUpdateManyWithoutImageAssetsInput } from "./TenantUpdateManyWithoutImageAssetsInput";
import { EquipmentUpdateManyWithoutImageAssetsInput } from "./EquipmentUpdateManyWithoutImageAssetsInput";
import { IssueTypeUpdateManyWithoutImageAssetsInput } from "./IssueTypeUpdateManyWithoutImageAssetsInput";
import { MerchantUpdateManyWithoutImageAssetsInput } from "./MerchantUpdateManyWithoutImageAssetsInput";
import { OrganizationContactUpdateManyWithoutImageAssetsInput } from "./OrganizationContactUpdateManyWithoutImageAssetsInput";
import { OrganizationDocumentUpdateManyWithoutImageAssetsInput } from "./OrganizationDocumentUpdateManyWithoutImageAssetsInput";
import { OrganizationProjectUpdateManyWithoutImageAssetsInput } from "./OrganizationProjectUpdateManyWithoutImageAssetsInput";
import { OrganizationTeamUpdateManyWithoutImageAssetsInput } from "./OrganizationTeamUpdateManyWithoutImageAssetsInput";
import { ProductUpdateManyWithoutImageAssetsInput } from "./ProductUpdateManyWithoutImageAssetsInput";
import { ProductCategoryUpdateManyWithoutImageAssetsInput } from "./ProductCategoryUpdateManyWithoutImageAssetsInput";
import { ProductGalleryItemUpdateManyWithoutImageAssetsInput } from "./ProductGalleryItemUpdateManyWithoutImageAssetsInput";
import { ProductVariantUpdateManyWithoutImageAssetsInput } from "./ProductVariantUpdateManyWithoutImageAssetsInput";
import { TimeOffRequestUpdateManyWithoutImageAssetsInput } from "./TimeOffRequestUpdateManyWithoutImageAssetsInput";
import { UserUpdateManyWithoutImageAssetsInput } from "./UserUpdateManyWithoutImageAssetsInput";
import { WarehouseUpdateManyWithoutImageAssetsInput } from "./WarehouseUpdateManyWithoutImageAssetsInput";

@InputType()
class ImageAssetUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  url?: string;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  width?: number;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  height?: number;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isFeatured?: boolean;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  thumb?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  size?: Decimal | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  externalProviderId?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumImageAssetStorageProvider,
  })
  @IsEnum(EnumImageAssetStorageProvider)
  @IsOptional()
  @Field(() => EnumImageAssetStorageProvider, {
    nullable: true,
  })
  storageProvider?: "LOCAL" | "S3" | "WASABI" | "CLOUDINARY" | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  deletedAt?: Date | null;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenantImageAssetTenantIdTotenant?: TenantWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => OrganizationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrganizationWhereUniqueInput)
  @IsOptional()
  @Field(() => OrganizationWhereUniqueInput, {
    nullable: true,
  })
  organizationImageAssetOrganizationIdToorganization?: OrganizationWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => OrganizationUpdateManyWithoutImageAssetsInput,
  })
  @ValidateNested()
  @Type(() => OrganizationUpdateManyWithoutImageAssetsInput)
  @IsOptional()
  @Field(() => OrganizationUpdateManyWithoutImageAssetsInput, {
    nullable: true,
  })
  organizationOrganizationImageIdToimageAsset?: OrganizationUpdateManyWithoutImageAssetsInput;

  @ApiProperty({
    required: false,
    type: () => TenantUpdateManyWithoutImageAssetsInput,
  })
  @ValidateNested()
  @Type(() => TenantUpdateManyWithoutImageAssetsInput)
  @IsOptional()
  @Field(() => TenantUpdateManyWithoutImageAssetsInput, {
    nullable: true,
  })
  tenantTenantImageIdToimageAsset?: TenantUpdateManyWithoutImageAssetsInput;

  @ApiProperty({
    required: false,
    type: () => EquipmentUpdateManyWithoutImageAssetsInput,
  })
  @ValidateNested()
  @Type(() => EquipmentUpdateManyWithoutImageAssetsInput)
  @IsOptional()
  @Field(() => EquipmentUpdateManyWithoutImageAssetsInput, {
    nullable: true,
  })
  equipment?: EquipmentUpdateManyWithoutImageAssetsInput;

  @ApiProperty({
    required: false,
    type: () => IssueTypeUpdateManyWithoutImageAssetsInput,
  })
  @ValidateNested()
  @Type(() => IssueTypeUpdateManyWithoutImageAssetsInput)
  @IsOptional()
  @Field(() => IssueTypeUpdateManyWithoutImageAssetsInput, {
    nullable: true,
  })
  issueType?: IssueTypeUpdateManyWithoutImageAssetsInput;

  @ApiProperty({
    required: false,
    type: () => MerchantUpdateManyWithoutImageAssetsInput,
  })
  @ValidateNested()
  @Type(() => MerchantUpdateManyWithoutImageAssetsInput)
  @IsOptional()
  @Field(() => MerchantUpdateManyWithoutImageAssetsInput, {
    nullable: true,
  })
  merchant?: MerchantUpdateManyWithoutImageAssetsInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationContactUpdateManyWithoutImageAssetsInput,
  })
  @ValidateNested()
  @Type(() => OrganizationContactUpdateManyWithoutImageAssetsInput)
  @IsOptional()
  @Field(() => OrganizationContactUpdateManyWithoutImageAssetsInput, {
    nullable: true,
  })
  organizationContact?: OrganizationContactUpdateManyWithoutImageAssetsInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationDocumentUpdateManyWithoutImageAssetsInput,
  })
  @ValidateNested()
  @Type(() => OrganizationDocumentUpdateManyWithoutImageAssetsInput)
  @IsOptional()
  @Field(() => OrganizationDocumentUpdateManyWithoutImageAssetsInput, {
    nullable: true,
  })
  organizationDocument?: OrganizationDocumentUpdateManyWithoutImageAssetsInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationProjectUpdateManyWithoutImageAssetsInput,
  })
  @ValidateNested()
  @Type(() => OrganizationProjectUpdateManyWithoutImageAssetsInput)
  @IsOptional()
  @Field(() => OrganizationProjectUpdateManyWithoutImageAssetsInput, {
    nullable: true,
  })
  organizationProject?: OrganizationProjectUpdateManyWithoutImageAssetsInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationTeamUpdateManyWithoutImageAssetsInput,
  })
  @ValidateNested()
  @Type(() => OrganizationTeamUpdateManyWithoutImageAssetsInput)
  @IsOptional()
  @Field(() => OrganizationTeamUpdateManyWithoutImageAssetsInput, {
    nullable: true,
  })
  organizationTeam?: OrganizationTeamUpdateManyWithoutImageAssetsInput;

  @ApiProperty({
    required: false,
    type: () => ProductUpdateManyWithoutImageAssetsInput,
  })
  @ValidateNested()
  @Type(() => ProductUpdateManyWithoutImageAssetsInput)
  @IsOptional()
  @Field(() => ProductUpdateManyWithoutImageAssetsInput, {
    nullable: true,
  })
  product?: ProductUpdateManyWithoutImageAssetsInput;

  @ApiProperty({
    required: false,
    type: () => ProductCategoryUpdateManyWithoutImageAssetsInput,
  })
  @ValidateNested()
  @Type(() => ProductCategoryUpdateManyWithoutImageAssetsInput)
  @IsOptional()
  @Field(() => ProductCategoryUpdateManyWithoutImageAssetsInput, {
    nullable: true,
  })
  productCategory?: ProductCategoryUpdateManyWithoutImageAssetsInput;

  @ApiProperty({
    required: false,
    type: () => ProductGalleryItemUpdateManyWithoutImageAssetsInput,
  })
  @ValidateNested()
  @Type(() => ProductGalleryItemUpdateManyWithoutImageAssetsInput)
  @IsOptional()
  @Field(() => ProductGalleryItemUpdateManyWithoutImageAssetsInput, {
    nullable: true,
  })
  productGalleryItem?: ProductGalleryItemUpdateManyWithoutImageAssetsInput;

  @ApiProperty({
    required: false,
    type: () => ProductVariantUpdateManyWithoutImageAssetsInput,
  })
  @ValidateNested()
  @Type(() => ProductVariantUpdateManyWithoutImageAssetsInput)
  @IsOptional()
  @Field(() => ProductVariantUpdateManyWithoutImageAssetsInput, {
    nullable: true,
  })
  productVariant?: ProductVariantUpdateManyWithoutImageAssetsInput;

  @ApiProperty({
    required: false,
    type: () => TimeOffRequestUpdateManyWithoutImageAssetsInput,
  })
  @ValidateNested()
  @Type(() => TimeOffRequestUpdateManyWithoutImageAssetsInput)
  @IsOptional()
  @Field(() => TimeOffRequestUpdateManyWithoutImageAssetsInput, {
    nullable: true,
  })
  timeOffRequest?: TimeOffRequestUpdateManyWithoutImageAssetsInput;

  @ApiProperty({
    required: false,
    type: () => UserUpdateManyWithoutImageAssetsInput,
  })
  @ValidateNested()
  @Type(() => UserUpdateManyWithoutImageAssetsInput)
  @IsOptional()
  @Field(() => UserUpdateManyWithoutImageAssetsInput, {
    nullable: true,
  })
  user?: UserUpdateManyWithoutImageAssetsInput;

  @ApiProperty({
    required: false,
    type: () => WarehouseUpdateManyWithoutImageAssetsInput,
  })
  @ValidateNested()
  @Type(() => WarehouseUpdateManyWithoutImageAssetsInput)
  @IsOptional()
  @Field(() => WarehouseUpdateManyWithoutImageAssetsInput, {
    nullable: true,
  })
  warehouse?: WarehouseUpdateManyWithoutImageAssetsInput;
}

export { ImageAssetUpdateInput as ImageAssetUpdateInput };
