/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsBoolean,
  IsNumber,
  IsInt,
  ValidateNested,
} from "class-validator";
import { Decimal } from "decimal.js";
import { IntegrationIntegrationTypeCreateNestedManyWithoutIntegrationsInput } from "./IntegrationIntegrationTypeCreateNestedManyWithoutIntegrationsInput";
import { Type } from "class-transformer";
import { TagIntegrationCreateNestedManyWithoutIntegrationsInput } from "./TagIntegrationCreateNestedManyWithoutIntegrationsInput";

@InputType()
class IntegrationCreateInput {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  imgSrc?: string | null;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  isComingSoon!: boolean;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  isPaid!: boolean;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  version?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  docUrl?: string | null;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  isFreeTrial!: boolean;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  freeTrialPeriod?: Decimal | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  order?: number | null;

  @ApiProperty({
    required: false,
    type: () =>
      IntegrationIntegrationTypeCreateNestedManyWithoutIntegrationsInput,
  })
  @ValidateNested()
  @Type(
    () => IntegrationIntegrationTypeCreateNestedManyWithoutIntegrationsInput
  )
  @IsOptional()
  @Field(
    () => IntegrationIntegrationTypeCreateNestedManyWithoutIntegrationsInput,
    {
      nullable: true,
    }
  )
  integrationIntegrationType?: IntegrationIntegrationTypeCreateNestedManyWithoutIntegrationsInput;

  @ApiProperty({
    required: false,
    type: () => TagIntegrationCreateNestedManyWithoutIntegrationsInput,
  })
  @ValidateNested()
  @Type(() => TagIntegrationCreateNestedManyWithoutIntegrationsInput)
  @IsOptional()
  @Field(() => TagIntegrationCreateNestedManyWithoutIntegrationsInput, {
    nullable: true,
  })
  tagIntegration?: TagIntegrationCreateNestedManyWithoutIntegrationsInput;
}

export { IntegrationCreateInput as IntegrationCreateInput };
