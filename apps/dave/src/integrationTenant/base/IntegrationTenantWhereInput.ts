/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { DateTimeFilter } from "../../util/DateTimeFilter";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";
import { OrganizationWhereUniqueInput } from "../../organization/base/OrganizationWhereUniqueInput";
import { IntegrationEntitySettingListRelationFilter } from "../../integrationEntitySetting/base/IntegrationEntitySettingListRelationFilter";
import { IntegrationMapListRelationFilter } from "../../integrationMap/base/IntegrationMapListRelationFilter";
import { IntegrationSettingListRelationFilter } from "../../integrationSetting/base/IntegrationSettingListRelationFilter";

@InputType()
class IntegrationTenantWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  createdAt?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  updatedAt?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  name?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenant?: TenantWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrganizationWhereUniqueInput)
  @IsOptional()
  @Field(() => OrganizationWhereUniqueInput, {
    nullable: true,
  })
  organization?: OrganizationWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => IntegrationEntitySettingListRelationFilter,
  })
  @ValidateNested()
  @Type(() => IntegrationEntitySettingListRelationFilter)
  @IsOptional()
  @Field(() => IntegrationEntitySettingListRelationFilter, {
    nullable: true,
  })
  integrationEntitySetting?: IntegrationEntitySettingListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => IntegrationMapListRelationFilter,
  })
  @ValidateNested()
  @Type(() => IntegrationMapListRelationFilter)
  @IsOptional()
  @Field(() => IntegrationMapListRelationFilter, {
    nullable: true,
  })
  integrationMap?: IntegrationMapListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => IntegrationSettingListRelationFilter,
  })
  @ValidateNested()
  @Type(() => IntegrationSettingListRelationFilter)
  @IsOptional()
  @Field(() => IntegrationSettingListRelationFilter, {
    nullable: true,
  })
  integrationSetting?: IntegrationSettingListRelationFilter;
}

export { IntegrationTenantWhereInput as IntegrationTenantWhereInput };
