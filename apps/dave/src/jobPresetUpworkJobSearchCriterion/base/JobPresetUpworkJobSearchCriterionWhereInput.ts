/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { DateTimeFilter } from "../../util/DateTimeFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";
import { JobPresetWhereUniqueInput } from "../../jobPreset/base/JobPresetWhereUniqueInput";
import { JobSearchCategoryWhereUniqueInput } from "../../jobSearchCategory/base/JobSearchCategoryWhereUniqueInput";
import { JobSearchOccupationWhereUniqueInput } from "../../jobSearchOccupation/base/JobSearchOccupationWhereUniqueInput";
import { OrganizationWhereUniqueInput } from "../../organization/base/OrganizationWhereUniqueInput";

@InputType()
class JobPresetUpworkJobSearchCriterionWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  createdAt?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  updatedAt?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  keyword?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  jobType?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenant?: TenantWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => JobPresetWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => JobPresetWhereUniqueInput)
  @IsOptional()
  @Field(() => JobPresetWhereUniqueInput, {
    nullable: true,
  })
  jobPreset?: JobPresetWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => JobSearchCategoryWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => JobSearchCategoryWhereUniqueInput)
  @IsOptional()
  @Field(() => JobSearchCategoryWhereUniqueInput, {
    nullable: true,
  })
  jobSearchCategory?: JobSearchCategoryWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => JobSearchOccupationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => JobSearchOccupationWhereUniqueInput)
  @IsOptional()
  @Field(() => JobSearchOccupationWhereUniqueInput, {
    nullable: true,
  })
  jobSearchOccupation?: JobSearchOccupationWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrganizationWhereUniqueInput)
  @IsOptional()
  @Field(() => OrganizationWhereUniqueInput, {
    nullable: true,
  })
  organization?: OrganizationWhereUniqueInput;
}

export { JobPresetUpworkJobSearchCriterionWhereInput as JobPresetUpworkJobSearchCriterionWhereInput };
