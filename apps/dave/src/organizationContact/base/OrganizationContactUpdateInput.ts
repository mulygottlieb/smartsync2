/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsInt,
  IsEnum,
  ValidateNested,
} from "class-validator";
import { EnumOrganizationContactInviteStatus } from "./EnumOrganizationContactInviteStatus";
import { EnumOrganizationContactContactType } from "./EnumOrganizationContactContactType";
import { EnumOrganizationContactBudgetType } from "./EnumOrganizationContactBudgetType";
import { OrganizationWhereUniqueInput } from "../../organization/base/OrganizationWhereUniqueInput";
import { Type } from "class-transformer";
import { ImageAssetWhereUniqueInput } from "../../imageAsset/base/ImageAssetWhereUniqueInput";
import { ContactWhereUniqueInput } from "../../contact/base/ContactWhereUniqueInput";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";
import { DealWhereUniqueInput } from "../../deal/base/DealWhereUniqueInput";
import { ExpenseUpdateManyWithoutOrganizationContactsInput } from "./ExpenseUpdateManyWithoutOrganizationContactsInput";
import { IncomeUpdateManyWithoutOrganizationContactsInput } from "./IncomeUpdateManyWithoutOrganizationContactsInput";
import { InviteOrganizationContactUpdateManyWithoutOrganizationContactsInput } from "./InviteOrganizationContactUpdateManyWithoutOrganizationContactsInput";
import { InvoiceUpdateManyWithoutOrganizationContactsInput } from "./InvoiceUpdateManyWithoutOrganizationContactsInput";
import { OrganizationContactEmployeeUpdateManyWithoutOrganizationContactsInput } from "./OrganizationContactEmployeeUpdateManyWithoutOrganizationContactsInput";
import { OrganizationProjectUpdateManyWithoutOrganizationContactsInput } from "./OrganizationProjectUpdateManyWithoutOrganizationContactsInput";
import { PaymentUpdateManyWithoutOrganizationContactsInput } from "./PaymentUpdateManyWithoutOrganizationContactsInput";
import { ProposalUpdateManyWithoutOrganizationContactsInput } from "./ProposalUpdateManyWithoutOrganizationContactsInput";
import { TagOrganizationContactUpdateManyWithoutOrganizationContactsInput } from "./TagOrganizationContactUpdateManyWithoutOrganizationContactsInput";
import { TimeLogUpdateManyWithoutOrganizationContactsInput } from "./TimeLogUpdateManyWithoutOrganizationContactsInput";

@InputType()
class OrganizationContactUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  primaryEmail?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  primaryPhone?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  notes?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  imageUrl?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  budget?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  createdBy?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumOrganizationContactInviteStatus,
  })
  @IsEnum(EnumOrganizationContactInviteStatus)
  @IsOptional()
  @Field(() => EnumOrganizationContactInviteStatus, {
    nullable: true,
  })
  inviteStatus?: "NOT_INVITED" | "INVITED" | "ACCEPTED" | null;

  @ApiProperty({
    required: false,
    enum: EnumOrganizationContactContactType,
  })
  @IsEnum(EnumOrganizationContactContactType)
  @IsOptional()
  @Field(() => EnumOrganizationContactContactType, {
    nullable: true,
  })
  contactType?: "CLIENT" | "CUSTOMER" | "LEAD";

  @ApiProperty({
    required: false,
    enum: EnumOrganizationContactBudgetType,
  })
  @IsEnum(EnumOrganizationContactBudgetType)
  @IsOptional()
  @Field(() => EnumOrganizationContactBudgetType, {
    nullable: true,
  })
  budgetType?: "hours" | "cost" | null;

  @ApiProperty({
    required: false,
    type: () => OrganizationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrganizationWhereUniqueInput)
  @IsOptional()
  @Field(() => OrganizationWhereUniqueInput, {
    nullable: true,
  })
  organization?: OrganizationWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ImageAssetWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ImageAssetWhereUniqueInput)
  @IsOptional()
  @Field(() => ImageAssetWhereUniqueInput, {
    nullable: true,
  })
  imageAsset?: ImageAssetWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ContactWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ContactWhereUniqueInput)
  @IsOptional()
  @Field(() => ContactWhereUniqueInput, {
    nullable: true,
  })
  contact?: ContactWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenant?: TenantWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => DealWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DealWhereUniqueInput)
  @IsOptional()
  @Field(() => DealWhereUniqueInput, {
    nullable: true,
  })
  deal?: DealWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ExpenseUpdateManyWithoutOrganizationContactsInput,
  })
  @ValidateNested()
  @Type(() => ExpenseUpdateManyWithoutOrganizationContactsInput)
  @IsOptional()
  @Field(() => ExpenseUpdateManyWithoutOrganizationContactsInput, {
    nullable: true,
  })
  expense?: ExpenseUpdateManyWithoutOrganizationContactsInput;

  @ApiProperty({
    required: false,
    type: () => IncomeUpdateManyWithoutOrganizationContactsInput,
  })
  @ValidateNested()
  @Type(() => IncomeUpdateManyWithoutOrganizationContactsInput)
  @IsOptional()
  @Field(() => IncomeUpdateManyWithoutOrganizationContactsInput, {
    nullable: true,
  })
  income?: IncomeUpdateManyWithoutOrganizationContactsInput;

  @ApiProperty({
    required: false,
    type: () =>
      InviteOrganizationContactUpdateManyWithoutOrganizationContactsInput,
  })
  @ValidateNested()
  @Type(
    () => InviteOrganizationContactUpdateManyWithoutOrganizationContactsInput
  )
  @IsOptional()
  @Field(
    () => InviteOrganizationContactUpdateManyWithoutOrganizationContactsInput,
    {
      nullable: true,
    }
  )
  inviteOrganizationContact?: InviteOrganizationContactUpdateManyWithoutOrganizationContactsInput;

  @ApiProperty({
    required: false,
    type: () => InvoiceUpdateManyWithoutOrganizationContactsInput,
  })
  @ValidateNested()
  @Type(() => InvoiceUpdateManyWithoutOrganizationContactsInput)
  @IsOptional()
  @Field(() => InvoiceUpdateManyWithoutOrganizationContactsInput, {
    nullable: true,
  })
  invoice?: InvoiceUpdateManyWithoutOrganizationContactsInput;

  @ApiProperty({
    required: false,
    type: () =>
      OrganizationContactEmployeeUpdateManyWithoutOrganizationContactsInput,
  })
  @ValidateNested()
  @Type(
    () => OrganizationContactEmployeeUpdateManyWithoutOrganizationContactsInput
  )
  @IsOptional()
  @Field(
    () => OrganizationContactEmployeeUpdateManyWithoutOrganizationContactsInput,
    {
      nullable: true,
    }
  )
  organizationContactEmployee?: OrganizationContactEmployeeUpdateManyWithoutOrganizationContactsInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationProjectUpdateManyWithoutOrganizationContactsInput,
  })
  @ValidateNested()
  @Type(() => OrganizationProjectUpdateManyWithoutOrganizationContactsInput)
  @IsOptional()
  @Field(() => OrganizationProjectUpdateManyWithoutOrganizationContactsInput, {
    nullable: true,
  })
  organizationProject?: OrganizationProjectUpdateManyWithoutOrganizationContactsInput;

  @ApiProperty({
    required: false,
    type: () => PaymentUpdateManyWithoutOrganizationContactsInput,
  })
  @ValidateNested()
  @Type(() => PaymentUpdateManyWithoutOrganizationContactsInput)
  @IsOptional()
  @Field(() => PaymentUpdateManyWithoutOrganizationContactsInput, {
    nullable: true,
  })
  payment?: PaymentUpdateManyWithoutOrganizationContactsInput;

  @ApiProperty({
    required: false,
    type: () => ProposalUpdateManyWithoutOrganizationContactsInput,
  })
  @ValidateNested()
  @Type(() => ProposalUpdateManyWithoutOrganizationContactsInput)
  @IsOptional()
  @Field(() => ProposalUpdateManyWithoutOrganizationContactsInput, {
    nullable: true,
  })
  proposal?: ProposalUpdateManyWithoutOrganizationContactsInput;

  @ApiProperty({
    required: false,
    type: () =>
      TagOrganizationContactUpdateManyWithoutOrganizationContactsInput,
  })
  @ValidateNested()
  @Type(() => TagOrganizationContactUpdateManyWithoutOrganizationContactsInput)
  @IsOptional()
  @Field(
    () => TagOrganizationContactUpdateManyWithoutOrganizationContactsInput,
    {
      nullable: true,
    }
  )
  tagOrganizationContact?: TagOrganizationContactUpdateManyWithoutOrganizationContactsInput;

  @ApiProperty({
    required: false,
    type: () => TimeLogUpdateManyWithoutOrganizationContactsInput,
  })
  @ValidateNested()
  @Type(() => TimeLogUpdateManyWithoutOrganizationContactsInput)
  @IsOptional()
  @Field(() => TimeLogUpdateManyWithoutOrganizationContactsInput, {
    nullable: true,
  })
  timeLog?: TimeLogUpdateManyWithoutOrganizationContactsInput;
}

export { OrganizationContactUpdateInput as OrganizationContactUpdateInput };
