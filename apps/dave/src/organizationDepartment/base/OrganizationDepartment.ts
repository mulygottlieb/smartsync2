/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsDate, ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { Tenant } from "../../tenant/base/Tenant";
import { Organization } from "../../organization/base/Organization";
import { CandidateDepartment } from "../../candidateDepartment/base/CandidateDepartment";
import { InviteOrganizationDepartment } from "../../inviteOrganizationDepartment/base/InviteOrganizationDepartment";
import { OrganizationDepartmentEmployee } from "../../organizationDepartmentEmployee/base/OrganizationDepartmentEmployee";
import { TagOrganizationDepartment } from "../../tagOrganizationDepartment/base/TagOrganizationDepartment";

@ObjectType()
class OrganizationDepartment {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: false,
    type: () => Tenant,
  })
  @ValidateNested()
  @Type(() => Tenant)
  @IsOptional()
  tenant?: Tenant | null;

  @ApiProperty({
    required: false,
    type: () => Organization,
  })
  @ValidateNested()
  @Type(() => Organization)
  @IsOptional()
  organization?: Organization | null;

  @ApiProperty({
    required: false,
    type: () => [CandidateDepartment],
  })
  @ValidateNested()
  @Type(() => CandidateDepartment)
  @IsOptional()
  candidateDepartment?: Array<CandidateDepartment>;

  @ApiProperty({
    required: false,
    type: () => [InviteOrganizationDepartment],
  })
  @ValidateNested()
  @Type(() => InviteOrganizationDepartment)
  @IsOptional()
  inviteOrganizationDepartment?: Array<InviteOrganizationDepartment>;

  @ApiProperty({
    required: false,
    type: () => [OrganizationDepartmentEmployee],
  })
  @ValidateNested()
  @Type(() => OrganizationDepartmentEmployee)
  @IsOptional()
  organizationDepartmentEmployee?: Array<OrganizationDepartmentEmployee>;

  @ApiProperty({
    required: false,
    type: () => [TagOrganizationDepartment],
  })
  @ValidateNested()
  @Type(() => TagOrganizationDepartment)
  @IsOptional()
  tagOrganizationDepartment?: Array<TagOrganizationDepartment>;
}

export { OrganizationDepartment as OrganizationDepartment };
