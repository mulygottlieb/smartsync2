/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsDate, ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { Tenant } from "../../tenant/base/Tenant";
import { Organization } from "../../organization/base/Organization";
import { CandidateEmploymentType } from "../../candidateEmploymentType/base/CandidateEmploymentType";
import { OrganizationEmploymentTypeEmployee } from "../../organizationEmploymentTypeEmployee/base/OrganizationEmploymentTypeEmployee";
import { TagOrganizationEmploymentType } from "../../tagOrganizationEmploymentType/base/TagOrganizationEmploymentType";

@ObjectType()
class OrganizationEmploymentType {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: false,
    type: () => Tenant,
  })
  @ValidateNested()
  @Type(() => Tenant)
  @IsOptional()
  tenant?: Tenant | null;

  @ApiProperty({
    required: false,
    type: () => Organization,
  })
  @ValidateNested()
  @Type(() => Organization)
  @IsOptional()
  organization?: Organization | null;

  @ApiProperty({
    required: false,
    type: () => [CandidateEmploymentType],
  })
  @ValidateNested()
  @Type(() => CandidateEmploymentType)
  @IsOptional()
  candidateEmploymentType?: Array<CandidateEmploymentType>;

  @ApiProperty({
    required: false,
    type: () => [OrganizationEmploymentTypeEmployee],
  })
  @ValidateNested()
  @Type(() => OrganizationEmploymentTypeEmployee)
  @IsOptional()
  organizationEmploymentTypeEmployee?: Array<OrganizationEmploymentTypeEmployee>;

  @ApiProperty({
    required: false,
    type: () => [TagOrganizationEmploymentType],
  })
  @ValidateNested()
  @Type(() => TagOrganizationEmploymentType)
  @IsOptional()
  tagOrganizationEmploymentType?: Array<TagOrganizationEmploymentType>;
}

export { OrganizationEmploymentType as OrganizationEmploymentType };
