/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsDate,
  IsBoolean,
  IsInt,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { ImageAssetWhereUniqueInput } from "../../imageAsset/base/ImageAssetWhereUniqueInput";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";
import { OrganizationWhereUniqueInput } from "../../organization/base/OrganizationWhereUniqueInput";
import { OrganizationContactWhereUniqueInput } from "../../organizationContact/base/OrganizationContactWhereUniqueInput";
import { ActivityUpdateManyWithoutOrganizationProjectsInput } from "./ActivityUpdateManyWithoutOrganizationProjectsInput";
import { ExpenseUpdateManyWithoutOrganizationProjectsInput } from "./ExpenseUpdateManyWithoutOrganizationProjectsInput";
import { InviteOrganizationProjectUpdateManyWithoutOrganizationProjectsInput } from "./InviteOrganizationProjectUpdateManyWithoutOrganizationProjectsInput";
import { InvoiceItemUpdateManyWithoutOrganizationProjectsInput } from "./InvoiceItemUpdateManyWithoutOrganizationProjectsInput";
import { IssueTypeUpdateManyWithoutOrganizationProjectsInput } from "./IssueTypeUpdateManyWithoutOrganizationProjectsInput";
import { KeyResultUpdateManyWithoutOrganizationProjectsInput } from "./KeyResultUpdateManyWithoutOrganizationProjectsInput";
import { OrganizationProjectEmployeeUpdateManyWithoutOrganizationProjectsInput } from "./OrganizationProjectEmployeeUpdateManyWithoutOrganizationProjectsInput";
import { OrganizationSprintUpdateManyWithoutOrganizationProjectsInput } from "./OrganizationSprintUpdateManyWithoutOrganizationProjectsInput";
import { OrganizationTaskSettingUpdateManyWithoutOrganizationProjectsInput } from "./OrganizationTaskSettingUpdateManyWithoutOrganizationProjectsInput";
import { PaymentUpdateManyWithoutOrganizationProjectsInput } from "./PaymentUpdateManyWithoutOrganizationProjectsInput";
import { TagOrganizationProjectUpdateManyWithoutOrganizationProjectsInput } from "./TagOrganizationProjectUpdateManyWithoutOrganizationProjectsInput";
import { TaskUpdateManyWithoutOrganizationProjectsInput } from "./TaskUpdateManyWithoutOrganizationProjectsInput";
import { TaskPriorityUpdateManyWithoutOrganizationProjectsInput } from "./TaskPriorityUpdateManyWithoutOrganizationProjectsInput";
import { TaskRelatedIssueTypeUpdateManyWithoutOrganizationProjectsInput } from "./TaskRelatedIssueTypeUpdateManyWithoutOrganizationProjectsInput";
import { TaskSizeUpdateManyWithoutOrganizationProjectsInput } from "./TaskSizeUpdateManyWithoutOrganizationProjectsInput";
import { TaskStatusUpdateManyWithoutOrganizationProjectsInput } from "./TaskStatusUpdateManyWithoutOrganizationProjectsInput";
import { TaskVersionUpdateManyWithoutOrganizationProjectsInput } from "./TaskVersionUpdateManyWithoutOrganizationProjectsInput";
import { TimeLogUpdateManyWithoutOrganizationProjectsInput } from "./TimeLogUpdateManyWithoutOrganizationProjectsInput";

@InputType()
class OrganizationProjectUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  startDate?: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  endDate?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  billing?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  currency?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  publicField?: boolean | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  owner?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  taskListType?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  code?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  color?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  billable?: boolean | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  billingFlat?: boolean | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  openSource?: boolean | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  projectUrl?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  openSourceProjectUrl?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  budget?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  budgetType?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  membersCount?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  imageUrl?: string | null;

  @ApiProperty({
    required: false,
    type: () => ImageAssetWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ImageAssetWhereUniqueInput)
  @IsOptional()
  @Field(() => ImageAssetWhereUniqueInput, {
    nullable: true,
  })
  imageAsset?: ImageAssetWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenant?: TenantWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => OrganizationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrganizationWhereUniqueInput)
  @IsOptional()
  @Field(() => OrganizationWhereUniqueInput, {
    nullable: true,
  })
  organization?: OrganizationWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => OrganizationContactWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrganizationContactWhereUniqueInput)
  @IsOptional()
  @Field(() => OrganizationContactWhereUniqueInput, {
    nullable: true,
  })
  organizationContact?: OrganizationContactWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ActivityUpdateManyWithoutOrganizationProjectsInput,
  })
  @ValidateNested()
  @Type(() => ActivityUpdateManyWithoutOrganizationProjectsInput)
  @IsOptional()
  @Field(() => ActivityUpdateManyWithoutOrganizationProjectsInput, {
    nullable: true,
  })
  activity?: ActivityUpdateManyWithoutOrganizationProjectsInput;

  @ApiProperty({
    required: false,
    type: () => ExpenseUpdateManyWithoutOrganizationProjectsInput,
  })
  @ValidateNested()
  @Type(() => ExpenseUpdateManyWithoutOrganizationProjectsInput)
  @IsOptional()
  @Field(() => ExpenseUpdateManyWithoutOrganizationProjectsInput, {
    nullable: true,
  })
  expense?: ExpenseUpdateManyWithoutOrganizationProjectsInput;

  @ApiProperty({
    required: false,
    type: () =>
      InviteOrganizationProjectUpdateManyWithoutOrganizationProjectsInput,
  })
  @ValidateNested()
  @Type(
    () => InviteOrganizationProjectUpdateManyWithoutOrganizationProjectsInput
  )
  @IsOptional()
  @Field(
    () => InviteOrganizationProjectUpdateManyWithoutOrganizationProjectsInput,
    {
      nullable: true,
    }
  )
  inviteOrganizationProject?: InviteOrganizationProjectUpdateManyWithoutOrganizationProjectsInput;

  @ApiProperty({
    required: false,
    type: () => InvoiceItemUpdateManyWithoutOrganizationProjectsInput,
  })
  @ValidateNested()
  @Type(() => InvoiceItemUpdateManyWithoutOrganizationProjectsInput)
  @IsOptional()
  @Field(() => InvoiceItemUpdateManyWithoutOrganizationProjectsInput, {
    nullable: true,
  })
  invoiceItem?: InvoiceItemUpdateManyWithoutOrganizationProjectsInput;

  @ApiProperty({
    required: false,
    type: () => IssueTypeUpdateManyWithoutOrganizationProjectsInput,
  })
  @ValidateNested()
  @Type(() => IssueTypeUpdateManyWithoutOrganizationProjectsInput)
  @IsOptional()
  @Field(() => IssueTypeUpdateManyWithoutOrganizationProjectsInput, {
    nullable: true,
  })
  issueType?: IssueTypeUpdateManyWithoutOrganizationProjectsInput;

  @ApiProperty({
    required: false,
    type: () => KeyResultUpdateManyWithoutOrganizationProjectsInput,
  })
  @ValidateNested()
  @Type(() => KeyResultUpdateManyWithoutOrganizationProjectsInput)
  @IsOptional()
  @Field(() => KeyResultUpdateManyWithoutOrganizationProjectsInput, {
    nullable: true,
  })
  keyResult?: KeyResultUpdateManyWithoutOrganizationProjectsInput;

  @ApiProperty({
    required: false,
    type: () =>
      OrganizationProjectEmployeeUpdateManyWithoutOrganizationProjectsInput,
  })
  @ValidateNested()
  @Type(
    () => OrganizationProjectEmployeeUpdateManyWithoutOrganizationProjectsInput
  )
  @IsOptional()
  @Field(
    () => OrganizationProjectEmployeeUpdateManyWithoutOrganizationProjectsInput,
    {
      nullable: true,
    }
  )
  organizationProjectEmployee?: OrganizationProjectEmployeeUpdateManyWithoutOrganizationProjectsInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationSprintUpdateManyWithoutOrganizationProjectsInput,
  })
  @ValidateNested()
  @Type(() => OrganizationSprintUpdateManyWithoutOrganizationProjectsInput)
  @IsOptional()
  @Field(() => OrganizationSprintUpdateManyWithoutOrganizationProjectsInput, {
    nullable: true,
  })
  organizationSprint?: OrganizationSprintUpdateManyWithoutOrganizationProjectsInput;

  @ApiProperty({
    required: false,
    type: () =>
      OrganizationTaskSettingUpdateManyWithoutOrganizationProjectsInput,
  })
  @ValidateNested()
  @Type(() => OrganizationTaskSettingUpdateManyWithoutOrganizationProjectsInput)
  @IsOptional()
  @Field(
    () => OrganizationTaskSettingUpdateManyWithoutOrganizationProjectsInput,
    {
      nullable: true,
    }
  )
  organizationTaskSetting?: OrganizationTaskSettingUpdateManyWithoutOrganizationProjectsInput;

  @ApiProperty({
    required: false,
    type: () => PaymentUpdateManyWithoutOrganizationProjectsInput,
  })
  @ValidateNested()
  @Type(() => PaymentUpdateManyWithoutOrganizationProjectsInput)
  @IsOptional()
  @Field(() => PaymentUpdateManyWithoutOrganizationProjectsInput, {
    nullable: true,
  })
  payment?: PaymentUpdateManyWithoutOrganizationProjectsInput;

  @ApiProperty({
    required: false,
    type: () =>
      TagOrganizationProjectUpdateManyWithoutOrganizationProjectsInput,
  })
  @ValidateNested()
  @Type(() => TagOrganizationProjectUpdateManyWithoutOrganizationProjectsInput)
  @IsOptional()
  @Field(
    () => TagOrganizationProjectUpdateManyWithoutOrganizationProjectsInput,
    {
      nullable: true,
    }
  )
  tagOrganizationProject?: TagOrganizationProjectUpdateManyWithoutOrganizationProjectsInput;

  @ApiProperty({
    required: false,
    type: () => TaskUpdateManyWithoutOrganizationProjectsInput,
  })
  @ValidateNested()
  @Type(() => TaskUpdateManyWithoutOrganizationProjectsInput)
  @IsOptional()
  @Field(() => TaskUpdateManyWithoutOrganizationProjectsInput, {
    nullable: true,
  })
  task?: TaskUpdateManyWithoutOrganizationProjectsInput;

  @ApiProperty({
    required: false,
    type: () => TaskPriorityUpdateManyWithoutOrganizationProjectsInput,
  })
  @ValidateNested()
  @Type(() => TaskPriorityUpdateManyWithoutOrganizationProjectsInput)
  @IsOptional()
  @Field(() => TaskPriorityUpdateManyWithoutOrganizationProjectsInput, {
    nullable: true,
  })
  taskPriority?: TaskPriorityUpdateManyWithoutOrganizationProjectsInput;

  @ApiProperty({
    required: false,
    type: () => TaskRelatedIssueTypeUpdateManyWithoutOrganizationProjectsInput,
  })
  @ValidateNested()
  @Type(() => TaskRelatedIssueTypeUpdateManyWithoutOrganizationProjectsInput)
  @IsOptional()
  @Field(() => TaskRelatedIssueTypeUpdateManyWithoutOrganizationProjectsInput, {
    nullable: true,
  })
  taskRelatedIssueType?: TaskRelatedIssueTypeUpdateManyWithoutOrganizationProjectsInput;

  @ApiProperty({
    required: false,
    type: () => TaskSizeUpdateManyWithoutOrganizationProjectsInput,
  })
  @ValidateNested()
  @Type(() => TaskSizeUpdateManyWithoutOrganizationProjectsInput)
  @IsOptional()
  @Field(() => TaskSizeUpdateManyWithoutOrganizationProjectsInput, {
    nullable: true,
  })
  taskSize?: TaskSizeUpdateManyWithoutOrganizationProjectsInput;

  @ApiProperty({
    required: false,
    type: () => TaskStatusUpdateManyWithoutOrganizationProjectsInput,
  })
  @ValidateNested()
  @Type(() => TaskStatusUpdateManyWithoutOrganizationProjectsInput)
  @IsOptional()
  @Field(() => TaskStatusUpdateManyWithoutOrganizationProjectsInput, {
    nullable: true,
  })
  taskStatus?: TaskStatusUpdateManyWithoutOrganizationProjectsInput;

  @ApiProperty({
    required: false,
    type: () => TaskVersionUpdateManyWithoutOrganizationProjectsInput,
  })
  @ValidateNested()
  @Type(() => TaskVersionUpdateManyWithoutOrganizationProjectsInput)
  @IsOptional()
  @Field(() => TaskVersionUpdateManyWithoutOrganizationProjectsInput, {
    nullable: true,
  })
  taskVersion?: TaskVersionUpdateManyWithoutOrganizationProjectsInput;

  @ApiProperty({
    required: false,
    type: () => TimeLogUpdateManyWithoutOrganizationProjectsInput,
  })
  @ValidateNested()
  @Type(() => TimeLogUpdateManyWithoutOrganizationProjectsInput)
  @IsOptional()
  @Field(() => TimeLogUpdateManyWithoutOrganizationProjectsInput, {
    nullable: true,
  })
  timeLog?: TimeLogUpdateManyWithoutOrganizationProjectsInput;
}

export { OrganizationProjectUpdateInput as OrganizationProjectUpdateInput };
