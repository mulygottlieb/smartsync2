/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsBoolean,
  ValidateNested,
} from "class-validator";
import { EquipmentSharesTeamUpdateManyWithoutOrganizationTeamsInput } from "./EquipmentSharesTeamUpdateManyWithoutOrganizationTeamsInput";
import { Type } from "class-transformer";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";
import { ImageAssetWhereUniqueInput } from "../../imageAsset/base/ImageAssetWhereUniqueInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { OrganizationWhereUniqueInput } from "../../organization/base/OrganizationWhereUniqueInput";
import { GoalUpdateManyWithoutOrganizationTeamsInput } from "./GoalUpdateManyWithoutOrganizationTeamsInput";
import { InviteOrganizationTeamUpdateManyWithoutOrganizationTeamsInput } from "./InviteOrganizationTeamUpdateManyWithoutOrganizationTeamsInput";
import { IssueTypeUpdateManyWithoutOrganizationTeamsInput } from "./IssueTypeUpdateManyWithoutOrganizationTeamsInput";
import { OrganizationTaskSettingUpdateManyWithoutOrganizationTeamsInput } from "./OrganizationTaskSettingUpdateManyWithoutOrganizationTeamsInput";
import { OrganizationTeamEmployeeUpdateManyWithoutOrganizationTeamsInput } from "./OrganizationTeamEmployeeUpdateManyWithoutOrganizationTeamsInput";
import { OrganizationTeamJoinRequestUpdateManyWithoutOrganizationTeamsInput } from "./OrganizationTeamJoinRequestUpdateManyWithoutOrganizationTeamsInput";
import { OrganizationTeamTasksTaskUpdateManyWithoutOrganizationTeamsInput } from "./OrganizationTeamTasksTaskUpdateManyWithoutOrganizationTeamsInput";
import { RequestApprovalTeamUpdateManyWithoutOrganizationTeamsInput } from "./RequestApprovalTeamUpdateManyWithoutOrganizationTeamsInput";
import { TagUpdateManyWithoutOrganizationTeamsInput } from "./TagUpdateManyWithoutOrganizationTeamsInput";
import { TagOrganizationTeamUpdateManyWithoutOrganizationTeamsInput } from "./TagOrganizationTeamUpdateManyWithoutOrganizationTeamsInput";
import { TaskPriorityUpdateManyWithoutOrganizationTeamsInput } from "./TaskPriorityUpdateManyWithoutOrganizationTeamsInput";
import { TaskRelatedIssueTypeUpdateManyWithoutOrganizationTeamsInput } from "./TaskRelatedIssueTypeUpdateManyWithoutOrganizationTeamsInput";
import { TaskSizeUpdateManyWithoutOrganizationTeamsInput } from "./TaskSizeUpdateManyWithoutOrganizationTeamsInput";
import { TaskStatusUpdateManyWithoutOrganizationTeamsInput } from "./TaskStatusUpdateManyWithoutOrganizationTeamsInput";
import { TaskTeamUpdateManyWithoutOrganizationTeamsInput } from "./TaskTeamUpdateManyWithoutOrganizationTeamsInput";
import { TaskVersionUpdateManyWithoutOrganizationTeamsInput } from "./TaskVersionUpdateManyWithoutOrganizationTeamsInput";
import { TimeLogUpdateManyWithoutOrganizationTeamsInput } from "./TimeLogUpdateManyWithoutOrganizationTeamsInput";

@InputType()
class OrganizationTeamUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  prefix?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  publicField?: boolean | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  profileLink?: string | null;

  @ApiProperty({
    required: false,
    type: () => EquipmentSharesTeamUpdateManyWithoutOrganizationTeamsInput,
  })
  @ValidateNested()
  @Type(() => EquipmentSharesTeamUpdateManyWithoutOrganizationTeamsInput)
  @IsOptional()
  @Field(() => EquipmentSharesTeamUpdateManyWithoutOrganizationTeamsInput, {
    nullable: true,
  })
  equipmentSharesTeams?: EquipmentSharesTeamUpdateManyWithoutOrganizationTeamsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  logo?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  color?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  emoji?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  teamSize?: string | null;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenant?: TenantWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ImageAssetWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ImageAssetWhereUniqueInput)
  @IsOptional()
  @Field(() => ImageAssetWhereUniqueInput, {
    nullable: true,
  })
  imageAsset?: ImageAssetWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => OrganizationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrganizationWhereUniqueInput)
  @IsOptional()
  @Field(() => OrganizationWhereUniqueInput, {
    nullable: true,
  })
  organization?: OrganizationWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => GoalUpdateManyWithoutOrganizationTeamsInput,
  })
  @ValidateNested()
  @Type(() => GoalUpdateManyWithoutOrganizationTeamsInput)
  @IsOptional()
  @Field(() => GoalUpdateManyWithoutOrganizationTeamsInput, {
    nullable: true,
  })
  goal?: GoalUpdateManyWithoutOrganizationTeamsInput;

  @ApiProperty({
    required: false,
    type: () => InviteOrganizationTeamUpdateManyWithoutOrganizationTeamsInput,
  })
  @ValidateNested()
  @Type(() => InviteOrganizationTeamUpdateManyWithoutOrganizationTeamsInput)
  @IsOptional()
  @Field(() => InviteOrganizationTeamUpdateManyWithoutOrganizationTeamsInput, {
    nullable: true,
  })
  inviteOrganizationTeam?: InviteOrganizationTeamUpdateManyWithoutOrganizationTeamsInput;

  @ApiProperty({
    required: false,
    type: () => IssueTypeUpdateManyWithoutOrganizationTeamsInput,
  })
  @ValidateNested()
  @Type(() => IssueTypeUpdateManyWithoutOrganizationTeamsInput)
  @IsOptional()
  @Field(() => IssueTypeUpdateManyWithoutOrganizationTeamsInput, {
    nullable: true,
  })
  issueType?: IssueTypeUpdateManyWithoutOrganizationTeamsInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationTaskSettingUpdateManyWithoutOrganizationTeamsInput,
  })
  @ValidateNested()
  @Type(() => OrganizationTaskSettingUpdateManyWithoutOrganizationTeamsInput)
  @IsOptional()
  @Field(() => OrganizationTaskSettingUpdateManyWithoutOrganizationTeamsInput, {
    nullable: true,
  })
  organizationTaskSetting?: OrganizationTaskSettingUpdateManyWithoutOrganizationTeamsInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationTeamEmployeeUpdateManyWithoutOrganizationTeamsInput,
  })
  @ValidateNested()
  @Type(() => OrganizationTeamEmployeeUpdateManyWithoutOrganizationTeamsInput)
  @IsOptional()
  @Field(
    () => OrganizationTeamEmployeeUpdateManyWithoutOrganizationTeamsInput,
    {
      nullable: true,
    }
  )
  organizationTeamEmployee?: OrganizationTeamEmployeeUpdateManyWithoutOrganizationTeamsInput;

  @ApiProperty({
    required: false,
    type: () =>
      OrganizationTeamJoinRequestUpdateManyWithoutOrganizationTeamsInput,
  })
  @ValidateNested()
  @Type(
    () => OrganizationTeamJoinRequestUpdateManyWithoutOrganizationTeamsInput
  )
  @IsOptional()
  @Field(
    () => OrganizationTeamJoinRequestUpdateManyWithoutOrganizationTeamsInput,
    {
      nullable: true,
    }
  )
  organizationTeamJoinRequest?: OrganizationTeamJoinRequestUpdateManyWithoutOrganizationTeamsInput;

  @ApiProperty({
    required: false,
    type: () =>
      OrganizationTeamTasksTaskUpdateManyWithoutOrganizationTeamsInput,
  })
  @ValidateNested()
  @Type(() => OrganizationTeamTasksTaskUpdateManyWithoutOrganizationTeamsInput)
  @IsOptional()
  @Field(
    () => OrganizationTeamTasksTaskUpdateManyWithoutOrganizationTeamsInput,
    {
      nullable: true,
    }
  )
  organizationTeamTasksTask?: OrganizationTeamTasksTaskUpdateManyWithoutOrganizationTeamsInput;

  @ApiProperty({
    required: false,
    type: () => RequestApprovalTeamUpdateManyWithoutOrganizationTeamsInput,
  })
  @ValidateNested()
  @Type(() => RequestApprovalTeamUpdateManyWithoutOrganizationTeamsInput)
  @IsOptional()
  @Field(() => RequestApprovalTeamUpdateManyWithoutOrganizationTeamsInput, {
    nullable: true,
  })
  requestApprovalTeam?: RequestApprovalTeamUpdateManyWithoutOrganizationTeamsInput;

  @ApiProperty({
    required: false,
    type: () => TagUpdateManyWithoutOrganizationTeamsInput,
  })
  @ValidateNested()
  @Type(() => TagUpdateManyWithoutOrganizationTeamsInput)
  @IsOptional()
  @Field(() => TagUpdateManyWithoutOrganizationTeamsInput, {
    nullable: true,
  })
  tag?: TagUpdateManyWithoutOrganizationTeamsInput;

  @ApiProperty({
    required: false,
    type: () => TagOrganizationTeamUpdateManyWithoutOrganizationTeamsInput,
  })
  @ValidateNested()
  @Type(() => TagOrganizationTeamUpdateManyWithoutOrganizationTeamsInput)
  @IsOptional()
  @Field(() => TagOrganizationTeamUpdateManyWithoutOrganizationTeamsInput, {
    nullable: true,
  })
  tagOrganizationTeam?: TagOrganizationTeamUpdateManyWithoutOrganizationTeamsInput;

  @ApiProperty({
    required: false,
    type: () => TaskPriorityUpdateManyWithoutOrganizationTeamsInput,
  })
  @ValidateNested()
  @Type(() => TaskPriorityUpdateManyWithoutOrganizationTeamsInput)
  @IsOptional()
  @Field(() => TaskPriorityUpdateManyWithoutOrganizationTeamsInput, {
    nullable: true,
  })
  taskPriority?: TaskPriorityUpdateManyWithoutOrganizationTeamsInput;

  @ApiProperty({
    required: false,
    type: () => TaskRelatedIssueTypeUpdateManyWithoutOrganizationTeamsInput,
  })
  @ValidateNested()
  @Type(() => TaskRelatedIssueTypeUpdateManyWithoutOrganizationTeamsInput)
  @IsOptional()
  @Field(() => TaskRelatedIssueTypeUpdateManyWithoutOrganizationTeamsInput, {
    nullable: true,
  })
  taskRelatedIssueType?: TaskRelatedIssueTypeUpdateManyWithoutOrganizationTeamsInput;

  @ApiProperty({
    required: false,
    type: () => TaskSizeUpdateManyWithoutOrganizationTeamsInput,
  })
  @ValidateNested()
  @Type(() => TaskSizeUpdateManyWithoutOrganizationTeamsInput)
  @IsOptional()
  @Field(() => TaskSizeUpdateManyWithoutOrganizationTeamsInput, {
    nullable: true,
  })
  taskSize?: TaskSizeUpdateManyWithoutOrganizationTeamsInput;

  @ApiProperty({
    required: false,
    type: () => TaskStatusUpdateManyWithoutOrganizationTeamsInput,
  })
  @ValidateNested()
  @Type(() => TaskStatusUpdateManyWithoutOrganizationTeamsInput)
  @IsOptional()
  @Field(() => TaskStatusUpdateManyWithoutOrganizationTeamsInput, {
    nullable: true,
  })
  taskStatus?: TaskStatusUpdateManyWithoutOrganizationTeamsInput;

  @ApiProperty({
    required: false,
    type: () => TaskTeamUpdateManyWithoutOrganizationTeamsInput,
  })
  @ValidateNested()
  @Type(() => TaskTeamUpdateManyWithoutOrganizationTeamsInput)
  @IsOptional()
  @Field(() => TaskTeamUpdateManyWithoutOrganizationTeamsInput, {
    nullable: true,
  })
  taskTeam?: TaskTeamUpdateManyWithoutOrganizationTeamsInput;

  @ApiProperty({
    required: false,
    type: () => TaskVersionUpdateManyWithoutOrganizationTeamsInput,
  })
  @ValidateNested()
  @Type(() => TaskVersionUpdateManyWithoutOrganizationTeamsInput)
  @IsOptional()
  @Field(() => TaskVersionUpdateManyWithoutOrganizationTeamsInput, {
    nullable: true,
  })
  taskVersion?: TaskVersionUpdateManyWithoutOrganizationTeamsInput;

  @ApiProperty({
    required: false,
    type: () => TimeLogUpdateManyWithoutOrganizationTeamsInput,
  })
  @ValidateNested()
  @Type(() => TimeLogUpdateManyWithoutOrganizationTeamsInput)
  @IsOptional()
  @Field(() => TimeLogUpdateManyWithoutOrganizationTeamsInput, {
    nullable: true,
  })
  timeLog?: TimeLogUpdateManyWithoutOrganizationTeamsInput;
}

export { OrganizationTeamUpdateInput as OrganizationTeamUpdateInput };
