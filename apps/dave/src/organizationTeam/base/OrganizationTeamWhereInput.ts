/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { DateTimeFilter } from "../../util/DateTimeFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { EquipmentSharesTeamListRelationFilter } from "../../equipmentSharesTeam/base/EquipmentSharesTeamListRelationFilter";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";
import { ImageAssetWhereUniqueInput } from "../../imageAsset/base/ImageAssetWhereUniqueInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { OrganizationWhereUniqueInput } from "../../organization/base/OrganizationWhereUniqueInput";
import { GoalListRelationFilter } from "../../goal/base/GoalListRelationFilter";
import { InviteOrganizationTeamListRelationFilter } from "../../inviteOrganizationTeam/base/InviteOrganizationTeamListRelationFilter";
import { IssueTypeListRelationFilter } from "../../issueType/base/IssueTypeListRelationFilter";
import { OrganizationTaskSettingListRelationFilter } from "../../organizationTaskSetting/base/OrganizationTaskSettingListRelationFilter";
import { OrganizationTeamEmployeeListRelationFilter } from "../../organizationTeamEmployee/base/OrganizationTeamEmployeeListRelationFilter";
import { OrganizationTeamJoinRequestListRelationFilter } from "../../organizationTeamJoinRequest/base/OrganizationTeamJoinRequestListRelationFilter";
import { OrganizationTeamTasksTaskListRelationFilter } from "../../organizationTeamTasksTask/base/OrganizationTeamTasksTaskListRelationFilter";
import { RequestApprovalTeamListRelationFilter } from "../../requestApprovalTeam/base/RequestApprovalTeamListRelationFilter";
import { TagListRelationFilter } from "../../tag/base/TagListRelationFilter";
import { TagOrganizationTeamListRelationFilter } from "../../tagOrganizationTeam/base/TagOrganizationTeamListRelationFilter";
import { TaskPriorityListRelationFilter } from "../../taskPriority/base/TaskPriorityListRelationFilter";
import { TaskRelatedIssueTypeListRelationFilter } from "../../taskRelatedIssueType/base/TaskRelatedIssueTypeListRelationFilter";
import { TaskSizeListRelationFilter } from "../../taskSize/base/TaskSizeListRelationFilter";
import { TaskStatusListRelationFilter } from "../../taskStatus/base/TaskStatusListRelationFilter";
import { TaskTeamListRelationFilter } from "../../taskTeam/base/TaskTeamListRelationFilter";
import { TaskVersionListRelationFilter } from "../../taskVersion/base/TaskVersionListRelationFilter";
import { TimeLogListRelationFilter } from "../../timeLog/base/TimeLogListRelationFilter";

@InputType()
class OrganizationTeamWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  createdAt?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  updatedAt?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  name?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  prefix?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  publicField?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  profileLink?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => EquipmentSharesTeamListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EquipmentSharesTeamListRelationFilter)
  @IsOptional()
  @Field(() => EquipmentSharesTeamListRelationFilter, {
    nullable: true,
  })
  equipmentSharesTeams?: EquipmentSharesTeamListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  logo?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  color?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  emoji?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  teamSize?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenant?: TenantWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => ImageAssetWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ImageAssetWhereUniqueInput)
  @IsOptional()
  @Field(() => ImageAssetWhereUniqueInput, {
    nullable: true,
  })
  imageAsset?: ImageAssetWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrganizationWhereUniqueInput)
  @IsOptional()
  @Field(() => OrganizationWhereUniqueInput, {
    nullable: true,
  })
  organization?: OrganizationWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => GoalListRelationFilter,
  })
  @ValidateNested()
  @Type(() => GoalListRelationFilter)
  @IsOptional()
  @Field(() => GoalListRelationFilter, {
    nullable: true,
  })
  goal?: GoalListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => InviteOrganizationTeamListRelationFilter,
  })
  @ValidateNested()
  @Type(() => InviteOrganizationTeamListRelationFilter)
  @IsOptional()
  @Field(() => InviteOrganizationTeamListRelationFilter, {
    nullable: true,
  })
  inviteOrganizationTeam?: InviteOrganizationTeamListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => IssueTypeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => IssueTypeListRelationFilter)
  @IsOptional()
  @Field(() => IssueTypeListRelationFilter, {
    nullable: true,
  })
  issueType?: IssueTypeListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => OrganizationTaskSettingListRelationFilter,
  })
  @ValidateNested()
  @Type(() => OrganizationTaskSettingListRelationFilter)
  @IsOptional()
  @Field(() => OrganizationTaskSettingListRelationFilter, {
    nullable: true,
  })
  organizationTaskSetting?: OrganizationTaskSettingListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => OrganizationTeamEmployeeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => OrganizationTeamEmployeeListRelationFilter)
  @IsOptional()
  @Field(() => OrganizationTeamEmployeeListRelationFilter, {
    nullable: true,
  })
  organizationTeamEmployee?: OrganizationTeamEmployeeListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => OrganizationTeamJoinRequestListRelationFilter,
  })
  @ValidateNested()
  @Type(() => OrganizationTeamJoinRequestListRelationFilter)
  @IsOptional()
  @Field(() => OrganizationTeamJoinRequestListRelationFilter, {
    nullable: true,
  })
  organizationTeamJoinRequest?: OrganizationTeamJoinRequestListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => OrganizationTeamTasksTaskListRelationFilter,
  })
  @ValidateNested()
  @Type(() => OrganizationTeamTasksTaskListRelationFilter)
  @IsOptional()
  @Field(() => OrganizationTeamTasksTaskListRelationFilter, {
    nullable: true,
  })
  organizationTeamTasksTask?: OrganizationTeamTasksTaskListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => RequestApprovalTeamListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RequestApprovalTeamListRelationFilter)
  @IsOptional()
  @Field(() => RequestApprovalTeamListRelationFilter, {
    nullable: true,
  })
  requestApprovalTeam?: RequestApprovalTeamListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TagListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TagListRelationFilter)
  @IsOptional()
  @Field(() => TagListRelationFilter, {
    nullable: true,
  })
  tag?: TagListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TagOrganizationTeamListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TagOrganizationTeamListRelationFilter)
  @IsOptional()
  @Field(() => TagOrganizationTeamListRelationFilter, {
    nullable: true,
  })
  tagOrganizationTeam?: TagOrganizationTeamListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TaskPriorityListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TaskPriorityListRelationFilter)
  @IsOptional()
  @Field(() => TaskPriorityListRelationFilter, {
    nullable: true,
  })
  taskPriority?: TaskPriorityListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TaskRelatedIssueTypeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TaskRelatedIssueTypeListRelationFilter)
  @IsOptional()
  @Field(() => TaskRelatedIssueTypeListRelationFilter, {
    nullable: true,
  })
  taskRelatedIssueType?: TaskRelatedIssueTypeListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TaskSizeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TaskSizeListRelationFilter)
  @IsOptional()
  @Field(() => TaskSizeListRelationFilter, {
    nullable: true,
  })
  taskSize?: TaskSizeListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TaskStatusListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TaskStatusListRelationFilter)
  @IsOptional()
  @Field(() => TaskStatusListRelationFilter, {
    nullable: true,
  })
  taskStatus?: TaskStatusListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TaskTeamListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TaskTeamListRelationFilter)
  @IsOptional()
  @Field(() => TaskTeamListRelationFilter, {
    nullable: true,
  })
  taskTeam?: TaskTeamListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TaskVersionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TaskVersionListRelationFilter)
  @IsOptional()
  @Field(() => TaskVersionListRelationFilter, {
    nullable: true,
  })
  taskVersion?: TaskVersionListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TimeLogListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TimeLogListRelationFilter)
  @IsOptional()
  @Field(() => TimeLogListRelationFilter, {
    nullable: true,
  })
  timeLog?: TimeLogListRelationFilter;
}

export { OrganizationTeamWhereInput as OrganizationTeamWhereInput };
