/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsDate,
  IsBoolean,
  IsOptional,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { Tenant } from "../../tenant/base/Tenant";
import { Organization } from "../../organization/base/Organization";
import { ProductType } from "../../productType/base/ProductType";
import { ImageAsset } from "../../imageAsset/base/ImageAsset";
import { ProductCategory } from "../../productCategory/base/ProductCategory";
import { InvoiceItem } from "../../invoiceItem/base/InvoiceItem";
import { ProductGalleryItem } from "../../productGalleryItem/base/ProductGalleryItem";
import { ProductOptionGroup } from "../../productOptionGroup/base/ProductOptionGroup";
import { ProductTranslation } from "../../productTranslation/base/ProductTranslation";
import { ProductVariant } from "../../productVariant/base/ProductVariant";
import { TagProduct } from "../../tagProduct/base/TagProduct";
import { WarehouseProduct } from "../../warehouseProduct/base/WarehouseProduct";

@ObjectType()
class Product {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  enabled!: boolean;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  code!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  imageUrl!: string | null;

  @ApiProperty({
    required: false,
    type: () => Tenant,
  })
  @ValidateNested()
  @Type(() => Tenant)
  @IsOptional()
  tenant?: Tenant | null;

  @ApiProperty({
    required: false,
    type: () => Organization,
  })
  @ValidateNested()
  @Type(() => Organization)
  @IsOptional()
  organization?: Organization | null;

  @ApiProperty({
    required: false,
    type: () => ProductType,
  })
  @ValidateNested()
  @Type(() => ProductType)
  @IsOptional()
  productType?: ProductType | null;

  @ApiProperty({
    required: false,
    type: () => ImageAsset,
  })
  @ValidateNested()
  @Type(() => ImageAsset)
  @IsOptional()
  imageAsset?: ImageAsset | null;

  @ApiProperty({
    required: false,
    type: () => ProductCategory,
  })
  @ValidateNested()
  @Type(() => ProductCategory)
  @IsOptional()
  productCategory?: ProductCategory | null;

  @ApiProperty({
    required: false,
    type: () => [InvoiceItem],
  })
  @ValidateNested()
  @Type(() => InvoiceItem)
  @IsOptional()
  invoiceItem?: Array<InvoiceItem>;

  @ApiProperty({
    required: false,
    type: () => [ProductGalleryItem],
  })
  @ValidateNested()
  @Type(() => ProductGalleryItem)
  @IsOptional()
  productGalleryItem?: Array<ProductGalleryItem>;

  @ApiProperty({
    required: false,
    type: () => [ProductOptionGroup],
  })
  @ValidateNested()
  @Type(() => ProductOptionGroup)
  @IsOptional()
  productOptionGroup?: Array<ProductOptionGroup>;

  @ApiProperty({
    required: false,
    type: () => [ProductTranslation],
  })
  @ValidateNested()
  @Type(() => ProductTranslation)
  @IsOptional()
  productTranslation?: Array<ProductTranslation>;

  @ApiProperty({
    required: false,
    type: () => [ProductVariant],
  })
  @ValidateNested()
  @Type(() => ProductVariant)
  @IsOptional()
  productVariant?: Array<ProductVariant>;

  @ApiProperty({
    required: false,
    type: () => [TagProduct],
  })
  @ValidateNested()
  @Type(() => TagProduct)
  @IsOptional()
  tagProduct?: Array<TagProduct>;

  @ApiProperty({
    required: false,
    type: () => [WarehouseProduct],
  })
  @ValidateNested()
  @Type(() => WarehouseProduct)
  @IsOptional()
  warehouseProduct?: Array<WarehouseProduct>;
}

export { Product as Product };
