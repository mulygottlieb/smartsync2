/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsBoolean,
  IsString,
  IsOptional,
  ValidateNested,
} from "class-validator";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";
import { Type } from "class-transformer";
import { OrganizationWhereUniqueInput } from "../../organization/base/OrganizationWhereUniqueInput";
import { ProductTypeWhereUniqueInput } from "../../productType/base/ProductTypeWhereUniqueInput";
import { ImageAssetWhereUniqueInput } from "../../imageAsset/base/ImageAssetWhereUniqueInput";
import { ProductCategoryWhereUniqueInput } from "../../productCategory/base/ProductCategoryWhereUniqueInput";
import { InvoiceItemCreateNestedManyWithoutProductsInput } from "./InvoiceItemCreateNestedManyWithoutProductsInput";
import { ProductGalleryItemCreateNestedManyWithoutProductsInput } from "./ProductGalleryItemCreateNestedManyWithoutProductsInput";
import { ProductOptionGroupCreateNestedManyWithoutProductsInput } from "./ProductOptionGroupCreateNestedManyWithoutProductsInput";
import { ProductTranslationCreateNestedManyWithoutProductsInput } from "./ProductTranslationCreateNestedManyWithoutProductsInput";
import { ProductVariantCreateNestedManyWithoutProductsInput } from "./ProductVariantCreateNestedManyWithoutProductsInput";
import { TagProductCreateNestedManyWithoutProductsInput } from "./TagProductCreateNestedManyWithoutProductsInput";
import { WarehouseProductCreateNestedManyWithoutProductsInput } from "./WarehouseProductCreateNestedManyWithoutProductsInput";

@InputType()
class ProductCreateInput {
  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  enabled!: boolean;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  code!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  imageUrl?: string | null;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenant?: TenantWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => OrganizationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrganizationWhereUniqueInput)
  @IsOptional()
  @Field(() => OrganizationWhereUniqueInput, {
    nullable: true,
  })
  organization?: OrganizationWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ProductTypeWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ProductTypeWhereUniqueInput)
  @IsOptional()
  @Field(() => ProductTypeWhereUniqueInput, {
    nullable: true,
  })
  productType?: ProductTypeWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ImageAssetWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ImageAssetWhereUniqueInput)
  @IsOptional()
  @Field(() => ImageAssetWhereUniqueInput, {
    nullable: true,
  })
  imageAsset?: ImageAssetWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ProductCategoryWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ProductCategoryWhereUniqueInput)
  @IsOptional()
  @Field(() => ProductCategoryWhereUniqueInput, {
    nullable: true,
  })
  productCategory?: ProductCategoryWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => InvoiceItemCreateNestedManyWithoutProductsInput,
  })
  @ValidateNested()
  @Type(() => InvoiceItemCreateNestedManyWithoutProductsInput)
  @IsOptional()
  @Field(() => InvoiceItemCreateNestedManyWithoutProductsInput, {
    nullable: true,
  })
  invoiceItem?: InvoiceItemCreateNestedManyWithoutProductsInput;

  @ApiProperty({
    required: false,
    type: () => ProductGalleryItemCreateNestedManyWithoutProductsInput,
  })
  @ValidateNested()
  @Type(() => ProductGalleryItemCreateNestedManyWithoutProductsInput)
  @IsOptional()
  @Field(() => ProductGalleryItemCreateNestedManyWithoutProductsInput, {
    nullable: true,
  })
  productGalleryItem?: ProductGalleryItemCreateNestedManyWithoutProductsInput;

  @ApiProperty({
    required: false,
    type: () => ProductOptionGroupCreateNestedManyWithoutProductsInput,
  })
  @ValidateNested()
  @Type(() => ProductOptionGroupCreateNestedManyWithoutProductsInput)
  @IsOptional()
  @Field(() => ProductOptionGroupCreateNestedManyWithoutProductsInput, {
    nullable: true,
  })
  productOptionGroup?: ProductOptionGroupCreateNestedManyWithoutProductsInput;

  @ApiProperty({
    required: false,
    type: () => ProductTranslationCreateNestedManyWithoutProductsInput,
  })
  @ValidateNested()
  @Type(() => ProductTranslationCreateNestedManyWithoutProductsInput)
  @IsOptional()
  @Field(() => ProductTranslationCreateNestedManyWithoutProductsInput, {
    nullable: true,
  })
  productTranslation?: ProductTranslationCreateNestedManyWithoutProductsInput;

  @ApiProperty({
    required: false,
    type: () => ProductVariantCreateNestedManyWithoutProductsInput,
  })
  @ValidateNested()
  @Type(() => ProductVariantCreateNestedManyWithoutProductsInput)
  @IsOptional()
  @Field(() => ProductVariantCreateNestedManyWithoutProductsInput, {
    nullable: true,
  })
  productVariant?: ProductVariantCreateNestedManyWithoutProductsInput;

  @ApiProperty({
    required: false,
    type: () => TagProductCreateNestedManyWithoutProductsInput,
  })
  @ValidateNested()
  @Type(() => TagProductCreateNestedManyWithoutProductsInput)
  @IsOptional()
  @Field(() => TagProductCreateNestedManyWithoutProductsInput, {
    nullable: true,
  })
  tagProduct?: TagProductCreateNestedManyWithoutProductsInput;

  @ApiProperty({
    required: false,
    type: () => WarehouseProductCreateNestedManyWithoutProductsInput,
  })
  @ValidateNested()
  @Type(() => WarehouseProductCreateNestedManyWithoutProductsInput)
  @IsOptional()
  @Field(() => WarehouseProductCreateNestedManyWithoutProductsInput, {
    nullable: true,
  })
  warehouseProduct?: WarehouseProductCreateNestedManyWithoutProductsInput;
}

export { ProductCreateInput as ProductCreateInput };
