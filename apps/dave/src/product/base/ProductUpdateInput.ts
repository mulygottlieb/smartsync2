/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsBoolean,
  IsOptional,
  IsString,
  ValidateNested,
} from "class-validator";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";
import { Type } from "class-transformer";
import { OrganizationWhereUniqueInput } from "../../organization/base/OrganizationWhereUniqueInput";
import { ProductTypeWhereUniqueInput } from "../../productType/base/ProductTypeWhereUniqueInput";
import { ImageAssetWhereUniqueInput } from "../../imageAsset/base/ImageAssetWhereUniqueInput";
import { ProductCategoryWhereUniqueInput } from "../../productCategory/base/ProductCategoryWhereUniqueInput";
import { InvoiceItemUpdateManyWithoutProductsInput } from "./InvoiceItemUpdateManyWithoutProductsInput";
import { ProductGalleryItemUpdateManyWithoutProductsInput } from "./ProductGalleryItemUpdateManyWithoutProductsInput";
import { ProductOptionGroupUpdateManyWithoutProductsInput } from "./ProductOptionGroupUpdateManyWithoutProductsInput";
import { ProductTranslationUpdateManyWithoutProductsInput } from "./ProductTranslationUpdateManyWithoutProductsInput";
import { ProductVariantUpdateManyWithoutProductsInput } from "./ProductVariantUpdateManyWithoutProductsInput";
import { TagProductUpdateManyWithoutProductsInput } from "./TagProductUpdateManyWithoutProductsInput";
import { WarehouseProductUpdateManyWithoutProductsInput } from "./WarehouseProductUpdateManyWithoutProductsInput";

@InputType()
class ProductUpdateInput {
  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  enabled?: boolean;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  code?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  imageUrl?: string | null;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenant?: TenantWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => OrganizationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrganizationWhereUniqueInput)
  @IsOptional()
  @Field(() => OrganizationWhereUniqueInput, {
    nullable: true,
  })
  organization?: OrganizationWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ProductTypeWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ProductTypeWhereUniqueInput)
  @IsOptional()
  @Field(() => ProductTypeWhereUniqueInput, {
    nullable: true,
  })
  productType?: ProductTypeWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ImageAssetWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ImageAssetWhereUniqueInput)
  @IsOptional()
  @Field(() => ImageAssetWhereUniqueInput, {
    nullable: true,
  })
  imageAsset?: ImageAssetWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ProductCategoryWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ProductCategoryWhereUniqueInput)
  @IsOptional()
  @Field(() => ProductCategoryWhereUniqueInput, {
    nullable: true,
  })
  productCategory?: ProductCategoryWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => InvoiceItemUpdateManyWithoutProductsInput,
  })
  @ValidateNested()
  @Type(() => InvoiceItemUpdateManyWithoutProductsInput)
  @IsOptional()
  @Field(() => InvoiceItemUpdateManyWithoutProductsInput, {
    nullable: true,
  })
  invoiceItem?: InvoiceItemUpdateManyWithoutProductsInput;

  @ApiProperty({
    required: false,
    type: () => ProductGalleryItemUpdateManyWithoutProductsInput,
  })
  @ValidateNested()
  @Type(() => ProductGalleryItemUpdateManyWithoutProductsInput)
  @IsOptional()
  @Field(() => ProductGalleryItemUpdateManyWithoutProductsInput, {
    nullable: true,
  })
  productGalleryItem?: ProductGalleryItemUpdateManyWithoutProductsInput;

  @ApiProperty({
    required: false,
    type: () => ProductOptionGroupUpdateManyWithoutProductsInput,
  })
  @ValidateNested()
  @Type(() => ProductOptionGroupUpdateManyWithoutProductsInput)
  @IsOptional()
  @Field(() => ProductOptionGroupUpdateManyWithoutProductsInput, {
    nullable: true,
  })
  productOptionGroup?: ProductOptionGroupUpdateManyWithoutProductsInput;

  @ApiProperty({
    required: false,
    type: () => ProductTranslationUpdateManyWithoutProductsInput,
  })
  @ValidateNested()
  @Type(() => ProductTranslationUpdateManyWithoutProductsInput)
  @IsOptional()
  @Field(() => ProductTranslationUpdateManyWithoutProductsInput, {
    nullable: true,
  })
  productTranslation?: ProductTranslationUpdateManyWithoutProductsInput;

  @ApiProperty({
    required: false,
    type: () => ProductVariantUpdateManyWithoutProductsInput,
  })
  @ValidateNested()
  @Type(() => ProductVariantUpdateManyWithoutProductsInput)
  @IsOptional()
  @Field(() => ProductVariantUpdateManyWithoutProductsInput, {
    nullable: true,
  })
  productVariant?: ProductVariantUpdateManyWithoutProductsInput;

  @ApiProperty({
    required: false,
    type: () => TagProductUpdateManyWithoutProductsInput,
  })
  @ValidateNested()
  @Type(() => TagProductUpdateManyWithoutProductsInput)
  @IsOptional()
  @Field(() => TagProductUpdateManyWithoutProductsInput, {
    nullable: true,
  })
  tagProduct?: TagProductUpdateManyWithoutProductsInput;

  @ApiProperty({
    required: false,
    type: () => WarehouseProductUpdateManyWithoutProductsInput,
  })
  @ValidateNested()
  @Type(() => WarehouseProductUpdateManyWithoutProductsInput)
  @IsOptional()
  @Field(() => WarehouseProductUpdateManyWithoutProductsInput, {
    nullable: true,
  })
  warehouseProduct?: WarehouseProductUpdateManyWithoutProductsInput;
}

export { ProductUpdateInput as ProductUpdateInput };
