/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsDate, IsOptional, ValidateNested } from "class-validator";
import { Type } from "class-transformer";
import { Organization } from "../../organization/base/Organization";
import { Tenant } from "../../tenant/base/Tenant";
import { ProductOptionGroup } from "../../productOptionGroup/base/ProductOptionGroup";
import { ProductOptionTranslation } from "../../productOptionTranslation/base/ProductOptionTranslation";
import { ProductVariantOptionsProductOption } from "../../productVariantOptionsProductOption/base/ProductVariantOptionsProductOption";

@ObjectType()
class ProductOption {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  code!: string | null;

  @ApiProperty({
    required: false,
    type: () => Organization,
  })
  @ValidateNested()
  @Type(() => Organization)
  @IsOptional()
  organization?: Organization | null;

  @ApiProperty({
    required: false,
    type: () => Tenant,
  })
  @ValidateNested()
  @Type(() => Tenant)
  @IsOptional()
  tenant?: Tenant | null;

  @ApiProperty({
    required: true,
    type: () => ProductOptionGroup,
  })
  @ValidateNested()
  @Type(() => ProductOptionGroup)
  productOptionGroup?: ProductOptionGroup;

  @ApiProperty({
    required: false,
    type: () => [ProductOptionTranslation],
  })
  @ValidateNested()
  @Type(() => ProductOptionTranslation)
  @IsOptional()
  productOptionTranslation?: Array<ProductOptionTranslation>;

  @ApiProperty({
    required: false,
    type: () => [ProductVariantOptionsProductOption],
  })
  @ValidateNested()
  @Type(() => ProductVariantOptionsProductOption)
  @IsOptional()
  productVariantOptionsProductOption?: Array<ProductVariantOptionsProductOption>;
}

export { ProductOption as ProductOption };
