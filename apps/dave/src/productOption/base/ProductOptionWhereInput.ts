/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { DateTimeFilter } from "../../util/DateTimeFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { OrganizationWhereUniqueInput } from "../../organization/base/OrganizationWhereUniqueInput";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";
import { ProductOptionGroupWhereUniqueInput } from "../../productOptionGroup/base/ProductOptionGroupWhereUniqueInput";
import { ProductOptionTranslationListRelationFilter } from "../../productOptionTranslation/base/ProductOptionTranslationListRelationFilter";
import { ProductVariantOptionsProductOptionListRelationFilter } from "../../productVariantOptionsProductOption/base/ProductVariantOptionsProductOptionListRelationFilter";

@InputType()
class ProductOptionWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  createdAt?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  updatedAt?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  name?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  code?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => OrganizationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrganizationWhereUniqueInput)
  @IsOptional()
  @Field(() => OrganizationWhereUniqueInput, {
    nullable: true,
  })
  organization?: OrganizationWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenant?: TenantWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => ProductOptionGroupWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ProductOptionGroupWhereUniqueInput)
  @IsOptional()
  @Field(() => ProductOptionGroupWhereUniqueInput, {
    nullable: true,
  })
  productOptionGroup?: ProductOptionGroupWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => ProductOptionTranslationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProductOptionTranslationListRelationFilter)
  @IsOptional()
  @Field(() => ProductOptionTranslationListRelationFilter, {
    nullable: true,
  })
  productOptionTranslation?: ProductOptionTranslationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ProductVariantOptionsProductOptionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProductVariantOptionsProductOptionListRelationFilter)
  @IsOptional()
  @Field(() => ProductVariantOptionsProductOptionListRelationFilter, {
    nullable: true,
  })
  productVariantOptionsProductOption?: ProductVariantOptionsProductOptionListRelationFilter;
}

export { ProductOptionWhereInput as ProductOptionWhereInput };
