/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsDate,
  IsInt,
  IsOptional,
  IsBoolean,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { ProductVariantPrice } from "../../productVariantPrice/base/ProductVariantPrice";
import { Organization } from "../../organization/base/Organization";
import { Product } from "../../product/base/Product";
import { Tenant } from "../../tenant/base/Tenant";
import { ProductVariantSetting } from "../../productVariantSetting/base/ProductVariantSetting";
import { ImageAsset } from "../../imageAsset/base/ImageAsset";
import { ProductVariantOptionsProductOption } from "../../productVariantOptionsProductOption/base/ProductVariantOptionsProductOption";
import { WarehouseProductVariant } from "../../warehouseProductVariant/base/WarehouseProductVariant";

@ObjectType()
class ProductVariant {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  taxes!: number;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  notes!: string | null;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  quantity!: number;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  billingInvoicingPolicy!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  internalReference!: string | null;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  enabled!: boolean;

  @ApiProperty({
    required: false,
    type: () => ProductVariantPrice,
  })
  @ValidateNested()
  @Type(() => ProductVariantPrice)
  @IsOptional()
  productVariantPriceProductVariantPriceIdToproductVariantPrice?: ProductVariantPrice | null;

  @ApiProperty({
    required: false,
    type: () => Organization,
  })
  @ValidateNested()
  @Type(() => Organization)
  @IsOptional()
  organization?: Organization | null;

  @ApiProperty({
    required: false,
    type: () => Product,
  })
  @ValidateNested()
  @Type(() => Product)
  @IsOptional()
  product?: Product | null;

  @ApiProperty({
    required: false,
    type: () => Tenant,
  })
  @ValidateNested()
  @Type(() => Tenant)
  @IsOptional()
  tenant?: Tenant | null;

  @ApiProperty({
    required: false,
    type: () => ProductVariantSetting,
  })
  @ValidateNested()
  @Type(() => ProductVariantSetting)
  @IsOptional()
  productVariantSettingProductVariantSettingIdToproductVariantSetting?: ProductVariantSetting | null;

  @ApiProperty({
    required: false,
    type: () => ImageAsset,
  })
  @ValidateNested()
  @Type(() => ImageAsset)
  @IsOptional()
  imageAsset?: ImageAsset | null;

  @ApiProperty({
    required: false,
    type: () => [ProductVariantOptionsProductOption],
  })
  @ValidateNested()
  @Type(() => ProductVariantOptionsProductOption)
  @IsOptional()
  productVariantOptionsProductOption?: Array<ProductVariantOptionsProductOption>;

  @ApiProperty({
    required: false,
    type: () => ProductVariantPrice,
  })
  @ValidateNested()
  @Type(() => ProductVariantPrice)
  @IsOptional()
  productVariantPriceProductVariantPriceProductVariantIdToproductVariant?: ProductVariantPrice | null;

  @ApiProperty({
    required: false,
    type: () => ProductVariantSetting,
  })
  @ValidateNested()
  @Type(() => ProductVariantSetting)
  @IsOptional()
  productVariantSettingProductVariantSettingProductVariantIdToproductVariant?: ProductVariantSetting | null;

  @ApiProperty({
    required: false,
    type: () => [WarehouseProductVariant],
  })
  @ValidateNested()
  @Type(() => WarehouseProductVariant)
  @IsOptional()
  warehouseProductVariant?: Array<WarehouseProductVariant>;
}

export { ProductVariant as ProductVariant };
