/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsInt,
  IsOptional,
  IsString,
  IsBoolean,
  ValidateNested,
} from "class-validator";
import { ProductVariantPriceWhereUniqueInput } from "../../productVariantPrice/base/ProductVariantPriceWhereUniqueInput";
import { Type } from "class-transformer";
import { OrganizationWhereUniqueInput } from "../../organization/base/OrganizationWhereUniqueInput";
import { ProductWhereUniqueInput } from "../../product/base/ProductWhereUniqueInput";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";
import { ProductVariantSettingWhereUniqueInput } from "../../productVariantSetting/base/ProductVariantSettingWhereUniqueInput";
import { ImageAssetWhereUniqueInput } from "../../imageAsset/base/ImageAssetWhereUniqueInput";
import { ProductVariantOptionsProductOptionUpdateManyWithoutProductVariantsInput } from "./ProductVariantOptionsProductOptionUpdateManyWithoutProductVariantsInput";
import { WarehouseProductVariantUpdateManyWithoutProductVariantsInput } from "./WarehouseProductVariantUpdateManyWithoutProductVariantsInput";

@InputType()
class ProductVariantUpdateInput {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  taxes?: number;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  notes?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  quantity?: number;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  billingInvoicingPolicy?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  internalReference?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  enabled?: boolean;

  @ApiProperty({
    required: false,
    type: () => ProductVariantPriceWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ProductVariantPriceWhereUniqueInput)
  @IsOptional()
  @Field(() => ProductVariantPriceWhereUniqueInput, {
    nullable: true,
  })
  productVariantPriceProductVariantPriceIdToproductVariantPrice?: ProductVariantPriceWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => OrganizationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrganizationWhereUniqueInput)
  @IsOptional()
  @Field(() => OrganizationWhereUniqueInput, {
    nullable: true,
  })
  organization?: OrganizationWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ProductWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ProductWhereUniqueInput)
  @IsOptional()
  @Field(() => ProductWhereUniqueInput, {
    nullable: true,
  })
  product?: ProductWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenant?: TenantWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ProductVariantSettingWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ProductVariantSettingWhereUniqueInput)
  @IsOptional()
  @Field(() => ProductVariantSettingWhereUniqueInput, {
    nullable: true,
  })
  productVariantSettingProductVariantSettingIdToproductVariantSetting?: ProductVariantSettingWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ImageAssetWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ImageAssetWhereUniqueInput)
  @IsOptional()
  @Field(() => ImageAssetWhereUniqueInput, {
    nullable: true,
  })
  imageAsset?: ImageAssetWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () =>
      ProductVariantOptionsProductOptionUpdateManyWithoutProductVariantsInput,
  })
  @ValidateNested()
  @Type(
    () =>
      ProductVariantOptionsProductOptionUpdateManyWithoutProductVariantsInput
  )
  @IsOptional()
  @Field(
    () =>
      ProductVariantOptionsProductOptionUpdateManyWithoutProductVariantsInput,
    {
      nullable: true,
    }
  )
  productVariantOptionsProductOption?: ProductVariantOptionsProductOptionUpdateManyWithoutProductVariantsInput;

  @ApiProperty({
    required: false,
    type: () => ProductVariantPriceWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ProductVariantPriceWhereUniqueInput)
  @IsOptional()
  @Field(() => ProductVariantPriceWhereUniqueInput, {
    nullable: true,
  })
  productVariantPriceProductVariantPriceProductVariantIdToproductVariant?: ProductVariantPriceWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ProductVariantSettingWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ProductVariantSettingWhereUniqueInput)
  @IsOptional()
  @Field(() => ProductVariantSettingWhereUniqueInput, {
    nullable: true,
  })
  productVariantSettingProductVariantSettingProductVariantIdToproductVariant?: ProductVariantSettingWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => WarehouseProductVariantUpdateManyWithoutProductVariantsInput,
  })
  @ValidateNested()
  @Type(() => WarehouseProductVariantUpdateManyWithoutProductVariantsInput)
  @IsOptional()
  @Field(() => WarehouseProductVariantUpdateManyWithoutProductVariantsInput, {
    nullable: true,
  })
  warehouseProductVariant?: WarehouseProductVariantUpdateManyWithoutProductVariantsInput;
}

export { ProductVariantUpdateInput as ProductVariantUpdateInput };
