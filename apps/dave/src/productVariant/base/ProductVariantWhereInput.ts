/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { DateTimeFilter } from "../../util/DateTimeFilter";
import { IntFilter } from "../../util/IntFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { BooleanFilter } from "../../util/BooleanFilter";
import { ProductVariantPriceWhereUniqueInput } from "../../productVariantPrice/base/ProductVariantPriceWhereUniqueInput";
import { OrganizationWhereUniqueInput } from "../../organization/base/OrganizationWhereUniqueInput";
import { ProductWhereUniqueInput } from "../../product/base/ProductWhereUniqueInput";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";
import { ProductVariantSettingWhereUniqueInput } from "../../productVariantSetting/base/ProductVariantSettingWhereUniqueInput";
import { ImageAssetWhereUniqueInput } from "../../imageAsset/base/ImageAssetWhereUniqueInput";
import { ProductVariantOptionsProductOptionListRelationFilter } from "../../productVariantOptionsProductOption/base/ProductVariantOptionsProductOptionListRelationFilter";
import { WarehouseProductVariantListRelationFilter } from "../../warehouseProductVariant/base/WarehouseProductVariantListRelationFilter";

@InputType()
class ProductVariantWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  createdAt?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  updatedAt?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  taxes?: IntFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  notes?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  quantity?: IntFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  billingInvoicingPolicy?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  internalReference?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanFilter,
  })
  @Type(() => BooleanFilter)
  @IsOptional()
  @Field(() => BooleanFilter, {
    nullable: true,
  })
  enabled?: BooleanFilter;

  @ApiProperty({
    required: false,
    type: () => ProductVariantPriceWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ProductVariantPriceWhereUniqueInput)
  @IsOptional()
  @Field(() => ProductVariantPriceWhereUniqueInput, {
    nullable: true,
  })
  productVariantPriceProductVariantPriceIdToproductVariantPrice?: ProductVariantPriceWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrganizationWhereUniqueInput)
  @IsOptional()
  @Field(() => OrganizationWhereUniqueInput, {
    nullable: true,
  })
  organization?: OrganizationWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => ProductWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ProductWhereUniqueInput)
  @IsOptional()
  @Field(() => ProductWhereUniqueInput, {
    nullable: true,
  })
  product?: ProductWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenant?: TenantWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => ProductVariantSettingWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ProductVariantSettingWhereUniqueInput)
  @IsOptional()
  @Field(() => ProductVariantSettingWhereUniqueInput, {
    nullable: true,
  })
  productVariantSettingProductVariantSettingIdToproductVariantSetting?: ProductVariantSettingWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => ImageAssetWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ImageAssetWhereUniqueInput)
  @IsOptional()
  @Field(() => ImageAssetWhereUniqueInput, {
    nullable: true,
  })
  imageAsset?: ImageAssetWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => ProductVariantOptionsProductOptionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProductVariantOptionsProductOptionListRelationFilter)
  @IsOptional()
  @Field(() => ProductVariantOptionsProductOptionListRelationFilter, {
    nullable: true,
  })
  productVariantOptionsProductOption?: ProductVariantOptionsProductOptionListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ProductVariantPriceWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ProductVariantPriceWhereUniqueInput)
  @IsOptional()
  @Field(() => ProductVariantPriceWhereUniqueInput, {
    nullable: true,
  })
  productVariantPriceProductVariantPriceProductVariantIdToproductVariant?: ProductVariantPriceWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => ProductVariantSettingWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ProductVariantSettingWhereUniqueInput)
  @IsOptional()
  @Field(() => ProductVariantSettingWhereUniqueInput, {
    nullable: true,
  })
  productVariantSettingProductVariantSettingProductVariantIdToproductVariant?: ProductVariantSettingWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => WarehouseProductVariantListRelationFilter,
  })
  @ValidateNested()
  @Type(() => WarehouseProductVariantListRelationFilter)
  @IsOptional()
  @Field(() => WarehouseProductVariantListRelationFilter, {
    nullable: true,
  })
  warehouseProductVariant?: WarehouseProductVariantListRelationFilter;
}

export { ProductVariantWhereInput as ProductVariantWhereInput };
