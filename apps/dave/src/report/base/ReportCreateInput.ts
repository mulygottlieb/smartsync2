/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsBoolean,
  ValidateNested,
} from "class-validator";
import { ReportCategoryWhereUniqueInput } from "../../reportCategory/base/ReportCategoryWhereUniqueInput";
import { Type } from "class-transformer";
import { ReportOrganizationCreateNestedManyWithoutReportsInput } from "./ReportOrganizationCreateNestedManyWithoutReportsInput";

@InputType()
class ReportCreateInput {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  slug?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  image?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  iconClass?: string | null;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  showInMenu!: boolean;

  @ApiProperty({
    required: true,
    type: () => ReportCategoryWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ReportCategoryWhereUniqueInput)
  @Field(() => ReportCategoryWhereUniqueInput)
  reportCategory!: ReportCategoryWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => ReportOrganizationCreateNestedManyWithoutReportsInput,
  })
  @ValidateNested()
  @Type(() => ReportOrganizationCreateNestedManyWithoutReportsInput)
  @IsOptional()
  @Field(() => ReportOrganizationCreateNestedManyWithoutReportsInput, {
    nullable: true,
  })
  reportOrganization?: ReportOrganizationCreateNestedManyWithoutReportsInput;
}

export { ReportCreateInput as ReportCreateInput };
