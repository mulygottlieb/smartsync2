/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsInt, IsOptional, ValidateNested } from "class-validator";
import { ApprovalPolicyWhereUniqueInput } from "../../approvalPolicy/base/ApprovalPolicyWhereUniqueInput";
import { Type } from "class-transformer";
import { OrganizationWhereUniqueInput } from "../../organization/base/OrganizationWhereUniqueInput";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";
import { RequestApprovalEmployeeCreateNestedManyWithoutRequestApprovalsInput } from "./RequestApprovalEmployeeCreateNestedManyWithoutRequestApprovalsInput";
import { RequestApprovalTeamCreateNestedManyWithoutRequestApprovalsInput } from "./RequestApprovalTeamCreateNestedManyWithoutRequestApprovalsInput";
import { TagRequestApprovalCreateNestedManyWithoutRequestApprovalsInput } from "./TagRequestApprovalCreateNestedManyWithoutRequestApprovalsInput";

@InputType()
class RequestApprovalCreateInput {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  status?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  createdBy?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  createdByName?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  minCount?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  requestId?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  requestType?: string | null;

  @ApiProperty({
    required: false,
    type: () => ApprovalPolicyWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ApprovalPolicyWhereUniqueInput)
  @IsOptional()
  @Field(() => ApprovalPolicyWhereUniqueInput, {
    nullable: true,
  })
  approvalPolicy?: ApprovalPolicyWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => OrganizationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrganizationWhereUniqueInput)
  @IsOptional()
  @Field(() => OrganizationWhereUniqueInput, {
    nullable: true,
  })
  organization?: OrganizationWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenant?: TenantWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () =>
      RequestApprovalEmployeeCreateNestedManyWithoutRequestApprovalsInput,
  })
  @ValidateNested()
  @Type(
    () => RequestApprovalEmployeeCreateNestedManyWithoutRequestApprovalsInput
  )
  @IsOptional()
  @Field(
    () => RequestApprovalEmployeeCreateNestedManyWithoutRequestApprovalsInput,
    {
      nullable: true,
    }
  )
  requestApprovalEmployee?: RequestApprovalEmployeeCreateNestedManyWithoutRequestApprovalsInput;

  @ApiProperty({
    required: false,
    type: () => RequestApprovalTeamCreateNestedManyWithoutRequestApprovalsInput,
  })
  @ValidateNested()
  @Type(() => RequestApprovalTeamCreateNestedManyWithoutRequestApprovalsInput)
  @IsOptional()
  @Field(
    () => RequestApprovalTeamCreateNestedManyWithoutRequestApprovalsInput,
    {
      nullable: true,
    }
  )
  requestApprovalTeam?: RequestApprovalTeamCreateNestedManyWithoutRequestApprovalsInput;

  @ApiProperty({
    required: false,
    type: () => TagRequestApprovalCreateNestedManyWithoutRequestApprovalsInput,
  })
  @ValidateNested()
  @Type(() => TagRequestApprovalCreateNestedManyWithoutRequestApprovalsInput)
  @IsOptional()
  @Field(() => TagRequestApprovalCreateNestedManyWithoutRequestApprovalsInput, {
    nullable: true,
  })
  tagRequestApproval?: TagRequestApprovalCreateNestedManyWithoutRequestApprovalsInput;
}

export { RequestApprovalCreateInput as RequestApprovalCreateInput };
