/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsBoolean,
  ValidateNested,
  IsOptional,
} from "class-validator";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";
import { Type } from "class-transformer";
import { InviteCreateNestedManyWithoutRolesInput } from "./InviteCreateNestedManyWithoutRolesInput";
import { OrganizationTeamEmployeeCreateNestedManyWithoutRolesInput } from "./OrganizationTeamEmployeeCreateNestedManyWithoutRolesInput";
import { RolePermissionCreateNestedManyWithoutRolesInput } from "./RolePermissionCreateNestedManyWithoutRolesInput";
import { UserCreateNestedManyWithoutRolesInput } from "./UserCreateNestedManyWithoutRolesInput";

@InputType()
class RoleCreateInput {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  isSystem!: boolean;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenant?: TenantWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => InviteCreateNestedManyWithoutRolesInput,
  })
  @ValidateNested()
  @Type(() => InviteCreateNestedManyWithoutRolesInput)
  @IsOptional()
  @Field(() => InviteCreateNestedManyWithoutRolesInput, {
    nullable: true,
  })
  invite?: InviteCreateNestedManyWithoutRolesInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationTeamEmployeeCreateNestedManyWithoutRolesInput,
  })
  @ValidateNested()
  @Type(() => OrganizationTeamEmployeeCreateNestedManyWithoutRolesInput)
  @IsOptional()
  @Field(() => OrganizationTeamEmployeeCreateNestedManyWithoutRolesInput, {
    nullable: true,
  })
  organizationTeamEmployee?: OrganizationTeamEmployeeCreateNestedManyWithoutRolesInput;

  @ApiProperty({
    required: false,
    type: () => RolePermissionCreateNestedManyWithoutRolesInput,
  })
  @ValidateNested()
  @Type(() => RolePermissionCreateNestedManyWithoutRolesInput)
  @IsOptional()
  @Field(() => RolePermissionCreateNestedManyWithoutRolesInput, {
    nullable: true,
  })
  rolePermission?: RolePermissionCreateNestedManyWithoutRolesInput;

  @ApiProperty({
    required: false,
    type: () => UserCreateNestedManyWithoutRolesInput,
  })
  @ValidateNested()
  @Type(() => UserCreateNestedManyWithoutRolesInput)
  @IsOptional()
  @Field(() => UserCreateNestedManyWithoutRolesInput, {
    nullable: true,
  })
  user?: UserCreateNestedManyWithoutRolesInput;
}

export { RoleCreateInput as RoleCreateInput };
