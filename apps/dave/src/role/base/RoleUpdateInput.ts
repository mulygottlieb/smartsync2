/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsBoolean,
  ValidateNested,
} from "class-validator";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";
import { Type } from "class-transformer";
import { InviteUpdateManyWithoutRolesInput } from "./InviteUpdateManyWithoutRolesInput";
import { OrganizationTeamEmployeeUpdateManyWithoutRolesInput } from "./OrganizationTeamEmployeeUpdateManyWithoutRolesInput";
import { RolePermissionUpdateManyWithoutRolesInput } from "./RolePermissionUpdateManyWithoutRolesInput";
import { UserUpdateManyWithoutRolesInput } from "./UserUpdateManyWithoutRolesInput";

@InputType()
class RoleUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isSystem?: boolean;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenant?: TenantWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => InviteUpdateManyWithoutRolesInput,
  })
  @ValidateNested()
  @Type(() => InviteUpdateManyWithoutRolesInput)
  @IsOptional()
  @Field(() => InviteUpdateManyWithoutRolesInput, {
    nullable: true,
  })
  invite?: InviteUpdateManyWithoutRolesInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationTeamEmployeeUpdateManyWithoutRolesInput,
  })
  @ValidateNested()
  @Type(() => OrganizationTeamEmployeeUpdateManyWithoutRolesInput)
  @IsOptional()
  @Field(() => OrganizationTeamEmployeeUpdateManyWithoutRolesInput, {
    nullable: true,
  })
  organizationTeamEmployee?: OrganizationTeamEmployeeUpdateManyWithoutRolesInput;

  @ApiProperty({
    required: false,
    type: () => RolePermissionUpdateManyWithoutRolesInput,
  })
  @ValidateNested()
  @Type(() => RolePermissionUpdateManyWithoutRolesInput)
  @IsOptional()
  @Field(() => RolePermissionUpdateManyWithoutRolesInput, {
    nullable: true,
  })
  rolePermission?: RolePermissionUpdateManyWithoutRolesInput;

  @ApiProperty({
    required: false,
    type: () => UserUpdateManyWithoutRolesInput,
  })
  @ValidateNested()
  @Type(() => UserUpdateManyWithoutRolesInput)
  @IsOptional()
  @Field(() => UserUpdateManyWithoutRolesInput, {
    nullable: true,
  })
  user?: UserUpdateManyWithoutRolesInput;
}

export { RoleUpdateInput as RoleUpdateInput };
