/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsDate,
  IsString,
  IsOptional,
  IsBoolean,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { OrganizationTeam } from "../../organizationTeam/base/OrganizationTeam";
import { Tenant } from "../../tenant/base/Tenant";
import { Organization } from "../../organization/base/Organization";
import { TagCandidate } from "../../tagCandidate/base/TagCandidate";
import { TagEmployee } from "../../tagEmployee/base/TagEmployee";
import { TagEmployeeLevel } from "../../tagEmployeeLevel/base/TagEmployeeLevel";
import { TagEquipment } from "../../tagEquipment/base/TagEquipment";
import { TagEventType } from "../../tagEventType/base/TagEventType";
import { TagExpense } from "../../tagExpense/base/TagExpense";
import { TagIncome } from "../../tagIncome/base/TagIncome";
import { TagIntegration } from "../../tagIntegration/base/TagIntegration";
import { TagInvoice } from "../../tagInvoice/base/TagInvoice";
import { TagMerchant } from "../../tagMerchant/base/TagMerchant";
import { TagOrganization } from "../../tagOrganization/base/TagOrganization";
import { TagOrganizationContact } from "../../tagOrganizationContact/base/TagOrganizationContact";
import { TagOrganizationDepartment } from "../../tagOrganizationDepartment/base/TagOrganizationDepartment";
import { TagOrganizationEmploymentType } from "../../tagOrganizationEmploymentType/base/TagOrganizationEmploymentType";
import { TagOrganizationExpenseCategory } from "../../tagOrganizationExpenseCategory/base/TagOrganizationExpenseCategory";
import { TagOrganizationPosition } from "../../tagOrganizationPosition/base/TagOrganizationPosition";
import { TagOrganizationProject } from "../../tagOrganizationProject/base/TagOrganizationProject";
import { TagOrganizationTeam } from "../../tagOrganizationTeam/base/TagOrganizationTeam";
import { TagOrganizationVendor } from "../../tagOrganizationVendor/base/TagOrganizationVendor";
import { TagPayment } from "../../tagPayment/base/TagPayment";
import { TagProduct } from "../../tagProduct/base/TagProduct";
import { TagProposal } from "../../tagProposal/base/TagProposal";
import { TagRequestApproval } from "../../tagRequestApproval/base/TagRequestApproval";
import { TagTask } from "../../tagTask/base/TagTask";
import { TagUser } from "../../tagUser/base/TagUser";
import { TagWarehouse } from "../../tagWarehouse/base/TagWarehouse";

@ObjectType()
class Tag {
  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description!: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  color!: string;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  isSystem!: boolean;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  icon!: string | null;

  @ApiProperty({
    required: false,
    type: () => OrganizationTeam,
  })
  @ValidateNested()
  @Type(() => OrganizationTeam)
  @IsOptional()
  organizationTeam?: OrganizationTeam | null;

  @ApiProperty({
    required: false,
    type: () => Tenant,
  })
  @ValidateNested()
  @Type(() => Tenant)
  @IsOptional()
  tenant?: Tenant | null;

  @ApiProperty({
    required: false,
    type: () => Organization,
  })
  @ValidateNested()
  @Type(() => Organization)
  @IsOptional()
  organization?: Organization | null;

  @ApiProperty({
    required: false,
    type: () => [TagCandidate],
  })
  @ValidateNested()
  @Type(() => TagCandidate)
  @IsOptional()
  tagCandidate?: Array<TagCandidate>;

  @ApiProperty({
    required: false,
    type: () => [TagEmployee],
  })
  @ValidateNested()
  @Type(() => TagEmployee)
  @IsOptional()
  tagEmployee?: Array<TagEmployee>;

  @ApiProperty({
    required: false,
    type: () => [TagEmployeeLevel],
  })
  @ValidateNested()
  @Type(() => TagEmployeeLevel)
  @IsOptional()
  tagEmployeeLevel?: Array<TagEmployeeLevel>;

  @ApiProperty({
    required: false,
    type: () => [TagEquipment],
  })
  @ValidateNested()
  @Type(() => TagEquipment)
  @IsOptional()
  tagEquipment?: Array<TagEquipment>;

  @ApiProperty({
    required: false,
    type: () => [TagEventType],
  })
  @ValidateNested()
  @Type(() => TagEventType)
  @IsOptional()
  tagEventType?: Array<TagEventType>;

  @ApiProperty({
    required: false,
    type: () => [TagExpense],
  })
  @ValidateNested()
  @Type(() => TagExpense)
  @IsOptional()
  tagExpense?: Array<TagExpense>;

  @ApiProperty({
    required: false,
    type: () => [TagIncome],
  })
  @ValidateNested()
  @Type(() => TagIncome)
  @IsOptional()
  tagIncome?: Array<TagIncome>;

  @ApiProperty({
    required: false,
    type: () => [TagIntegration],
  })
  @ValidateNested()
  @Type(() => TagIntegration)
  @IsOptional()
  tagIntegration?: Array<TagIntegration>;

  @ApiProperty({
    required: false,
    type: () => [TagInvoice],
  })
  @ValidateNested()
  @Type(() => TagInvoice)
  @IsOptional()
  tagInvoice?: Array<TagInvoice>;

  @ApiProperty({
    required: false,
    type: () => [TagMerchant],
  })
  @ValidateNested()
  @Type(() => TagMerchant)
  @IsOptional()
  tagMerchant?: Array<TagMerchant>;

  @ApiProperty({
    required: false,
    type: () => [TagOrganization],
  })
  @ValidateNested()
  @Type(() => TagOrganization)
  @IsOptional()
  tagOrganization?: Array<TagOrganization>;

  @ApiProperty({
    required: false,
    type: () => [TagOrganizationContact],
  })
  @ValidateNested()
  @Type(() => TagOrganizationContact)
  @IsOptional()
  tagOrganizationContact?: Array<TagOrganizationContact>;

  @ApiProperty({
    required: false,
    type: () => [TagOrganizationDepartment],
  })
  @ValidateNested()
  @Type(() => TagOrganizationDepartment)
  @IsOptional()
  tagOrganizationDepartment?: Array<TagOrganizationDepartment>;

  @ApiProperty({
    required: false,
    type: () => [TagOrganizationEmploymentType],
  })
  @ValidateNested()
  @Type(() => TagOrganizationEmploymentType)
  @IsOptional()
  tagOrganizationEmploymentType?: Array<TagOrganizationEmploymentType>;

  @ApiProperty({
    required: false,
    type: () => [TagOrganizationExpenseCategory],
  })
  @ValidateNested()
  @Type(() => TagOrganizationExpenseCategory)
  @IsOptional()
  tagOrganizationExpenseCategory?: Array<TagOrganizationExpenseCategory>;

  @ApiProperty({
    required: false,
    type: () => [TagOrganizationPosition],
  })
  @ValidateNested()
  @Type(() => TagOrganizationPosition)
  @IsOptional()
  tagOrganizationPosition?: Array<TagOrganizationPosition>;

  @ApiProperty({
    required: false,
    type: () => [TagOrganizationProject],
  })
  @ValidateNested()
  @Type(() => TagOrganizationProject)
  @IsOptional()
  tagOrganizationProject?: Array<TagOrganizationProject>;

  @ApiProperty({
    required: false,
    type: () => [TagOrganizationTeam],
  })
  @ValidateNested()
  @Type(() => TagOrganizationTeam)
  @IsOptional()
  tagOrganizationTeam?: Array<TagOrganizationTeam>;

  @ApiProperty({
    required: false,
    type: () => [TagOrganizationVendor],
  })
  @ValidateNested()
  @Type(() => TagOrganizationVendor)
  @IsOptional()
  tagOrganizationVendor?: Array<TagOrganizationVendor>;

  @ApiProperty({
    required: false,
    type: () => [TagPayment],
  })
  @ValidateNested()
  @Type(() => TagPayment)
  @IsOptional()
  tagPayment?: Array<TagPayment>;

  @ApiProperty({
    required: false,
    type: () => [TagProduct],
  })
  @ValidateNested()
  @Type(() => TagProduct)
  @IsOptional()
  tagProduct?: Array<TagProduct>;

  @ApiProperty({
    required: false,
    type: () => [TagProposal],
  })
  @ValidateNested()
  @Type(() => TagProposal)
  @IsOptional()
  tagProposal?: Array<TagProposal>;

  @ApiProperty({
    required: false,
    type: () => [TagRequestApproval],
  })
  @ValidateNested()
  @Type(() => TagRequestApproval)
  @IsOptional()
  tagRequestApproval?: Array<TagRequestApproval>;

  @ApiProperty({
    required: false,
    type: () => [TagTask],
  })
  @ValidateNested()
  @Type(() => TagTask)
  @IsOptional()
  tagTask?: Array<TagTask>;

  @ApiProperty({
    required: false,
    type: () => [TagUser],
  })
  @ValidateNested()
  @Type(() => TagUser)
  @IsOptional()
  tagUser?: Array<TagUser>;

  @ApiProperty({
    required: false,
    type: () => [TagWarehouse],
  })
  @ValidateNested()
  @Type(() => TagWarehouse)
  @IsOptional()
  tagWarehouse?: Array<TagWarehouse>;
}

export { Tag as Tag };
