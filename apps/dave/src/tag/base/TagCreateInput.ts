/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsBoolean,
  ValidateNested,
} from "class-validator";
import { OrganizationTeamWhereUniqueInput } from "../../organizationTeam/base/OrganizationTeamWhereUniqueInput";
import { Type } from "class-transformer";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";
import { OrganizationWhereUniqueInput } from "../../organization/base/OrganizationWhereUniqueInput";
import { TagCandidateCreateNestedManyWithoutTagsInput } from "./TagCandidateCreateNestedManyWithoutTagsInput";
import { TagEmployeeCreateNestedManyWithoutTagsInput } from "./TagEmployeeCreateNestedManyWithoutTagsInput";
import { TagEmployeeLevelCreateNestedManyWithoutTagsInput } from "./TagEmployeeLevelCreateNestedManyWithoutTagsInput";
import { TagEquipmentCreateNestedManyWithoutTagsInput } from "./TagEquipmentCreateNestedManyWithoutTagsInput";
import { TagEventTypeCreateNestedManyWithoutTagsInput } from "./TagEventTypeCreateNestedManyWithoutTagsInput";
import { TagExpenseCreateNestedManyWithoutTagsInput } from "./TagExpenseCreateNestedManyWithoutTagsInput";
import { TagIncomeCreateNestedManyWithoutTagsInput } from "./TagIncomeCreateNestedManyWithoutTagsInput";
import { TagIntegrationCreateNestedManyWithoutTagsInput } from "./TagIntegrationCreateNestedManyWithoutTagsInput";
import { TagInvoiceCreateNestedManyWithoutTagsInput } from "./TagInvoiceCreateNestedManyWithoutTagsInput";
import { TagMerchantCreateNestedManyWithoutTagsInput } from "./TagMerchantCreateNestedManyWithoutTagsInput";
import { TagOrganizationCreateNestedManyWithoutTagsInput } from "./TagOrganizationCreateNestedManyWithoutTagsInput";
import { TagOrganizationContactCreateNestedManyWithoutTagsInput } from "./TagOrganizationContactCreateNestedManyWithoutTagsInput";
import { TagOrganizationDepartmentCreateNestedManyWithoutTagsInput } from "./TagOrganizationDepartmentCreateNestedManyWithoutTagsInput";
import { TagOrganizationEmploymentTypeCreateNestedManyWithoutTagsInput } from "./TagOrganizationEmploymentTypeCreateNestedManyWithoutTagsInput";
import { TagOrganizationExpenseCategoryCreateNestedManyWithoutTagsInput } from "./TagOrganizationExpenseCategoryCreateNestedManyWithoutTagsInput";
import { TagOrganizationPositionCreateNestedManyWithoutTagsInput } from "./TagOrganizationPositionCreateNestedManyWithoutTagsInput";
import { TagOrganizationProjectCreateNestedManyWithoutTagsInput } from "./TagOrganizationProjectCreateNestedManyWithoutTagsInput";
import { TagOrganizationTeamCreateNestedManyWithoutTagsInput } from "./TagOrganizationTeamCreateNestedManyWithoutTagsInput";
import { TagOrganizationVendorCreateNestedManyWithoutTagsInput } from "./TagOrganizationVendorCreateNestedManyWithoutTagsInput";
import { TagPaymentCreateNestedManyWithoutTagsInput } from "./TagPaymentCreateNestedManyWithoutTagsInput";
import { TagProductCreateNestedManyWithoutTagsInput } from "./TagProductCreateNestedManyWithoutTagsInput";
import { TagProposalCreateNestedManyWithoutTagsInput } from "./TagProposalCreateNestedManyWithoutTagsInput";
import { TagRequestApprovalCreateNestedManyWithoutTagsInput } from "./TagRequestApprovalCreateNestedManyWithoutTagsInput";
import { TagTaskCreateNestedManyWithoutTagsInput } from "./TagTaskCreateNestedManyWithoutTagsInput";
import { TagUserCreateNestedManyWithoutTagsInput } from "./TagUserCreateNestedManyWithoutTagsInput";
import { TagWarehouseCreateNestedManyWithoutTagsInput } from "./TagWarehouseCreateNestedManyWithoutTagsInput";

@InputType()
class TagCreateInput {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  color!: string;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  isSystem!: boolean;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  icon?: string | null;

  @ApiProperty({
    required: false,
    type: () => OrganizationTeamWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrganizationTeamWhereUniqueInput)
  @IsOptional()
  @Field(() => OrganizationTeamWhereUniqueInput, {
    nullable: true,
  })
  organizationTeam?: OrganizationTeamWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenant?: TenantWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => OrganizationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrganizationWhereUniqueInput)
  @IsOptional()
  @Field(() => OrganizationWhereUniqueInput, {
    nullable: true,
  })
  organization?: OrganizationWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => TagCandidateCreateNestedManyWithoutTagsInput,
  })
  @ValidateNested()
  @Type(() => TagCandidateCreateNestedManyWithoutTagsInput)
  @IsOptional()
  @Field(() => TagCandidateCreateNestedManyWithoutTagsInput, {
    nullable: true,
  })
  tagCandidate?: TagCandidateCreateNestedManyWithoutTagsInput;

  @ApiProperty({
    required: false,
    type: () => TagEmployeeCreateNestedManyWithoutTagsInput,
  })
  @ValidateNested()
  @Type(() => TagEmployeeCreateNestedManyWithoutTagsInput)
  @IsOptional()
  @Field(() => TagEmployeeCreateNestedManyWithoutTagsInput, {
    nullable: true,
  })
  tagEmployee?: TagEmployeeCreateNestedManyWithoutTagsInput;

  @ApiProperty({
    required: false,
    type: () => TagEmployeeLevelCreateNestedManyWithoutTagsInput,
  })
  @ValidateNested()
  @Type(() => TagEmployeeLevelCreateNestedManyWithoutTagsInput)
  @IsOptional()
  @Field(() => TagEmployeeLevelCreateNestedManyWithoutTagsInput, {
    nullable: true,
  })
  tagEmployeeLevel?: TagEmployeeLevelCreateNestedManyWithoutTagsInput;

  @ApiProperty({
    required: false,
    type: () => TagEquipmentCreateNestedManyWithoutTagsInput,
  })
  @ValidateNested()
  @Type(() => TagEquipmentCreateNestedManyWithoutTagsInput)
  @IsOptional()
  @Field(() => TagEquipmentCreateNestedManyWithoutTagsInput, {
    nullable: true,
  })
  tagEquipment?: TagEquipmentCreateNestedManyWithoutTagsInput;

  @ApiProperty({
    required: false,
    type: () => TagEventTypeCreateNestedManyWithoutTagsInput,
  })
  @ValidateNested()
  @Type(() => TagEventTypeCreateNestedManyWithoutTagsInput)
  @IsOptional()
  @Field(() => TagEventTypeCreateNestedManyWithoutTagsInput, {
    nullable: true,
  })
  tagEventType?: TagEventTypeCreateNestedManyWithoutTagsInput;

  @ApiProperty({
    required: false,
    type: () => TagExpenseCreateNestedManyWithoutTagsInput,
  })
  @ValidateNested()
  @Type(() => TagExpenseCreateNestedManyWithoutTagsInput)
  @IsOptional()
  @Field(() => TagExpenseCreateNestedManyWithoutTagsInput, {
    nullable: true,
  })
  tagExpense?: TagExpenseCreateNestedManyWithoutTagsInput;

  @ApiProperty({
    required: false,
    type: () => TagIncomeCreateNestedManyWithoutTagsInput,
  })
  @ValidateNested()
  @Type(() => TagIncomeCreateNestedManyWithoutTagsInput)
  @IsOptional()
  @Field(() => TagIncomeCreateNestedManyWithoutTagsInput, {
    nullable: true,
  })
  tagIncome?: TagIncomeCreateNestedManyWithoutTagsInput;

  @ApiProperty({
    required: false,
    type: () => TagIntegrationCreateNestedManyWithoutTagsInput,
  })
  @ValidateNested()
  @Type(() => TagIntegrationCreateNestedManyWithoutTagsInput)
  @IsOptional()
  @Field(() => TagIntegrationCreateNestedManyWithoutTagsInput, {
    nullable: true,
  })
  tagIntegration?: TagIntegrationCreateNestedManyWithoutTagsInput;

  @ApiProperty({
    required: false,
    type: () => TagInvoiceCreateNestedManyWithoutTagsInput,
  })
  @ValidateNested()
  @Type(() => TagInvoiceCreateNestedManyWithoutTagsInput)
  @IsOptional()
  @Field(() => TagInvoiceCreateNestedManyWithoutTagsInput, {
    nullable: true,
  })
  tagInvoice?: TagInvoiceCreateNestedManyWithoutTagsInput;

  @ApiProperty({
    required: false,
    type: () => TagMerchantCreateNestedManyWithoutTagsInput,
  })
  @ValidateNested()
  @Type(() => TagMerchantCreateNestedManyWithoutTagsInput)
  @IsOptional()
  @Field(() => TagMerchantCreateNestedManyWithoutTagsInput, {
    nullable: true,
  })
  tagMerchant?: TagMerchantCreateNestedManyWithoutTagsInput;

  @ApiProperty({
    required: false,
    type: () => TagOrganizationCreateNestedManyWithoutTagsInput,
  })
  @ValidateNested()
  @Type(() => TagOrganizationCreateNestedManyWithoutTagsInput)
  @IsOptional()
  @Field(() => TagOrganizationCreateNestedManyWithoutTagsInput, {
    nullable: true,
  })
  tagOrganization?: TagOrganizationCreateNestedManyWithoutTagsInput;

  @ApiProperty({
    required: false,
    type: () => TagOrganizationContactCreateNestedManyWithoutTagsInput,
  })
  @ValidateNested()
  @Type(() => TagOrganizationContactCreateNestedManyWithoutTagsInput)
  @IsOptional()
  @Field(() => TagOrganizationContactCreateNestedManyWithoutTagsInput, {
    nullable: true,
  })
  tagOrganizationContact?: TagOrganizationContactCreateNestedManyWithoutTagsInput;

  @ApiProperty({
    required: false,
    type: () => TagOrganizationDepartmentCreateNestedManyWithoutTagsInput,
  })
  @ValidateNested()
  @Type(() => TagOrganizationDepartmentCreateNestedManyWithoutTagsInput)
  @IsOptional()
  @Field(() => TagOrganizationDepartmentCreateNestedManyWithoutTagsInput, {
    nullable: true,
  })
  tagOrganizationDepartment?: TagOrganizationDepartmentCreateNestedManyWithoutTagsInput;

  @ApiProperty({
    required: false,
    type: () => TagOrganizationEmploymentTypeCreateNestedManyWithoutTagsInput,
  })
  @ValidateNested()
  @Type(() => TagOrganizationEmploymentTypeCreateNestedManyWithoutTagsInput)
  @IsOptional()
  @Field(() => TagOrganizationEmploymentTypeCreateNestedManyWithoutTagsInput, {
    nullable: true,
  })
  tagOrganizationEmploymentType?: TagOrganizationEmploymentTypeCreateNestedManyWithoutTagsInput;

  @ApiProperty({
    required: false,
    type: () => TagOrganizationExpenseCategoryCreateNestedManyWithoutTagsInput,
  })
  @ValidateNested()
  @Type(() => TagOrganizationExpenseCategoryCreateNestedManyWithoutTagsInput)
  @IsOptional()
  @Field(() => TagOrganizationExpenseCategoryCreateNestedManyWithoutTagsInput, {
    nullable: true,
  })
  tagOrganizationExpenseCategory?: TagOrganizationExpenseCategoryCreateNestedManyWithoutTagsInput;

  @ApiProperty({
    required: false,
    type: () => TagOrganizationPositionCreateNestedManyWithoutTagsInput,
  })
  @ValidateNested()
  @Type(() => TagOrganizationPositionCreateNestedManyWithoutTagsInput)
  @IsOptional()
  @Field(() => TagOrganizationPositionCreateNestedManyWithoutTagsInput, {
    nullable: true,
  })
  tagOrganizationPosition?: TagOrganizationPositionCreateNestedManyWithoutTagsInput;

  @ApiProperty({
    required: false,
    type: () => TagOrganizationProjectCreateNestedManyWithoutTagsInput,
  })
  @ValidateNested()
  @Type(() => TagOrganizationProjectCreateNestedManyWithoutTagsInput)
  @IsOptional()
  @Field(() => TagOrganizationProjectCreateNestedManyWithoutTagsInput, {
    nullable: true,
  })
  tagOrganizationProject?: TagOrganizationProjectCreateNestedManyWithoutTagsInput;

  @ApiProperty({
    required: false,
    type: () => TagOrganizationTeamCreateNestedManyWithoutTagsInput,
  })
  @ValidateNested()
  @Type(() => TagOrganizationTeamCreateNestedManyWithoutTagsInput)
  @IsOptional()
  @Field(() => TagOrganizationTeamCreateNestedManyWithoutTagsInput, {
    nullable: true,
  })
  tagOrganizationTeam?: TagOrganizationTeamCreateNestedManyWithoutTagsInput;

  @ApiProperty({
    required: false,
    type: () => TagOrganizationVendorCreateNestedManyWithoutTagsInput,
  })
  @ValidateNested()
  @Type(() => TagOrganizationVendorCreateNestedManyWithoutTagsInput)
  @IsOptional()
  @Field(() => TagOrganizationVendorCreateNestedManyWithoutTagsInput, {
    nullable: true,
  })
  tagOrganizationVendor?: TagOrganizationVendorCreateNestedManyWithoutTagsInput;

  @ApiProperty({
    required: false,
    type: () => TagPaymentCreateNestedManyWithoutTagsInput,
  })
  @ValidateNested()
  @Type(() => TagPaymentCreateNestedManyWithoutTagsInput)
  @IsOptional()
  @Field(() => TagPaymentCreateNestedManyWithoutTagsInput, {
    nullable: true,
  })
  tagPayment?: TagPaymentCreateNestedManyWithoutTagsInput;

  @ApiProperty({
    required: false,
    type: () => TagProductCreateNestedManyWithoutTagsInput,
  })
  @ValidateNested()
  @Type(() => TagProductCreateNestedManyWithoutTagsInput)
  @IsOptional()
  @Field(() => TagProductCreateNestedManyWithoutTagsInput, {
    nullable: true,
  })
  tagProduct?: TagProductCreateNestedManyWithoutTagsInput;

  @ApiProperty({
    required: false,
    type: () => TagProposalCreateNestedManyWithoutTagsInput,
  })
  @ValidateNested()
  @Type(() => TagProposalCreateNestedManyWithoutTagsInput)
  @IsOptional()
  @Field(() => TagProposalCreateNestedManyWithoutTagsInput, {
    nullable: true,
  })
  tagProposal?: TagProposalCreateNestedManyWithoutTagsInput;

  @ApiProperty({
    required: false,
    type: () => TagRequestApprovalCreateNestedManyWithoutTagsInput,
  })
  @ValidateNested()
  @Type(() => TagRequestApprovalCreateNestedManyWithoutTagsInput)
  @IsOptional()
  @Field(() => TagRequestApprovalCreateNestedManyWithoutTagsInput, {
    nullable: true,
  })
  tagRequestApproval?: TagRequestApprovalCreateNestedManyWithoutTagsInput;

  @ApiProperty({
    required: false,
    type: () => TagTaskCreateNestedManyWithoutTagsInput,
  })
  @ValidateNested()
  @Type(() => TagTaskCreateNestedManyWithoutTagsInput)
  @IsOptional()
  @Field(() => TagTaskCreateNestedManyWithoutTagsInput, {
    nullable: true,
  })
  tagTask?: TagTaskCreateNestedManyWithoutTagsInput;

  @ApiProperty({
    required: false,
    type: () => TagUserCreateNestedManyWithoutTagsInput,
  })
  @ValidateNested()
  @Type(() => TagUserCreateNestedManyWithoutTagsInput)
  @IsOptional()
  @Field(() => TagUserCreateNestedManyWithoutTagsInput, {
    nullable: true,
  })
  tagUser?: TagUserCreateNestedManyWithoutTagsInput;

  @ApiProperty({
    required: false,
    type: () => TagWarehouseCreateNestedManyWithoutTagsInput,
  })
  @ValidateNested()
  @Type(() => TagWarehouseCreateNestedManyWithoutTagsInput)
  @IsOptional()
  @Field(() => TagWarehouseCreateNestedManyWithoutTagsInput, {
    nullable: true,
  })
  tagWarehouse?: TagWarehouseCreateNestedManyWithoutTagsInput;
}

export { TagCreateInput as TagCreateInput };
