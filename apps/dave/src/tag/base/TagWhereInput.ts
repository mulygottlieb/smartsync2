/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { DateTimeFilter } from "../../util/DateTimeFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { StringFilter } from "../../util/StringFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { BooleanFilter } from "../../util/BooleanFilter";
import { OrganizationTeamWhereUniqueInput } from "../../organizationTeam/base/OrganizationTeamWhereUniqueInput";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";
import { OrganizationWhereUniqueInput } from "../../organization/base/OrganizationWhereUniqueInput";
import { TagCandidateListRelationFilter } from "../../tagCandidate/base/TagCandidateListRelationFilter";
import { TagEmployeeListRelationFilter } from "../../tagEmployee/base/TagEmployeeListRelationFilter";
import { TagEmployeeLevelListRelationFilter } from "../../tagEmployeeLevel/base/TagEmployeeLevelListRelationFilter";
import { TagEquipmentListRelationFilter } from "../../tagEquipment/base/TagEquipmentListRelationFilter";
import { TagEventTypeListRelationFilter } from "../../tagEventType/base/TagEventTypeListRelationFilter";
import { TagExpenseListRelationFilter } from "../../tagExpense/base/TagExpenseListRelationFilter";
import { TagIncomeListRelationFilter } from "../../tagIncome/base/TagIncomeListRelationFilter";
import { TagIntegrationListRelationFilter } from "../../tagIntegration/base/TagIntegrationListRelationFilter";
import { TagInvoiceListRelationFilter } from "../../tagInvoice/base/TagInvoiceListRelationFilter";
import { TagMerchantListRelationFilter } from "../../tagMerchant/base/TagMerchantListRelationFilter";
import { TagOrganizationListRelationFilter } from "../../tagOrganization/base/TagOrganizationListRelationFilter";
import { TagOrganizationContactListRelationFilter } from "../../tagOrganizationContact/base/TagOrganizationContactListRelationFilter";
import { TagOrganizationDepartmentListRelationFilter } from "../../tagOrganizationDepartment/base/TagOrganizationDepartmentListRelationFilter";
import { TagOrganizationEmploymentTypeListRelationFilter } from "../../tagOrganizationEmploymentType/base/TagOrganizationEmploymentTypeListRelationFilter";
import { TagOrganizationExpenseCategoryListRelationFilter } from "../../tagOrganizationExpenseCategory/base/TagOrganizationExpenseCategoryListRelationFilter";
import { TagOrganizationPositionListRelationFilter } from "../../tagOrganizationPosition/base/TagOrganizationPositionListRelationFilter";
import { TagOrganizationProjectListRelationFilter } from "../../tagOrganizationProject/base/TagOrganizationProjectListRelationFilter";
import { TagOrganizationTeamListRelationFilter } from "../../tagOrganizationTeam/base/TagOrganizationTeamListRelationFilter";
import { TagOrganizationVendorListRelationFilter } from "../../tagOrganizationVendor/base/TagOrganizationVendorListRelationFilter";
import { TagPaymentListRelationFilter } from "../../tagPayment/base/TagPaymentListRelationFilter";
import { TagProductListRelationFilter } from "../../tagProduct/base/TagProductListRelationFilter";
import { TagProposalListRelationFilter } from "../../tagProposal/base/TagProposalListRelationFilter";
import { TagRequestApprovalListRelationFilter } from "../../tagRequestApproval/base/TagRequestApprovalListRelationFilter";
import { TagTaskListRelationFilter } from "../../tagTask/base/TagTaskListRelationFilter";
import { TagUserListRelationFilter } from "../../tagUser/base/TagUserListRelationFilter";
import { TagWarehouseListRelationFilter } from "../../tagWarehouse/base/TagWarehouseListRelationFilter";

@InputType()
class TagWhereInput {
  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  updatedAt?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  name?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  createdAt?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  description?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  color?: StringFilter;

  @ApiProperty({
    required: false,
    type: BooleanFilter,
  })
  @Type(() => BooleanFilter)
  @IsOptional()
  @Field(() => BooleanFilter, {
    nullable: true,
  })
  isSystem?: BooleanFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  icon?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => OrganizationTeamWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrganizationTeamWhereUniqueInput)
  @IsOptional()
  @Field(() => OrganizationTeamWhereUniqueInput, {
    nullable: true,
  })
  organizationTeam?: OrganizationTeamWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenant?: TenantWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrganizationWhereUniqueInput)
  @IsOptional()
  @Field(() => OrganizationWhereUniqueInput, {
    nullable: true,
  })
  organization?: OrganizationWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => TagCandidateListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TagCandidateListRelationFilter)
  @IsOptional()
  @Field(() => TagCandidateListRelationFilter, {
    nullable: true,
  })
  tagCandidate?: TagCandidateListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TagEmployeeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TagEmployeeListRelationFilter)
  @IsOptional()
  @Field(() => TagEmployeeListRelationFilter, {
    nullable: true,
  })
  tagEmployee?: TagEmployeeListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TagEmployeeLevelListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TagEmployeeLevelListRelationFilter)
  @IsOptional()
  @Field(() => TagEmployeeLevelListRelationFilter, {
    nullable: true,
  })
  tagEmployeeLevel?: TagEmployeeLevelListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TagEquipmentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TagEquipmentListRelationFilter)
  @IsOptional()
  @Field(() => TagEquipmentListRelationFilter, {
    nullable: true,
  })
  tagEquipment?: TagEquipmentListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TagEventTypeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TagEventTypeListRelationFilter)
  @IsOptional()
  @Field(() => TagEventTypeListRelationFilter, {
    nullable: true,
  })
  tagEventType?: TagEventTypeListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TagExpenseListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TagExpenseListRelationFilter)
  @IsOptional()
  @Field(() => TagExpenseListRelationFilter, {
    nullable: true,
  })
  tagExpense?: TagExpenseListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TagIncomeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TagIncomeListRelationFilter)
  @IsOptional()
  @Field(() => TagIncomeListRelationFilter, {
    nullable: true,
  })
  tagIncome?: TagIncomeListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TagIntegrationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TagIntegrationListRelationFilter)
  @IsOptional()
  @Field(() => TagIntegrationListRelationFilter, {
    nullable: true,
  })
  tagIntegration?: TagIntegrationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TagInvoiceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TagInvoiceListRelationFilter)
  @IsOptional()
  @Field(() => TagInvoiceListRelationFilter, {
    nullable: true,
  })
  tagInvoice?: TagInvoiceListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TagMerchantListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TagMerchantListRelationFilter)
  @IsOptional()
  @Field(() => TagMerchantListRelationFilter, {
    nullable: true,
  })
  tagMerchant?: TagMerchantListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TagOrganizationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TagOrganizationListRelationFilter)
  @IsOptional()
  @Field(() => TagOrganizationListRelationFilter, {
    nullable: true,
  })
  tagOrganization?: TagOrganizationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TagOrganizationContactListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TagOrganizationContactListRelationFilter)
  @IsOptional()
  @Field(() => TagOrganizationContactListRelationFilter, {
    nullable: true,
  })
  tagOrganizationContact?: TagOrganizationContactListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TagOrganizationDepartmentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TagOrganizationDepartmentListRelationFilter)
  @IsOptional()
  @Field(() => TagOrganizationDepartmentListRelationFilter, {
    nullable: true,
  })
  tagOrganizationDepartment?: TagOrganizationDepartmentListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TagOrganizationEmploymentTypeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TagOrganizationEmploymentTypeListRelationFilter)
  @IsOptional()
  @Field(() => TagOrganizationEmploymentTypeListRelationFilter, {
    nullable: true,
  })
  tagOrganizationEmploymentType?: TagOrganizationEmploymentTypeListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TagOrganizationExpenseCategoryListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TagOrganizationExpenseCategoryListRelationFilter)
  @IsOptional()
  @Field(() => TagOrganizationExpenseCategoryListRelationFilter, {
    nullable: true,
  })
  tagOrganizationExpenseCategory?: TagOrganizationExpenseCategoryListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TagOrganizationPositionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TagOrganizationPositionListRelationFilter)
  @IsOptional()
  @Field(() => TagOrganizationPositionListRelationFilter, {
    nullable: true,
  })
  tagOrganizationPosition?: TagOrganizationPositionListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TagOrganizationProjectListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TagOrganizationProjectListRelationFilter)
  @IsOptional()
  @Field(() => TagOrganizationProjectListRelationFilter, {
    nullable: true,
  })
  tagOrganizationProject?: TagOrganizationProjectListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TagOrganizationTeamListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TagOrganizationTeamListRelationFilter)
  @IsOptional()
  @Field(() => TagOrganizationTeamListRelationFilter, {
    nullable: true,
  })
  tagOrganizationTeam?: TagOrganizationTeamListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TagOrganizationVendorListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TagOrganizationVendorListRelationFilter)
  @IsOptional()
  @Field(() => TagOrganizationVendorListRelationFilter, {
    nullable: true,
  })
  tagOrganizationVendor?: TagOrganizationVendorListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TagPaymentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TagPaymentListRelationFilter)
  @IsOptional()
  @Field(() => TagPaymentListRelationFilter, {
    nullable: true,
  })
  tagPayment?: TagPaymentListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TagProductListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TagProductListRelationFilter)
  @IsOptional()
  @Field(() => TagProductListRelationFilter, {
    nullable: true,
  })
  tagProduct?: TagProductListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TagProposalListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TagProposalListRelationFilter)
  @IsOptional()
  @Field(() => TagProposalListRelationFilter, {
    nullable: true,
  })
  tagProposal?: TagProposalListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TagRequestApprovalListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TagRequestApprovalListRelationFilter)
  @IsOptional()
  @Field(() => TagRequestApprovalListRelationFilter, {
    nullable: true,
  })
  tagRequestApproval?: TagRequestApprovalListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TagTaskListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TagTaskListRelationFilter)
  @IsOptional()
  @Field(() => TagTaskListRelationFilter, {
    nullable: true,
  })
  tagTask?: TagTaskListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TagUserListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TagUserListRelationFilter)
  @IsOptional()
  @Field(() => TagUserListRelationFilter, {
    nullable: true,
  })
  tagUser?: TagUserListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TagWarehouseListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TagWarehouseListRelationFilter)
  @IsOptional()
  @Field(() => TagWarehouseListRelationFilter, {
    nullable: true,
  })
  tagWarehouse?: TagWarehouseListRelationFilter;
}

export { TagWhereInput as TagWhereInput };
