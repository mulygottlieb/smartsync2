/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsInt,
  IsDate,
  IsBoolean,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { OrganizationSprintWhereUniqueInput } from "../../organizationSprint/base/OrganizationSprintWhereUniqueInput";
import { OrganizationProjectWhereUniqueInput } from "../../organizationProject/base/OrganizationProjectWhereUniqueInput";
import { OrganizationWhereUniqueInput } from "../../organization/base/OrganizationWhereUniqueInput";
import { TaskWhereUniqueInput } from "./TaskWhereUniqueInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";
import { ActivityUpdateManyWithoutTasksInput } from "./ActivityUpdateManyWithoutTasksInput";
import { EmployeeTasksTaskUpdateManyWithoutTasksInput } from "./EmployeeTasksTaskUpdateManyWithoutTasksInput";
import { InvoiceItemUpdateManyWithoutTasksInput } from "./InvoiceItemUpdateManyWithoutTasksInput";
import { KeyResultUpdateManyWithoutTasksInput } from "./KeyResultUpdateManyWithoutTasksInput";
import { OrganizationTeamTasksTaskUpdateManyWithoutTasksInput } from "./OrganizationTeamTasksTaskUpdateManyWithoutTasksInput";
import { TagTaskUpdateManyWithoutTasksInput } from "./TagTaskUpdateManyWithoutTasksInput";
import { TaskUpdateManyWithoutTasksInput } from "./TaskUpdateManyWithoutTasksInput";
import { TaskEmployeeUpdateManyWithoutTasksInput } from "./TaskEmployeeUpdateManyWithoutTasksInput";
import { TaskLinkedIssueUpdateManyWithoutTasksInput } from "./TaskLinkedIssueUpdateManyWithoutTasksInput";
import { TaskTeamUpdateManyWithoutTasksInput } from "./TaskTeamUpdateManyWithoutTasksInput";
import { TimeLogUpdateManyWithoutTasksInput } from "./TimeLogUpdateManyWithoutTasksInput";

@InputType()
class TaskUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  status?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  estimate?: number | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  dueDate?: Date | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  numberField?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  prefix?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  priority?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  size?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  publicField?: boolean | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  startDate?: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  resolvedAt?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  version?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  issueType?: string | null;

  @ApiProperty({
    required: false,
    type: () => OrganizationSprintWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrganizationSprintWhereUniqueInput)
  @IsOptional()
  @Field(() => OrganizationSprintWhereUniqueInput, {
    nullable: true,
  })
  organizationSprint?: OrganizationSprintWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => OrganizationProjectWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrganizationProjectWhereUniqueInput)
  @IsOptional()
  @Field(() => OrganizationProjectWhereUniqueInput, {
    nullable: true,
  })
  organizationProject?: OrganizationProjectWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => OrganizationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrganizationWhereUniqueInput)
  @IsOptional()
  @Field(() => OrganizationWhereUniqueInput, {
    nullable: true,
  })
  organization?: OrganizationWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => TaskWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TaskWhereUniqueInput)
  @IsOptional()
  @Field(() => TaskWhereUniqueInput, {
    nullable: true,
  })
  task?: TaskWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenant?: TenantWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ActivityUpdateManyWithoutTasksInput,
  })
  @ValidateNested()
  @Type(() => ActivityUpdateManyWithoutTasksInput)
  @IsOptional()
  @Field(() => ActivityUpdateManyWithoutTasksInput, {
    nullable: true,
  })
  activity?: ActivityUpdateManyWithoutTasksInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeTasksTaskUpdateManyWithoutTasksInput,
  })
  @ValidateNested()
  @Type(() => EmployeeTasksTaskUpdateManyWithoutTasksInput)
  @IsOptional()
  @Field(() => EmployeeTasksTaskUpdateManyWithoutTasksInput, {
    nullable: true,
  })
  employeeTasksTask?: EmployeeTasksTaskUpdateManyWithoutTasksInput;

  @ApiProperty({
    required: false,
    type: () => InvoiceItemUpdateManyWithoutTasksInput,
  })
  @ValidateNested()
  @Type(() => InvoiceItemUpdateManyWithoutTasksInput)
  @IsOptional()
  @Field(() => InvoiceItemUpdateManyWithoutTasksInput, {
    nullable: true,
  })
  invoiceItem?: InvoiceItemUpdateManyWithoutTasksInput;

  @ApiProperty({
    required: false,
    type: () => KeyResultUpdateManyWithoutTasksInput,
  })
  @ValidateNested()
  @Type(() => KeyResultUpdateManyWithoutTasksInput)
  @IsOptional()
  @Field(() => KeyResultUpdateManyWithoutTasksInput, {
    nullable: true,
  })
  keyResult?: KeyResultUpdateManyWithoutTasksInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationTeamTasksTaskUpdateManyWithoutTasksInput,
  })
  @ValidateNested()
  @Type(() => OrganizationTeamTasksTaskUpdateManyWithoutTasksInput)
  @IsOptional()
  @Field(() => OrganizationTeamTasksTaskUpdateManyWithoutTasksInput, {
    nullable: true,
  })
  organizationTeamTasksTask?: OrganizationTeamTasksTaskUpdateManyWithoutTasksInput;

  @ApiProperty({
    required: false,
    type: () => TagTaskUpdateManyWithoutTasksInput,
  })
  @ValidateNested()
  @Type(() => TagTaskUpdateManyWithoutTasksInput)
  @IsOptional()
  @Field(() => TagTaskUpdateManyWithoutTasksInput, {
    nullable: true,
  })
  tagTask?: TagTaskUpdateManyWithoutTasksInput;

  @ApiProperty({
    required: false,
    type: () => TaskUpdateManyWithoutTasksInput,
  })
  @ValidateNested()
  @Type(() => TaskUpdateManyWithoutTasksInput)
  @IsOptional()
  @Field(() => TaskUpdateManyWithoutTasksInput, {
    nullable: true,
  })
  otherTask?: TaskUpdateManyWithoutTasksInput;

  @ApiProperty({
    required: false,
    type: () => TaskEmployeeUpdateManyWithoutTasksInput,
  })
  @ValidateNested()
  @Type(() => TaskEmployeeUpdateManyWithoutTasksInput)
  @IsOptional()
  @Field(() => TaskEmployeeUpdateManyWithoutTasksInput, {
    nullable: true,
  })
  taskEmployee?: TaskEmployeeUpdateManyWithoutTasksInput;

  @ApiProperty({
    required: false,
    type: () => TaskLinkedIssueUpdateManyWithoutTasksInput,
  })
  @ValidateNested()
  @Type(() => TaskLinkedIssueUpdateManyWithoutTasksInput)
  @IsOptional()
  @Field(() => TaskLinkedIssueUpdateManyWithoutTasksInput, {
    nullable: true,
  })
  taskLinkedIssuesTaskLinkedIssuesTaskToIdTotask?: TaskLinkedIssueUpdateManyWithoutTasksInput;

  @ApiProperty({
    required: false,
    type: () => TaskLinkedIssueUpdateManyWithoutTasksInput,
  })
  @ValidateNested()
  @Type(() => TaskLinkedIssueUpdateManyWithoutTasksInput)
  @IsOptional()
  @Field(() => TaskLinkedIssueUpdateManyWithoutTasksInput, {
    nullable: true,
  })
  taskLinkedIssuesTaskLinkedIssuesTaskFromIdTotask?: TaskLinkedIssueUpdateManyWithoutTasksInput;

  @ApiProperty({
    required: false,
    type: () => TaskTeamUpdateManyWithoutTasksInput,
  })
  @ValidateNested()
  @Type(() => TaskTeamUpdateManyWithoutTasksInput)
  @IsOptional()
  @Field(() => TaskTeamUpdateManyWithoutTasksInput, {
    nullable: true,
  })
  taskTeam?: TaskTeamUpdateManyWithoutTasksInput;

  @ApiProperty({
    required: false,
    type: () => TimeLogUpdateManyWithoutTasksInput,
  })
  @ValidateNested()
  @Type(() => TimeLogUpdateManyWithoutTasksInput)
  @IsOptional()
  @Field(() => TimeLogUpdateManyWithoutTasksInput, {
    nullable: true,
  })
  timeLog?: TimeLogUpdateManyWithoutTasksInput;
}

export { TaskUpdateInput as TaskUpdateInput };
