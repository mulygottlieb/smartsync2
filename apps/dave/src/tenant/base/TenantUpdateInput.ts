/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested } from "class-validator";
import { AccountingTemplateUpdateManyWithoutTenantsInput } from "./AccountingTemplateUpdateManyWithoutTenantsInput";
import { Type } from "class-transformer";
import { ActivityUpdateManyWithoutTenantsInput } from "./ActivityUpdateManyWithoutTenantsInput";
import { AppointmentEmployeeUpdateManyWithoutTenantsInput } from "./AppointmentEmployeeUpdateManyWithoutTenantsInput";
import { ApprovalPolicyUpdateManyWithoutTenantsInput } from "./ApprovalPolicyUpdateManyWithoutTenantsInput";
import { AvailabilitySlotUpdateManyWithoutTenantsInput } from "./AvailabilitySlotUpdateManyWithoutTenantsInput";
import { CandidateUpdateManyWithoutTenantsInput } from "./CandidateUpdateManyWithoutTenantsInput";
import { CandidateCriterionRatingUpdateManyWithoutTenantsInput } from "./CandidateCriterionRatingUpdateManyWithoutTenantsInput";
import { CandidateDocumentUpdateManyWithoutTenantsInput } from "./CandidateDocumentUpdateManyWithoutTenantsInput";
import { CandidateEducationUpdateManyWithoutTenantsInput } from "./CandidateEducationUpdateManyWithoutTenantsInput";
import { CandidateExperienceUpdateManyWithoutTenantsInput } from "./CandidateExperienceUpdateManyWithoutTenantsInput";
import { CandidateFeedbackUpdateManyWithoutTenantsInput } from "./CandidateFeedbackUpdateManyWithoutTenantsInput";
import { CandidateInterviewUpdateManyWithoutTenantsInput } from "./CandidateInterviewUpdateManyWithoutTenantsInput";
import { CandidateInterviewerUpdateManyWithoutTenantsInput } from "./CandidateInterviewerUpdateManyWithoutTenantsInput";
import { CandidatePersonalQualityUpdateManyWithoutTenantsInput } from "./CandidatePersonalQualityUpdateManyWithoutTenantsInput";
import { CandidateSkillUpdateManyWithoutTenantsInput } from "./CandidateSkillUpdateManyWithoutTenantsInput";
import { CandidateSourceUpdateManyWithoutTenantsInput } from "./CandidateSourceUpdateManyWithoutTenantsInput";
import { CandidateTechnologyUpdateManyWithoutTenantsInput } from "./CandidateTechnologyUpdateManyWithoutTenantsInput";
import { ChangelogUpdateManyWithoutTenantsInput } from "./ChangelogUpdateManyWithoutTenantsInput";
import { ContactUpdateManyWithoutTenantsInput } from "./ContactUpdateManyWithoutTenantsInput";
import { CustomSmtpUpdateManyWithoutTenantsInput } from "./CustomSmtpUpdateManyWithoutTenantsInput";
import { DealUpdateManyWithoutTenantsInput } from "./DealUpdateManyWithoutTenantsInput";
import { EmailResetUpdateManyWithoutTenantsInput } from "./EmailResetUpdateManyWithoutTenantsInput";
import { EmailSentUpdateManyWithoutTenantsInput } from "./EmailSentUpdateManyWithoutTenantsInput";
import { EmailTemplateUpdateManyWithoutTenantsInput } from "./EmailTemplateUpdateManyWithoutTenantsInput";
import { EmployeeUpdateManyWithoutTenantsInput } from "./EmployeeUpdateManyWithoutTenantsInput";
import { EmployeeAppointmentUpdateManyWithoutTenantsInput } from "./EmployeeAppointmentUpdateManyWithoutTenantsInput";
import { EmployeeAwardUpdateManyWithoutTenantsInput } from "./EmployeeAwardUpdateManyWithoutTenantsInput";
import { EmployeeLevelUpdateManyWithoutTenantsInput } from "./EmployeeLevelUpdateManyWithoutTenantsInput";
import { EmployeePhoneUpdateManyWithoutTenantsInput } from "./EmployeePhoneUpdateManyWithoutTenantsInput";
import { EmployeeProposalTemplateUpdateManyWithoutTenantsInput } from "./EmployeeProposalTemplateUpdateManyWithoutTenantsInput";
import { EmployeeRecurringExpenseUpdateManyWithoutTenantsInput } from "./EmployeeRecurringExpenseUpdateManyWithoutTenantsInput";
import { EmployeeSettingUpdateManyWithoutTenantsInput } from "./EmployeeSettingUpdateManyWithoutTenantsInput";
import { EmployeeUpworkJobSearchCriterionUpdateManyWithoutTenantsInput } from "./EmployeeUpworkJobSearchCriterionUpdateManyWithoutTenantsInput";
import { EquipmentUpdateManyWithoutTenantsInput } from "./EquipmentUpdateManyWithoutTenantsInput";
import { EquipmentSharingUpdateManyWithoutTenantsInput } from "./EquipmentSharingUpdateManyWithoutTenantsInput";
import { EquipmentSharingPolicyUpdateManyWithoutTenantsInput } from "./EquipmentSharingPolicyUpdateManyWithoutTenantsInput";
import { EstimateEmailUpdateManyWithoutTenantsInput } from "./EstimateEmailUpdateManyWithoutTenantsInput";
import { EventTypeUpdateManyWithoutTenantsInput } from "./EventTypeUpdateManyWithoutTenantsInput";
import { ExpenseUpdateManyWithoutTenantsInput } from "./ExpenseUpdateManyWithoutTenantsInput";
import { ExpenseCategoryUpdateManyWithoutTenantsInput } from "./ExpenseCategoryUpdateManyWithoutTenantsInput";
import { FeatureOrganizationUpdateManyWithoutTenantsInput } from "./FeatureOrganizationUpdateManyWithoutTenantsInput";
import { GoalUpdateManyWithoutTenantsInput } from "./GoalUpdateManyWithoutTenantsInput";
import { GoalGeneralSettingUpdateManyWithoutTenantsInput } from "./GoalGeneralSettingUpdateManyWithoutTenantsInput";
import { GoalKpiUpdateManyWithoutTenantsInput } from "./GoalKpiUpdateManyWithoutTenantsInput";
import { GoalKpiTemplateUpdateManyWithoutTenantsInput } from "./GoalKpiTemplateUpdateManyWithoutTenantsInput";
import { GoalTemplateUpdateManyWithoutTenantsInput } from "./GoalTemplateUpdateManyWithoutTenantsInput";
import { GoalTimeFrameUpdateManyWithoutTenantsInput } from "./GoalTimeFrameUpdateManyWithoutTenantsInput";
import { ImageAssetUpdateManyWithoutTenantsInput } from "./ImageAssetUpdateManyWithoutTenantsInput";
import { ImageAssetWhereUniqueInput } from "../../imageAsset/base/ImageAssetWhereUniqueInput";
import { ImportHistoryUpdateManyWithoutTenantsInput } from "./ImportHistoryUpdateManyWithoutTenantsInput";
import { ImportRecordUpdateManyWithoutTenantsInput } from "./ImportRecordUpdateManyWithoutTenantsInput";
import { IncomeUpdateManyWithoutTenantsInput } from "./IncomeUpdateManyWithoutTenantsInput";
import { IntegrationEntitySettingUpdateManyWithoutTenantsInput } from "./IntegrationEntitySettingUpdateManyWithoutTenantsInput";
import { IntegrationEntitySettingTiedUpdateManyWithoutTenantsInput } from "./IntegrationEntitySettingTiedUpdateManyWithoutTenantsInput";
import { IntegrationMapUpdateManyWithoutTenantsInput } from "./IntegrationMapUpdateManyWithoutTenantsInput";
import { IntegrationSettingUpdateManyWithoutTenantsInput } from "./IntegrationSettingUpdateManyWithoutTenantsInput";
import { IntegrationTenantUpdateManyWithoutTenantsInput } from "./IntegrationTenantUpdateManyWithoutTenantsInput";
import { InviteUpdateManyWithoutTenantsInput } from "./InviteUpdateManyWithoutTenantsInput";
import { InvoiceUpdateManyWithoutTenantsInput } from "./InvoiceUpdateManyWithoutTenantsInput";
import { InvoiceEstimateHistoryUpdateManyWithoutTenantsInput } from "./InvoiceEstimateHistoryUpdateManyWithoutTenantsInput";
import { InvoiceItemUpdateManyWithoutTenantsInput } from "./InvoiceItemUpdateManyWithoutTenantsInput";
import { IssueTypeUpdateManyWithoutTenantsInput } from "./IssueTypeUpdateManyWithoutTenantsInput";
import { JobPresetUpdateManyWithoutTenantsInput } from "./JobPresetUpdateManyWithoutTenantsInput";
import { JobPresetUpworkJobSearchCriterionUpdateManyWithoutTenantsInput } from "./JobPresetUpworkJobSearchCriterionUpdateManyWithoutTenantsInput";
import { JobSearchCategoryUpdateManyWithoutTenantsInput } from "./JobSearchCategoryUpdateManyWithoutTenantsInput";
import { JobSearchOccupationUpdateManyWithoutTenantsInput } from "./JobSearchOccupationUpdateManyWithoutTenantsInput";
import { KeyResultUpdateManyWithoutTenantsInput } from "./KeyResultUpdateManyWithoutTenantsInput";
import { KeyResultTemplateUpdateManyWithoutTenantsInput } from "./KeyResultTemplateUpdateManyWithoutTenantsInput";
import { KeyResultUpdateUpdateManyWithoutTenantsInput } from "./KeyResultUpdateUpdateManyWithoutTenantsInput";
import { KnowledgeBaseUpdateManyWithoutTenantsInput } from "./KnowledgeBaseUpdateManyWithoutTenantsInput";
import { KnowledgeBaseArticleUpdateManyWithoutTenantsInput } from "./KnowledgeBaseArticleUpdateManyWithoutTenantsInput";
import { KnowledgeBaseAuthorUpdateManyWithoutTenantsInput } from "./KnowledgeBaseAuthorUpdateManyWithoutTenantsInput";
import { MerchantUpdateManyWithoutTenantsInput } from "./MerchantUpdateManyWithoutTenantsInput";
import { OrganizationUpdateManyWithoutTenantsInput } from "./OrganizationUpdateManyWithoutTenantsInput";
import { OrganizationAwardUpdateManyWithoutTenantsInput } from "./OrganizationAwardUpdateManyWithoutTenantsInput";
import { OrganizationContactUpdateManyWithoutTenantsInput } from "./OrganizationContactUpdateManyWithoutTenantsInput";
import { OrganizationDepartmentUpdateManyWithoutTenantsInput } from "./OrganizationDepartmentUpdateManyWithoutTenantsInput";
import { OrganizationDocumentUpdateManyWithoutTenantsInput } from "./OrganizationDocumentUpdateManyWithoutTenantsInput";
import { OrganizationEmploymentTypeUpdateManyWithoutTenantsInput } from "./OrganizationEmploymentTypeUpdateManyWithoutTenantsInput";
import { OrganizationLanguageUpdateManyWithoutTenantsInput } from "./OrganizationLanguageUpdateManyWithoutTenantsInput";
import { OrganizationPositionUpdateManyWithoutTenantsInput } from "./OrganizationPositionUpdateManyWithoutTenantsInput";
import { OrganizationProjectUpdateManyWithoutTenantsInput } from "./OrganizationProjectUpdateManyWithoutTenantsInput";
import { OrganizationRecurringExpenseUpdateManyWithoutTenantsInput } from "./OrganizationRecurringExpenseUpdateManyWithoutTenantsInput";
import { OrganizationSprintUpdateManyWithoutTenantsInput } from "./OrganizationSprintUpdateManyWithoutTenantsInput";
import { OrganizationTaskSettingUpdateManyWithoutTenantsInput } from "./OrganizationTaskSettingUpdateManyWithoutTenantsInput";
import { OrganizationTeamUpdateManyWithoutTenantsInput } from "./OrganizationTeamUpdateManyWithoutTenantsInput";
import { OrganizationTeamEmployeeUpdateManyWithoutTenantsInput } from "./OrganizationTeamEmployeeUpdateManyWithoutTenantsInput";
import { OrganizationTeamJoinRequestUpdateManyWithoutTenantsInput } from "./OrganizationTeamJoinRequestUpdateManyWithoutTenantsInput";
import { OrganizationVendorUpdateManyWithoutTenantsInput } from "./OrganizationVendorUpdateManyWithoutTenantsInput";
import { PaymentUpdateManyWithoutTenantsInput } from "./PaymentUpdateManyWithoutTenantsInput";
import { PipelineUpdateManyWithoutTenantsInput } from "./PipelineUpdateManyWithoutTenantsInput";
import { PipelineStageUpdateManyWithoutTenantsInput } from "./PipelineStageUpdateManyWithoutTenantsInput";
import { ProductUpdateManyWithoutTenantsInput } from "./ProductUpdateManyWithoutTenantsInput";
import { ProductCategoryUpdateManyWithoutTenantsInput } from "./ProductCategoryUpdateManyWithoutTenantsInput";
import { ProductCategoryTranslationUpdateManyWithoutTenantsInput } from "./ProductCategoryTranslationUpdateManyWithoutTenantsInput";
import { ProductOptionUpdateManyWithoutTenantsInput } from "./ProductOptionUpdateManyWithoutTenantsInput";
import { ProductOptionGroupUpdateManyWithoutTenantsInput } from "./ProductOptionGroupUpdateManyWithoutTenantsInput";
import { ProductOptionGroupTranslationUpdateManyWithoutTenantsInput } from "./ProductOptionGroupTranslationUpdateManyWithoutTenantsInput";
import { ProductOptionTranslationUpdateManyWithoutTenantsInput } from "./ProductOptionTranslationUpdateManyWithoutTenantsInput";
import { ProductTranslationUpdateManyWithoutTenantsInput } from "./ProductTranslationUpdateManyWithoutTenantsInput";
import { ProductTypeUpdateManyWithoutTenantsInput } from "./ProductTypeUpdateManyWithoutTenantsInput";
import { ProductTypeTranslationUpdateManyWithoutTenantsInput } from "./ProductTypeTranslationUpdateManyWithoutTenantsInput";
import { ProductVariantUpdateManyWithoutTenantsInput } from "./ProductVariantUpdateManyWithoutTenantsInput";
import { ProductVariantPriceUpdateManyWithoutTenantsInput } from "./ProductVariantPriceUpdateManyWithoutTenantsInput";
import { ProductVariantSettingUpdateManyWithoutTenantsInput } from "./ProductVariantSettingUpdateManyWithoutTenantsInput";
import { ProposalUpdateManyWithoutTenantsInput } from "./ProposalUpdateManyWithoutTenantsInput";
import { ReportOrganizationUpdateManyWithoutTenantsInput } from "./ReportOrganizationUpdateManyWithoutTenantsInput";
import { RequestApprovalUpdateManyWithoutTenantsInput } from "./RequestApprovalUpdateManyWithoutTenantsInput";
import { RequestApprovalEmployeeUpdateManyWithoutTenantsInput } from "./RequestApprovalEmployeeUpdateManyWithoutTenantsInput";
import { RequestApprovalTeamUpdateManyWithoutTenantsInput } from "./RequestApprovalTeamUpdateManyWithoutTenantsInput";
import { RoleUpdateManyWithoutTenantsInput } from "./RoleUpdateManyWithoutTenantsInput";
import { RolePermissionUpdateManyWithoutTenantsInput } from "./RolePermissionUpdateManyWithoutTenantsInput";
import { ScreenshotUpdateManyWithoutTenantsInput } from "./ScreenshotUpdateManyWithoutTenantsInput";
import { SkillUpdateManyWithoutTenantsInput } from "./SkillUpdateManyWithoutTenantsInput";
import { TagUpdateManyWithoutTenantsInput } from "./TagUpdateManyWithoutTenantsInput";
import { TaskUpdateManyWithoutTenantsInput } from "./TaskUpdateManyWithoutTenantsInput";
import { TaskLinkedIssueUpdateManyWithoutTenantsInput } from "./TaskLinkedIssueUpdateManyWithoutTenantsInput";
import { TaskPriorityUpdateManyWithoutTenantsInput } from "./TaskPriorityUpdateManyWithoutTenantsInput";
import { TaskRelatedIssueTypeUpdateManyWithoutTenantsInput } from "./TaskRelatedIssueTypeUpdateManyWithoutTenantsInput";
import { TaskSizeUpdateManyWithoutTenantsInput } from "./TaskSizeUpdateManyWithoutTenantsInput";
import { TaskStatusUpdateManyWithoutTenantsInput } from "./TaskStatusUpdateManyWithoutTenantsInput";
import { TaskVersionUpdateManyWithoutTenantsInput } from "./TaskVersionUpdateManyWithoutTenantsInput";
import { TenantSettingUpdateManyWithoutTenantsInput } from "./TenantSettingUpdateManyWithoutTenantsInput";
import { TimeLogUpdateManyWithoutTenantsInput } from "./TimeLogUpdateManyWithoutTenantsInput";
import { TimeOffPolicyUpdateManyWithoutTenantsInput } from "./TimeOffPolicyUpdateManyWithoutTenantsInput";
import { TimeOffRequestUpdateManyWithoutTenantsInput } from "./TimeOffRequestUpdateManyWithoutTenantsInput";
import { TimeSlotUpdateManyWithoutTenantsInput } from "./TimeSlotUpdateManyWithoutTenantsInput";
import { TimeSlotMinuteUpdateManyWithoutTenantsInput } from "./TimeSlotMinuteUpdateManyWithoutTenantsInput";
import { TimesheetUpdateManyWithoutTenantsInput } from "./TimesheetUpdateManyWithoutTenantsInput";
import { UserUpdateManyWithoutTenantsInput } from "./UserUpdateManyWithoutTenantsInput";
import { UserOrganizationUpdateManyWithoutTenantsInput } from "./UserOrganizationUpdateManyWithoutTenantsInput";
import { WarehouseUpdateManyWithoutTenantsInput } from "./WarehouseUpdateManyWithoutTenantsInput";
import { WarehouseProductUpdateManyWithoutTenantsInput } from "./WarehouseProductUpdateManyWithoutTenantsInput";
import { WarehouseProductVariantUpdateManyWithoutTenantsInput } from "./WarehouseProductVariantUpdateManyWithoutTenantsInput";

@InputType()
class TenantUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  logo?: string | null;

  @ApiProperty({
    required: false,
    type: () => AccountingTemplateUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => AccountingTemplateUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => AccountingTemplateUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  accountingTemplate?: AccountingTemplateUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ActivityUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ActivityUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ActivityUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  activity?: ActivityUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => AppointmentEmployeeUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => AppointmentEmployeeUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => AppointmentEmployeeUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  appointmentEmployee?: AppointmentEmployeeUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ApprovalPolicyUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ApprovalPolicyUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ApprovalPolicyUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  approvalPolicy?: ApprovalPolicyUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => AvailabilitySlotUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => AvailabilitySlotUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => AvailabilitySlotUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  availabilitySlot?: AvailabilitySlotUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => CandidateUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => CandidateUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => CandidateUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  candidate?: CandidateUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => CandidateCriterionRatingUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => CandidateCriterionRatingUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => CandidateCriterionRatingUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  candidateCriterionRating?: CandidateCriterionRatingUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => CandidateDocumentUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => CandidateDocumentUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => CandidateDocumentUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  candidateDocument?: CandidateDocumentUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => CandidateEducationUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => CandidateEducationUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => CandidateEducationUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  candidateEducation?: CandidateEducationUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => CandidateExperienceUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => CandidateExperienceUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => CandidateExperienceUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  candidateExperience?: CandidateExperienceUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => CandidateFeedbackUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => CandidateFeedbackUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => CandidateFeedbackUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  candidateFeedback?: CandidateFeedbackUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => CandidateInterviewUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => CandidateInterviewUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => CandidateInterviewUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  candidateInterview?: CandidateInterviewUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => CandidateInterviewerUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => CandidateInterviewerUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => CandidateInterviewerUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  candidateInterviewer?: CandidateInterviewerUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => CandidatePersonalQualityUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => CandidatePersonalQualityUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => CandidatePersonalQualityUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  candidatePersonalQuality?: CandidatePersonalQualityUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => CandidateSkillUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => CandidateSkillUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => CandidateSkillUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  candidateSkill?: CandidateSkillUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => CandidateSourceUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => CandidateSourceUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => CandidateSourceUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  candidateSource?: CandidateSourceUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => CandidateTechnologyUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => CandidateTechnologyUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => CandidateTechnologyUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  candidateTechnology?: CandidateTechnologyUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ChangelogUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ChangelogUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ChangelogUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  changelog?: ChangelogUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ContactUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ContactUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ContactUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  contact?: ContactUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => CustomSmtpUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => CustomSmtpUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => CustomSmtpUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  customSmtp?: CustomSmtpUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => DealUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => DealUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => DealUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  deal?: DealUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => EmailResetUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => EmailResetUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => EmailResetUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  emailReset?: EmailResetUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => EmailSentUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => EmailSentUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => EmailSentUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  emailSent?: EmailSentUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => EmailTemplateUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => EmailTemplateUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => EmailTemplateUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  emailTemplate?: EmailTemplateUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => EmployeeUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => EmployeeUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  employee?: EmployeeUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeAppointmentUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => EmployeeAppointmentUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => EmployeeAppointmentUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  employeeAppointment?: EmployeeAppointmentUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeAwardUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => EmployeeAwardUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => EmployeeAwardUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  employeeAward?: EmployeeAwardUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeLevelUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => EmployeeLevelUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => EmployeeLevelUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  employeeLevel?: EmployeeLevelUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => EmployeePhoneUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => EmployeePhoneUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => EmployeePhoneUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  employeePhone?: EmployeePhoneUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeProposalTemplateUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => EmployeeProposalTemplateUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => EmployeeProposalTemplateUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  employeeProposalTemplate?: EmployeeProposalTemplateUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeRecurringExpenseUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => EmployeeRecurringExpenseUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => EmployeeRecurringExpenseUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  employeeRecurringExpense?: EmployeeRecurringExpenseUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeSettingUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => EmployeeSettingUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => EmployeeSettingUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  employeeSetting?: EmployeeSettingUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeUpworkJobSearchCriterionUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => EmployeeUpworkJobSearchCriterionUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => EmployeeUpworkJobSearchCriterionUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  employeeUpworkJobSearchCriterion?: EmployeeUpworkJobSearchCriterionUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => EquipmentUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => EquipmentUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => EquipmentUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  equipment?: EquipmentUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => EquipmentSharingUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => EquipmentSharingUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => EquipmentSharingUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  equipmentSharing?: EquipmentSharingUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => EquipmentSharingPolicyUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => EquipmentSharingPolicyUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => EquipmentSharingPolicyUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  equipmentSharingPolicy?: EquipmentSharingPolicyUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => EstimateEmailUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => EstimateEmailUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => EstimateEmailUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  estimateEmail?: EstimateEmailUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => EventTypeUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => EventTypeUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => EventTypeUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  eventType?: EventTypeUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ExpenseUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ExpenseUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ExpenseUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  expense?: ExpenseUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ExpenseCategoryUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ExpenseCategoryUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ExpenseCategoryUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  expenseCategory?: ExpenseCategoryUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => FeatureOrganizationUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => FeatureOrganizationUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => FeatureOrganizationUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  featureOrganization?: FeatureOrganizationUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => GoalUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => GoalUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => GoalUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  goal?: GoalUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => GoalGeneralSettingUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => GoalGeneralSettingUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => GoalGeneralSettingUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  goalGeneralSetting?: GoalGeneralSettingUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => GoalKpiUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => GoalKpiUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => GoalKpiUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  goalKpi?: GoalKpiUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => GoalKpiTemplateUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => GoalKpiTemplateUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => GoalKpiTemplateUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  goalKpiTemplate?: GoalKpiTemplateUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => GoalTemplateUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => GoalTemplateUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => GoalTemplateUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  goalTemplate?: GoalTemplateUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => GoalTimeFrameUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => GoalTimeFrameUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => GoalTimeFrameUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  goalTimeFrame?: GoalTimeFrameUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ImageAssetUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ImageAssetUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ImageAssetUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  imageAssetImageAssetTenantIdTotenant?: ImageAssetUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ImageAssetWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ImageAssetWhereUniqueInput)
  @IsOptional()
  @Field(() => ImageAssetWhereUniqueInput, {
    nullable: true,
  })
  imageAssetTenantImageIdToimageAsset?: ImageAssetWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ImportHistoryUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ImportHistoryUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ImportHistoryUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  importHistory?: ImportHistoryUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ImportRecordUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ImportRecordUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ImportRecordUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  importRecord?: ImportRecordUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => IncomeUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => IncomeUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => IncomeUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  income?: IncomeUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => IntegrationEntitySettingUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => IntegrationEntitySettingUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => IntegrationEntitySettingUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  integrationEntitySetting?: IntegrationEntitySettingUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => IntegrationEntitySettingTiedUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => IntegrationEntitySettingTiedUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => IntegrationEntitySettingTiedUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  integrationEntitySettingTied?: IntegrationEntitySettingTiedUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => IntegrationMapUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => IntegrationMapUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => IntegrationMapUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  integrationMap?: IntegrationMapUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => IntegrationSettingUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => IntegrationSettingUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => IntegrationSettingUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  integrationSetting?: IntegrationSettingUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => IntegrationTenantUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => IntegrationTenantUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => IntegrationTenantUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  integrationTenant?: IntegrationTenantUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => InviteUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => InviteUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => InviteUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  invite?: InviteUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => InvoiceUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => InvoiceUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => InvoiceUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  invoice?: InvoiceUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => InvoiceEstimateHistoryUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => InvoiceEstimateHistoryUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => InvoiceEstimateHistoryUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  invoiceEstimateHistory?: InvoiceEstimateHistoryUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => InvoiceItemUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => InvoiceItemUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => InvoiceItemUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  invoiceItem?: InvoiceItemUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => IssueTypeUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => IssueTypeUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => IssueTypeUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  issueType?: IssueTypeUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => JobPresetUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => JobPresetUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => JobPresetUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  jobPreset?: JobPresetUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => JobPresetUpworkJobSearchCriterionUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => JobPresetUpworkJobSearchCriterionUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => JobPresetUpworkJobSearchCriterionUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  jobPresetUpworkJobSearchCriterion?: JobPresetUpworkJobSearchCriterionUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => JobSearchCategoryUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => JobSearchCategoryUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => JobSearchCategoryUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  jobSearchCategory?: JobSearchCategoryUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => JobSearchOccupationUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => JobSearchOccupationUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => JobSearchOccupationUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  jobSearchOccupation?: JobSearchOccupationUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => KeyResultUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => KeyResultUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => KeyResultUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  keyResult?: KeyResultUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => KeyResultTemplateUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => KeyResultTemplateUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => KeyResultTemplateUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  keyResultTemplate?: KeyResultTemplateUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => KeyResultUpdateUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => KeyResultUpdateUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => KeyResultUpdateUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  keyResultUpdate?: KeyResultUpdateUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => KnowledgeBaseUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => KnowledgeBaseUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => KnowledgeBaseUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  knowledgeBase?: KnowledgeBaseUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => KnowledgeBaseArticleUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => KnowledgeBaseArticleUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => KnowledgeBaseArticleUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  knowledgeBaseArticle?: KnowledgeBaseArticleUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => KnowledgeBaseAuthorUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => KnowledgeBaseAuthorUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => KnowledgeBaseAuthorUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  knowledgeBaseAuthor?: KnowledgeBaseAuthorUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => MerchantUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => MerchantUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => MerchantUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  merchant?: MerchantUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => OrganizationUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => OrganizationUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  organization?: OrganizationUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationAwardUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => OrganizationAwardUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => OrganizationAwardUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  organizationAward?: OrganizationAwardUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationContactUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => OrganizationContactUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => OrganizationContactUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  organizationContact?: OrganizationContactUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationDepartmentUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => OrganizationDepartmentUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => OrganizationDepartmentUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  organizationDepartment?: OrganizationDepartmentUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationDocumentUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => OrganizationDocumentUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => OrganizationDocumentUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  organizationDocument?: OrganizationDocumentUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationEmploymentTypeUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => OrganizationEmploymentTypeUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => OrganizationEmploymentTypeUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  organizationEmploymentType?: OrganizationEmploymentTypeUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationLanguageUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => OrganizationLanguageUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => OrganizationLanguageUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  organizationLanguage?: OrganizationLanguageUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationPositionUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => OrganizationPositionUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => OrganizationPositionUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  organizationPosition?: OrganizationPositionUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationProjectUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => OrganizationProjectUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => OrganizationProjectUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  organizationProject?: OrganizationProjectUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationRecurringExpenseUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => OrganizationRecurringExpenseUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => OrganizationRecurringExpenseUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  organizationRecurringExpense?: OrganizationRecurringExpenseUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationSprintUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => OrganizationSprintUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => OrganizationSprintUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  organizationSprint?: OrganizationSprintUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationTaskSettingUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => OrganizationTaskSettingUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => OrganizationTaskSettingUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  organizationTaskSetting?: OrganizationTaskSettingUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationTeamUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => OrganizationTeamUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => OrganizationTeamUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  organizationTeam?: OrganizationTeamUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationTeamEmployeeUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => OrganizationTeamEmployeeUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => OrganizationTeamEmployeeUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  organizationTeamEmployee?: OrganizationTeamEmployeeUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationTeamJoinRequestUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => OrganizationTeamJoinRequestUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => OrganizationTeamJoinRequestUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  organizationTeamJoinRequest?: OrganizationTeamJoinRequestUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationVendorUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => OrganizationVendorUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => OrganizationVendorUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  organizationVendor?: OrganizationVendorUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => PaymentUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => PaymentUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => PaymentUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  payment?: PaymentUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => PipelineUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => PipelineUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => PipelineUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  pipeline?: PipelineUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => PipelineStageUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => PipelineStageUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => PipelineStageUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  pipelineStage?: PipelineStageUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ProductUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ProductUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ProductUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  product?: ProductUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ProductCategoryUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ProductCategoryUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ProductCategoryUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  productCategory?: ProductCategoryUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ProductCategoryTranslationUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ProductCategoryTranslationUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ProductCategoryTranslationUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  productCategoryTranslation?: ProductCategoryTranslationUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ProductOptionUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ProductOptionUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ProductOptionUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  productOption?: ProductOptionUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ProductOptionGroupUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ProductOptionGroupUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ProductOptionGroupUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  productOptionGroup?: ProductOptionGroupUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ProductOptionGroupTranslationUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ProductOptionGroupTranslationUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ProductOptionGroupTranslationUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  productOptionGroupTranslation?: ProductOptionGroupTranslationUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ProductOptionTranslationUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ProductOptionTranslationUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ProductOptionTranslationUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  productOptionTranslation?: ProductOptionTranslationUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ProductTranslationUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ProductTranslationUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ProductTranslationUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  productTranslation?: ProductTranslationUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ProductTypeUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ProductTypeUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ProductTypeUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  productType?: ProductTypeUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ProductTypeTranslationUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ProductTypeTranslationUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ProductTypeTranslationUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  productTypeTranslation?: ProductTypeTranslationUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ProductVariantUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ProductVariantUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ProductVariantUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  productVariant?: ProductVariantUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ProductVariantPriceUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ProductVariantPriceUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ProductVariantPriceUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  productVariantPrice?: ProductVariantPriceUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ProductVariantSettingUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ProductVariantSettingUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ProductVariantSettingUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  productVariantSetting?: ProductVariantSettingUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ProposalUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ProposalUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ProposalUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  proposal?: ProposalUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ReportOrganizationUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ReportOrganizationUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ReportOrganizationUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  reportOrganization?: ReportOrganizationUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => RequestApprovalUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => RequestApprovalUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => RequestApprovalUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  requestApproval?: RequestApprovalUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => RequestApprovalEmployeeUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => RequestApprovalEmployeeUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => RequestApprovalEmployeeUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  requestApprovalEmployee?: RequestApprovalEmployeeUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => RequestApprovalTeamUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => RequestApprovalTeamUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => RequestApprovalTeamUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  requestApprovalTeam?: RequestApprovalTeamUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => RoleUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => RoleUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => RoleUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  role?: RoleUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => RolePermissionUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => RolePermissionUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => RolePermissionUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  rolePermission?: RolePermissionUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ScreenshotUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ScreenshotUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ScreenshotUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  screenshot?: ScreenshotUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => SkillUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => SkillUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => SkillUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  skill?: SkillUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => TagUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => TagUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => TagUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  tag?: TagUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => TaskUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => TaskUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => TaskUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  task?: TaskUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => TaskLinkedIssueUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => TaskLinkedIssueUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => TaskLinkedIssueUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  taskLinkedIssues?: TaskLinkedIssueUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => TaskPriorityUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => TaskPriorityUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => TaskPriorityUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  taskPriority?: TaskPriorityUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => TaskRelatedIssueTypeUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => TaskRelatedIssueTypeUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => TaskRelatedIssueTypeUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  taskRelatedIssueType?: TaskRelatedIssueTypeUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => TaskSizeUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => TaskSizeUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => TaskSizeUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  taskSize?: TaskSizeUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => TaskStatusUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => TaskStatusUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => TaskStatusUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  taskStatus?: TaskStatusUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => TaskVersionUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => TaskVersionUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => TaskVersionUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  taskVersion?: TaskVersionUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => TenantSettingUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => TenantSettingUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => TenantSettingUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  tenantSetting?: TenantSettingUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => TimeLogUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => TimeLogUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => TimeLogUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  timeLog?: TimeLogUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => TimeOffPolicyUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => TimeOffPolicyUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => TimeOffPolicyUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  timeOffPolicy?: TimeOffPolicyUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => TimeOffRequestUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => TimeOffRequestUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => TimeOffRequestUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  timeOffRequest?: TimeOffRequestUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => TimeSlotUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => TimeSlotUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => TimeSlotUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  timeSlot?: TimeSlotUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => TimeSlotMinuteUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => TimeSlotMinuteUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => TimeSlotMinuteUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  timeSlotMinute?: TimeSlotMinuteUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => TimesheetUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => TimesheetUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => TimesheetUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  timesheet?: TimesheetUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => UserUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => UserUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => UserUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  user?: UserUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => UserOrganizationUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => UserOrganizationUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => UserOrganizationUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  userOrganization?: UserOrganizationUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => WarehouseUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => WarehouseUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => WarehouseUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  warehouse?: WarehouseUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => WarehouseProductUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => WarehouseProductUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => WarehouseProductUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  warehouseProduct?: WarehouseProductUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => WarehouseProductVariantUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => WarehouseProductVariantUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => WarehouseProductVariantUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  warehouseProductVariant?: WarehouseProductVariantUpdateManyWithoutTenantsInput;
}

export { TenantUpdateInput as TenantUpdateInput };
