/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { DateTimeFilter } from "../../util/DateTimeFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { AccountingTemplateListRelationFilter } from "../../accountingTemplate/base/AccountingTemplateListRelationFilter";
import { ActivityListRelationFilter } from "../../activity/base/ActivityListRelationFilter";
import { AppointmentEmployeeListRelationFilter } from "../../appointmentEmployee/base/AppointmentEmployeeListRelationFilter";
import { ApprovalPolicyListRelationFilter } from "../../approvalPolicy/base/ApprovalPolicyListRelationFilter";
import { AvailabilitySlotListRelationFilter } from "../../availabilitySlot/base/AvailabilitySlotListRelationFilter";
import { CandidateListRelationFilter } from "../../candidate/base/CandidateListRelationFilter";
import { CandidateCriterionRatingListRelationFilter } from "../../candidateCriterionRating/base/CandidateCriterionRatingListRelationFilter";
import { CandidateDocumentListRelationFilter } from "../../candidateDocument/base/CandidateDocumentListRelationFilter";
import { CandidateEducationListRelationFilter } from "../../candidateEducation/base/CandidateEducationListRelationFilter";
import { CandidateExperienceListRelationFilter } from "../../candidateExperience/base/CandidateExperienceListRelationFilter";
import { CandidateFeedbackListRelationFilter } from "../../candidateFeedback/base/CandidateFeedbackListRelationFilter";
import { CandidateInterviewListRelationFilter } from "../../candidateInterview/base/CandidateInterviewListRelationFilter";
import { CandidateInterviewerListRelationFilter } from "../../candidateInterviewer/base/CandidateInterviewerListRelationFilter";
import { CandidatePersonalQualityListRelationFilter } from "../../candidatePersonalQuality/base/CandidatePersonalQualityListRelationFilter";
import { CandidateSkillListRelationFilter } from "../../candidateSkill/base/CandidateSkillListRelationFilter";
import { CandidateSourceListRelationFilter } from "../../candidateSource/base/CandidateSourceListRelationFilter";
import { CandidateTechnologyListRelationFilter } from "../../candidateTechnology/base/CandidateTechnologyListRelationFilter";
import { ChangelogListRelationFilter } from "../../changelog/base/ChangelogListRelationFilter";
import { ContactListRelationFilter } from "../../contact/base/ContactListRelationFilter";
import { CustomSmtpListRelationFilter } from "../../customSmtp/base/CustomSmtpListRelationFilter";
import { DealListRelationFilter } from "../../deal/base/DealListRelationFilter";
import { EmailResetListRelationFilter } from "../../emailReset/base/EmailResetListRelationFilter";
import { EmailSentListRelationFilter } from "../../emailSent/base/EmailSentListRelationFilter";
import { EmailTemplateListRelationFilter } from "../../emailTemplate/base/EmailTemplateListRelationFilter";
import { EmployeeListRelationFilter } from "../../employee/base/EmployeeListRelationFilter";
import { EmployeeAppointmentListRelationFilter } from "../../employeeAppointment/base/EmployeeAppointmentListRelationFilter";
import { EmployeeAwardListRelationFilter } from "../../employeeAward/base/EmployeeAwardListRelationFilter";
import { EmployeeLevelListRelationFilter } from "../../employeeLevel/base/EmployeeLevelListRelationFilter";
import { EmployeePhoneListRelationFilter } from "../../employeePhone/base/EmployeePhoneListRelationFilter";
import { EmployeeProposalTemplateListRelationFilter } from "../../employeeProposalTemplate/base/EmployeeProposalTemplateListRelationFilter";
import { EmployeeRecurringExpenseListRelationFilter } from "../../employeeRecurringExpense/base/EmployeeRecurringExpenseListRelationFilter";
import { EmployeeSettingListRelationFilter } from "../../employeeSetting/base/EmployeeSettingListRelationFilter";
import { EmployeeUpworkJobSearchCriterionListRelationFilter } from "../../employeeUpworkJobSearchCriterion/base/EmployeeUpworkJobSearchCriterionListRelationFilter";
import { EquipmentListRelationFilter } from "../../equipment/base/EquipmentListRelationFilter";
import { EquipmentSharingListRelationFilter } from "../../equipmentSharing/base/EquipmentSharingListRelationFilter";
import { EquipmentSharingPolicyListRelationFilter } from "../../equipmentSharingPolicy/base/EquipmentSharingPolicyListRelationFilter";
import { EstimateEmailListRelationFilter } from "../../estimateEmail/base/EstimateEmailListRelationFilter";
import { EventTypeListRelationFilter } from "../../eventType/base/EventTypeListRelationFilter";
import { ExpenseListRelationFilter } from "../../expense/base/ExpenseListRelationFilter";
import { ExpenseCategoryListRelationFilter } from "../../expenseCategory/base/ExpenseCategoryListRelationFilter";
import { FeatureOrganizationListRelationFilter } from "../../featureOrganization/base/FeatureOrganizationListRelationFilter";
import { GoalListRelationFilter } from "../../goal/base/GoalListRelationFilter";
import { GoalGeneralSettingListRelationFilter } from "../../goalGeneralSetting/base/GoalGeneralSettingListRelationFilter";
import { GoalKpiListRelationFilter } from "../../goalKpi/base/GoalKpiListRelationFilter";
import { GoalKpiTemplateListRelationFilter } from "../../goalKpiTemplate/base/GoalKpiTemplateListRelationFilter";
import { GoalTemplateListRelationFilter } from "../../goalTemplate/base/GoalTemplateListRelationFilter";
import { GoalTimeFrameListRelationFilter } from "../../goalTimeFrame/base/GoalTimeFrameListRelationFilter";
import { ImageAssetListRelationFilter } from "../../imageAsset/base/ImageAssetListRelationFilter";
import { ImageAssetWhereUniqueInput } from "../../imageAsset/base/ImageAssetWhereUniqueInput";
import { ImportHistoryListRelationFilter } from "../../importHistory/base/ImportHistoryListRelationFilter";
import { ImportRecordListRelationFilter } from "../../importRecord/base/ImportRecordListRelationFilter";
import { IncomeListRelationFilter } from "../../income/base/IncomeListRelationFilter";
import { IntegrationEntitySettingListRelationFilter } from "../../integrationEntitySetting/base/IntegrationEntitySettingListRelationFilter";
import { IntegrationEntitySettingTiedListRelationFilter } from "../../integrationEntitySettingTied/base/IntegrationEntitySettingTiedListRelationFilter";
import { IntegrationMapListRelationFilter } from "../../integrationMap/base/IntegrationMapListRelationFilter";
import { IntegrationSettingListRelationFilter } from "../../integrationSetting/base/IntegrationSettingListRelationFilter";
import { IntegrationTenantListRelationFilter } from "../../integrationTenant/base/IntegrationTenantListRelationFilter";
import { InviteListRelationFilter } from "../../invite/base/InviteListRelationFilter";
import { InvoiceListRelationFilter } from "../../invoice/base/InvoiceListRelationFilter";
import { InvoiceEstimateHistoryListRelationFilter } from "../../invoiceEstimateHistory/base/InvoiceEstimateHistoryListRelationFilter";
import { InvoiceItemListRelationFilter } from "../../invoiceItem/base/InvoiceItemListRelationFilter";
import { IssueTypeListRelationFilter } from "../../issueType/base/IssueTypeListRelationFilter";
import { JobPresetListRelationFilter } from "../../jobPreset/base/JobPresetListRelationFilter";
import { JobPresetUpworkJobSearchCriterionListRelationFilter } from "../../jobPresetUpworkJobSearchCriterion/base/JobPresetUpworkJobSearchCriterionListRelationFilter";
import { JobSearchCategoryListRelationFilter } from "../../jobSearchCategory/base/JobSearchCategoryListRelationFilter";
import { JobSearchOccupationListRelationFilter } from "../../jobSearchOccupation/base/JobSearchOccupationListRelationFilter";
import { KeyResultListRelationFilter } from "../../keyResult/base/KeyResultListRelationFilter";
import { KeyResultTemplateListRelationFilter } from "../../keyResultTemplate/base/KeyResultTemplateListRelationFilter";
import { KeyResultUpdateListRelationFilter } from "../../keyResultUpdate/base/KeyResultUpdateListRelationFilter";
import { KnowledgeBaseListRelationFilter } from "../../knowledgeBase/base/KnowledgeBaseListRelationFilter";
import { KnowledgeBaseArticleListRelationFilter } from "../../knowledgeBaseArticle/base/KnowledgeBaseArticleListRelationFilter";
import { KnowledgeBaseAuthorListRelationFilter } from "../../knowledgeBaseAuthor/base/KnowledgeBaseAuthorListRelationFilter";
import { MerchantListRelationFilter } from "../../merchant/base/MerchantListRelationFilter";
import { OrganizationListRelationFilter } from "../../organization/base/OrganizationListRelationFilter";
import { OrganizationAwardListRelationFilter } from "../../organizationAward/base/OrganizationAwardListRelationFilter";
import { OrganizationContactListRelationFilter } from "../../organizationContact/base/OrganizationContactListRelationFilter";
import { OrganizationDepartmentListRelationFilter } from "../../organizationDepartment/base/OrganizationDepartmentListRelationFilter";
import { OrganizationDocumentListRelationFilter } from "../../organizationDocument/base/OrganizationDocumentListRelationFilter";
import { OrganizationEmploymentTypeListRelationFilter } from "../../organizationEmploymentType/base/OrganizationEmploymentTypeListRelationFilter";
import { OrganizationLanguageListRelationFilter } from "../../organizationLanguage/base/OrganizationLanguageListRelationFilter";
import { OrganizationPositionListRelationFilter } from "../../organizationPosition/base/OrganizationPositionListRelationFilter";
import { OrganizationProjectListRelationFilter } from "../../organizationProject/base/OrganizationProjectListRelationFilter";
import { OrganizationRecurringExpenseListRelationFilter } from "../../organizationRecurringExpense/base/OrganizationRecurringExpenseListRelationFilter";
import { OrganizationSprintListRelationFilter } from "../../organizationSprint/base/OrganizationSprintListRelationFilter";
import { OrganizationTaskSettingListRelationFilter } from "../../organizationTaskSetting/base/OrganizationTaskSettingListRelationFilter";
import { OrganizationTeamListRelationFilter } from "../../organizationTeam/base/OrganizationTeamListRelationFilter";
import { OrganizationTeamEmployeeListRelationFilter } from "../../organizationTeamEmployee/base/OrganizationTeamEmployeeListRelationFilter";
import { OrganizationTeamJoinRequestListRelationFilter } from "../../organizationTeamJoinRequest/base/OrganizationTeamJoinRequestListRelationFilter";
import { OrganizationVendorListRelationFilter } from "../../organizationVendor/base/OrganizationVendorListRelationFilter";
import { PaymentListRelationFilter } from "../../payment/base/PaymentListRelationFilter";
import { PipelineListRelationFilter } from "../../pipeline/base/PipelineListRelationFilter";
import { PipelineStageListRelationFilter } from "../../pipelineStage/base/PipelineStageListRelationFilter";
import { ProductListRelationFilter } from "../../product/base/ProductListRelationFilter";
import { ProductCategoryListRelationFilter } from "../../productCategory/base/ProductCategoryListRelationFilter";
import { ProductCategoryTranslationListRelationFilter } from "../../productCategoryTranslation/base/ProductCategoryTranslationListRelationFilter";
import { ProductOptionListRelationFilter } from "../../productOption/base/ProductOptionListRelationFilter";
import { ProductOptionGroupListRelationFilter } from "../../productOptionGroup/base/ProductOptionGroupListRelationFilter";
import { ProductOptionGroupTranslationListRelationFilter } from "../../productOptionGroupTranslation/base/ProductOptionGroupTranslationListRelationFilter";
import { ProductOptionTranslationListRelationFilter } from "../../productOptionTranslation/base/ProductOptionTranslationListRelationFilter";
import { ProductTranslationListRelationFilter } from "../../productTranslation/base/ProductTranslationListRelationFilter";
import { ProductTypeListRelationFilter } from "../../productType/base/ProductTypeListRelationFilter";
import { ProductTypeTranslationListRelationFilter } from "../../productTypeTranslation/base/ProductTypeTranslationListRelationFilter";
import { ProductVariantListRelationFilter } from "../../productVariant/base/ProductVariantListRelationFilter";
import { ProductVariantPriceListRelationFilter } from "../../productVariantPrice/base/ProductVariantPriceListRelationFilter";
import { ProductVariantSettingListRelationFilter } from "../../productVariantSetting/base/ProductVariantSettingListRelationFilter";
import { ProposalListRelationFilter } from "../../proposal/base/ProposalListRelationFilter";
import { ReportOrganizationListRelationFilter } from "../../reportOrganization/base/ReportOrganizationListRelationFilter";
import { RequestApprovalListRelationFilter } from "../../requestApproval/base/RequestApprovalListRelationFilter";
import { RequestApprovalEmployeeListRelationFilter } from "../../requestApprovalEmployee/base/RequestApprovalEmployeeListRelationFilter";
import { RequestApprovalTeamListRelationFilter } from "../../requestApprovalTeam/base/RequestApprovalTeamListRelationFilter";
import { RoleListRelationFilter } from "../../role/base/RoleListRelationFilter";
import { RolePermissionListRelationFilter } from "../../rolePermission/base/RolePermissionListRelationFilter";
import { ScreenshotListRelationFilter } from "../../screenshot/base/ScreenshotListRelationFilter";
import { SkillListRelationFilter } from "../../skill/base/SkillListRelationFilter";
import { TagListRelationFilter } from "../../tag/base/TagListRelationFilter";
import { TaskListRelationFilter } from "../../task/base/TaskListRelationFilter";
import { TaskLinkedIssueListRelationFilter } from "../../taskLinkedIssue/base/TaskLinkedIssueListRelationFilter";
import { TaskPriorityListRelationFilter } from "../../taskPriority/base/TaskPriorityListRelationFilter";
import { TaskRelatedIssueTypeListRelationFilter } from "../../taskRelatedIssueType/base/TaskRelatedIssueTypeListRelationFilter";
import { TaskSizeListRelationFilter } from "../../taskSize/base/TaskSizeListRelationFilter";
import { TaskStatusListRelationFilter } from "../../taskStatus/base/TaskStatusListRelationFilter";
import { TaskVersionListRelationFilter } from "../../taskVersion/base/TaskVersionListRelationFilter";
import { TenantSettingListRelationFilter } from "../../tenantSetting/base/TenantSettingListRelationFilter";
import { TimeLogListRelationFilter } from "../../timeLog/base/TimeLogListRelationFilter";
import { TimeOffPolicyListRelationFilter } from "../../timeOffPolicy/base/TimeOffPolicyListRelationFilter";
import { TimeOffRequestListRelationFilter } from "../../timeOffRequest/base/TimeOffRequestListRelationFilter";
import { TimeSlotListRelationFilter } from "../../timeSlot/base/TimeSlotListRelationFilter";
import { TimeSlotMinuteListRelationFilter } from "../../timeSlotMinute/base/TimeSlotMinuteListRelationFilter";
import { TimesheetListRelationFilter } from "../../timesheet/base/TimesheetListRelationFilter";
import { UserListRelationFilter } from "../../user/base/UserListRelationFilter";
import { UserOrganizationListRelationFilter } from "../../userOrganization/base/UserOrganizationListRelationFilter";
import { WarehouseListRelationFilter } from "../../warehouse/base/WarehouseListRelationFilter";
import { WarehouseProductListRelationFilter } from "../../warehouseProduct/base/WarehouseProductListRelationFilter";
import { WarehouseProductVariantListRelationFilter } from "../../warehouseProductVariant/base/WarehouseProductVariantListRelationFilter";

@InputType()
class TenantWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  createdAt?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  updatedAt?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  name?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  logo?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => AccountingTemplateListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AccountingTemplateListRelationFilter)
  @IsOptional()
  @Field(() => AccountingTemplateListRelationFilter, {
    nullable: true,
  })
  accountingTemplate?: AccountingTemplateListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ActivityListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ActivityListRelationFilter)
  @IsOptional()
  @Field(() => ActivityListRelationFilter, {
    nullable: true,
  })
  activity?: ActivityListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => AppointmentEmployeeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AppointmentEmployeeListRelationFilter)
  @IsOptional()
  @Field(() => AppointmentEmployeeListRelationFilter, {
    nullable: true,
  })
  appointmentEmployee?: AppointmentEmployeeListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ApprovalPolicyListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ApprovalPolicyListRelationFilter)
  @IsOptional()
  @Field(() => ApprovalPolicyListRelationFilter, {
    nullable: true,
  })
  approvalPolicy?: ApprovalPolicyListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => AvailabilitySlotListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AvailabilitySlotListRelationFilter)
  @IsOptional()
  @Field(() => AvailabilitySlotListRelationFilter, {
    nullable: true,
  })
  availabilitySlot?: AvailabilitySlotListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CandidateListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CandidateListRelationFilter)
  @IsOptional()
  @Field(() => CandidateListRelationFilter, {
    nullable: true,
  })
  candidate?: CandidateListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CandidateCriterionRatingListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CandidateCriterionRatingListRelationFilter)
  @IsOptional()
  @Field(() => CandidateCriterionRatingListRelationFilter, {
    nullable: true,
  })
  candidateCriterionRating?: CandidateCriterionRatingListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CandidateDocumentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CandidateDocumentListRelationFilter)
  @IsOptional()
  @Field(() => CandidateDocumentListRelationFilter, {
    nullable: true,
  })
  candidateDocument?: CandidateDocumentListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CandidateEducationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CandidateEducationListRelationFilter)
  @IsOptional()
  @Field(() => CandidateEducationListRelationFilter, {
    nullable: true,
  })
  candidateEducation?: CandidateEducationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CandidateExperienceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CandidateExperienceListRelationFilter)
  @IsOptional()
  @Field(() => CandidateExperienceListRelationFilter, {
    nullable: true,
  })
  candidateExperience?: CandidateExperienceListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CandidateFeedbackListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CandidateFeedbackListRelationFilter)
  @IsOptional()
  @Field(() => CandidateFeedbackListRelationFilter, {
    nullable: true,
  })
  candidateFeedback?: CandidateFeedbackListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CandidateInterviewListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CandidateInterviewListRelationFilter)
  @IsOptional()
  @Field(() => CandidateInterviewListRelationFilter, {
    nullable: true,
  })
  candidateInterview?: CandidateInterviewListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CandidateInterviewerListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CandidateInterviewerListRelationFilter)
  @IsOptional()
  @Field(() => CandidateInterviewerListRelationFilter, {
    nullable: true,
  })
  candidateInterviewer?: CandidateInterviewerListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CandidatePersonalQualityListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CandidatePersonalQualityListRelationFilter)
  @IsOptional()
  @Field(() => CandidatePersonalQualityListRelationFilter, {
    nullable: true,
  })
  candidatePersonalQuality?: CandidatePersonalQualityListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CandidateSkillListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CandidateSkillListRelationFilter)
  @IsOptional()
  @Field(() => CandidateSkillListRelationFilter, {
    nullable: true,
  })
  candidateSkill?: CandidateSkillListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CandidateSourceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CandidateSourceListRelationFilter)
  @IsOptional()
  @Field(() => CandidateSourceListRelationFilter, {
    nullable: true,
  })
  candidateSource?: CandidateSourceListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CandidateTechnologyListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CandidateTechnologyListRelationFilter)
  @IsOptional()
  @Field(() => CandidateTechnologyListRelationFilter, {
    nullable: true,
  })
  candidateTechnology?: CandidateTechnologyListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ChangelogListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ChangelogListRelationFilter)
  @IsOptional()
  @Field(() => ChangelogListRelationFilter, {
    nullable: true,
  })
  changelog?: ChangelogListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ContactListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ContactListRelationFilter)
  @IsOptional()
  @Field(() => ContactListRelationFilter, {
    nullable: true,
  })
  contact?: ContactListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CustomSmtpListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CustomSmtpListRelationFilter)
  @IsOptional()
  @Field(() => CustomSmtpListRelationFilter, {
    nullable: true,
  })
  customSmtp?: CustomSmtpListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => DealListRelationFilter,
  })
  @ValidateNested()
  @Type(() => DealListRelationFilter)
  @IsOptional()
  @Field(() => DealListRelationFilter, {
    nullable: true,
  })
  deal?: DealListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => EmailResetListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EmailResetListRelationFilter)
  @IsOptional()
  @Field(() => EmailResetListRelationFilter, {
    nullable: true,
  })
  emailReset?: EmailResetListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => EmailSentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EmailSentListRelationFilter)
  @IsOptional()
  @Field(() => EmailSentListRelationFilter, {
    nullable: true,
  })
  emailSent?: EmailSentListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => EmailTemplateListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EmailTemplateListRelationFilter)
  @IsOptional()
  @Field(() => EmailTemplateListRelationFilter, {
    nullable: true,
  })
  emailTemplate?: EmailTemplateListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => EmployeeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EmployeeListRelationFilter)
  @IsOptional()
  @Field(() => EmployeeListRelationFilter, {
    nullable: true,
  })
  employee?: EmployeeListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => EmployeeAppointmentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EmployeeAppointmentListRelationFilter)
  @IsOptional()
  @Field(() => EmployeeAppointmentListRelationFilter, {
    nullable: true,
  })
  employeeAppointment?: EmployeeAppointmentListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => EmployeeAwardListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EmployeeAwardListRelationFilter)
  @IsOptional()
  @Field(() => EmployeeAwardListRelationFilter, {
    nullable: true,
  })
  employeeAward?: EmployeeAwardListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => EmployeeLevelListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EmployeeLevelListRelationFilter)
  @IsOptional()
  @Field(() => EmployeeLevelListRelationFilter, {
    nullable: true,
  })
  employeeLevel?: EmployeeLevelListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => EmployeePhoneListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EmployeePhoneListRelationFilter)
  @IsOptional()
  @Field(() => EmployeePhoneListRelationFilter, {
    nullable: true,
  })
  employeePhone?: EmployeePhoneListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => EmployeeProposalTemplateListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EmployeeProposalTemplateListRelationFilter)
  @IsOptional()
  @Field(() => EmployeeProposalTemplateListRelationFilter, {
    nullable: true,
  })
  employeeProposalTemplate?: EmployeeProposalTemplateListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => EmployeeRecurringExpenseListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EmployeeRecurringExpenseListRelationFilter)
  @IsOptional()
  @Field(() => EmployeeRecurringExpenseListRelationFilter, {
    nullable: true,
  })
  employeeRecurringExpense?: EmployeeRecurringExpenseListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => EmployeeSettingListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EmployeeSettingListRelationFilter)
  @IsOptional()
  @Field(() => EmployeeSettingListRelationFilter, {
    nullable: true,
  })
  employeeSetting?: EmployeeSettingListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => EmployeeUpworkJobSearchCriterionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EmployeeUpworkJobSearchCriterionListRelationFilter)
  @IsOptional()
  @Field(() => EmployeeUpworkJobSearchCriterionListRelationFilter, {
    nullable: true,
  })
  employeeUpworkJobSearchCriterion?: EmployeeUpworkJobSearchCriterionListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => EquipmentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EquipmentListRelationFilter)
  @IsOptional()
  @Field(() => EquipmentListRelationFilter, {
    nullable: true,
  })
  equipment?: EquipmentListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => EquipmentSharingListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EquipmentSharingListRelationFilter)
  @IsOptional()
  @Field(() => EquipmentSharingListRelationFilter, {
    nullable: true,
  })
  equipmentSharing?: EquipmentSharingListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => EquipmentSharingPolicyListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EquipmentSharingPolicyListRelationFilter)
  @IsOptional()
  @Field(() => EquipmentSharingPolicyListRelationFilter, {
    nullable: true,
  })
  equipmentSharingPolicy?: EquipmentSharingPolicyListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => EstimateEmailListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EstimateEmailListRelationFilter)
  @IsOptional()
  @Field(() => EstimateEmailListRelationFilter, {
    nullable: true,
  })
  estimateEmail?: EstimateEmailListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => EventTypeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EventTypeListRelationFilter)
  @IsOptional()
  @Field(() => EventTypeListRelationFilter, {
    nullable: true,
  })
  eventType?: EventTypeListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ExpenseListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ExpenseListRelationFilter)
  @IsOptional()
  @Field(() => ExpenseListRelationFilter, {
    nullable: true,
  })
  expense?: ExpenseListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ExpenseCategoryListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ExpenseCategoryListRelationFilter)
  @IsOptional()
  @Field(() => ExpenseCategoryListRelationFilter, {
    nullable: true,
  })
  expenseCategory?: ExpenseCategoryListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => FeatureOrganizationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => FeatureOrganizationListRelationFilter)
  @IsOptional()
  @Field(() => FeatureOrganizationListRelationFilter, {
    nullable: true,
  })
  featureOrganization?: FeatureOrganizationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => GoalListRelationFilter,
  })
  @ValidateNested()
  @Type(() => GoalListRelationFilter)
  @IsOptional()
  @Field(() => GoalListRelationFilter, {
    nullable: true,
  })
  goal?: GoalListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => GoalGeneralSettingListRelationFilter,
  })
  @ValidateNested()
  @Type(() => GoalGeneralSettingListRelationFilter)
  @IsOptional()
  @Field(() => GoalGeneralSettingListRelationFilter, {
    nullable: true,
  })
  goalGeneralSetting?: GoalGeneralSettingListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => GoalKpiListRelationFilter,
  })
  @ValidateNested()
  @Type(() => GoalKpiListRelationFilter)
  @IsOptional()
  @Field(() => GoalKpiListRelationFilter, {
    nullable: true,
  })
  goalKpi?: GoalKpiListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => GoalKpiTemplateListRelationFilter,
  })
  @ValidateNested()
  @Type(() => GoalKpiTemplateListRelationFilter)
  @IsOptional()
  @Field(() => GoalKpiTemplateListRelationFilter, {
    nullable: true,
  })
  goalKpiTemplate?: GoalKpiTemplateListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => GoalTemplateListRelationFilter,
  })
  @ValidateNested()
  @Type(() => GoalTemplateListRelationFilter)
  @IsOptional()
  @Field(() => GoalTemplateListRelationFilter, {
    nullable: true,
  })
  goalTemplate?: GoalTemplateListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => GoalTimeFrameListRelationFilter,
  })
  @ValidateNested()
  @Type(() => GoalTimeFrameListRelationFilter)
  @IsOptional()
  @Field(() => GoalTimeFrameListRelationFilter, {
    nullable: true,
  })
  goalTimeFrame?: GoalTimeFrameListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ImageAssetListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ImageAssetListRelationFilter)
  @IsOptional()
  @Field(() => ImageAssetListRelationFilter, {
    nullable: true,
  })
  imageAssetImageAssetTenantIdTotenant?: ImageAssetListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ImageAssetWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ImageAssetWhereUniqueInput)
  @IsOptional()
  @Field(() => ImageAssetWhereUniqueInput, {
    nullable: true,
  })
  imageAssetTenantImageIdToimageAsset?: ImageAssetWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => ImportHistoryListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ImportHistoryListRelationFilter)
  @IsOptional()
  @Field(() => ImportHistoryListRelationFilter, {
    nullable: true,
  })
  importHistory?: ImportHistoryListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ImportRecordListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ImportRecordListRelationFilter)
  @IsOptional()
  @Field(() => ImportRecordListRelationFilter, {
    nullable: true,
  })
  importRecord?: ImportRecordListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => IncomeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => IncomeListRelationFilter)
  @IsOptional()
  @Field(() => IncomeListRelationFilter, {
    nullable: true,
  })
  income?: IncomeListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => IntegrationEntitySettingListRelationFilter,
  })
  @ValidateNested()
  @Type(() => IntegrationEntitySettingListRelationFilter)
  @IsOptional()
  @Field(() => IntegrationEntitySettingListRelationFilter, {
    nullable: true,
  })
  integrationEntitySetting?: IntegrationEntitySettingListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => IntegrationEntitySettingTiedListRelationFilter,
  })
  @ValidateNested()
  @Type(() => IntegrationEntitySettingTiedListRelationFilter)
  @IsOptional()
  @Field(() => IntegrationEntitySettingTiedListRelationFilter, {
    nullable: true,
  })
  integrationEntitySettingTied?: IntegrationEntitySettingTiedListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => IntegrationMapListRelationFilter,
  })
  @ValidateNested()
  @Type(() => IntegrationMapListRelationFilter)
  @IsOptional()
  @Field(() => IntegrationMapListRelationFilter, {
    nullable: true,
  })
  integrationMap?: IntegrationMapListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => IntegrationSettingListRelationFilter,
  })
  @ValidateNested()
  @Type(() => IntegrationSettingListRelationFilter)
  @IsOptional()
  @Field(() => IntegrationSettingListRelationFilter, {
    nullable: true,
  })
  integrationSetting?: IntegrationSettingListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => IntegrationTenantListRelationFilter,
  })
  @ValidateNested()
  @Type(() => IntegrationTenantListRelationFilter)
  @IsOptional()
  @Field(() => IntegrationTenantListRelationFilter, {
    nullable: true,
  })
  integrationTenant?: IntegrationTenantListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => InviteListRelationFilter,
  })
  @ValidateNested()
  @Type(() => InviteListRelationFilter)
  @IsOptional()
  @Field(() => InviteListRelationFilter, {
    nullable: true,
  })
  invite?: InviteListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => InvoiceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => InvoiceListRelationFilter)
  @IsOptional()
  @Field(() => InvoiceListRelationFilter, {
    nullable: true,
  })
  invoice?: InvoiceListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => InvoiceEstimateHistoryListRelationFilter,
  })
  @ValidateNested()
  @Type(() => InvoiceEstimateHistoryListRelationFilter)
  @IsOptional()
  @Field(() => InvoiceEstimateHistoryListRelationFilter, {
    nullable: true,
  })
  invoiceEstimateHistory?: InvoiceEstimateHistoryListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => InvoiceItemListRelationFilter,
  })
  @ValidateNested()
  @Type(() => InvoiceItemListRelationFilter)
  @IsOptional()
  @Field(() => InvoiceItemListRelationFilter, {
    nullable: true,
  })
  invoiceItem?: InvoiceItemListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => IssueTypeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => IssueTypeListRelationFilter)
  @IsOptional()
  @Field(() => IssueTypeListRelationFilter, {
    nullable: true,
  })
  issueType?: IssueTypeListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => JobPresetListRelationFilter,
  })
  @ValidateNested()
  @Type(() => JobPresetListRelationFilter)
  @IsOptional()
  @Field(() => JobPresetListRelationFilter, {
    nullable: true,
  })
  jobPreset?: JobPresetListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => JobPresetUpworkJobSearchCriterionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => JobPresetUpworkJobSearchCriterionListRelationFilter)
  @IsOptional()
  @Field(() => JobPresetUpworkJobSearchCriterionListRelationFilter, {
    nullable: true,
  })
  jobPresetUpworkJobSearchCriterion?: JobPresetUpworkJobSearchCriterionListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => JobSearchCategoryListRelationFilter,
  })
  @ValidateNested()
  @Type(() => JobSearchCategoryListRelationFilter)
  @IsOptional()
  @Field(() => JobSearchCategoryListRelationFilter, {
    nullable: true,
  })
  jobSearchCategory?: JobSearchCategoryListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => JobSearchOccupationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => JobSearchOccupationListRelationFilter)
  @IsOptional()
  @Field(() => JobSearchOccupationListRelationFilter, {
    nullable: true,
  })
  jobSearchOccupation?: JobSearchOccupationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => KeyResultListRelationFilter,
  })
  @ValidateNested()
  @Type(() => KeyResultListRelationFilter)
  @IsOptional()
  @Field(() => KeyResultListRelationFilter, {
    nullable: true,
  })
  keyResult?: KeyResultListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => KeyResultTemplateListRelationFilter,
  })
  @ValidateNested()
  @Type(() => KeyResultTemplateListRelationFilter)
  @IsOptional()
  @Field(() => KeyResultTemplateListRelationFilter, {
    nullable: true,
  })
  keyResultTemplate?: KeyResultTemplateListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => KeyResultUpdateListRelationFilter,
  })
  @ValidateNested()
  @Type(() => KeyResultUpdateListRelationFilter)
  @IsOptional()
  @Field(() => KeyResultUpdateListRelationFilter, {
    nullable: true,
  })
  keyResultUpdate?: KeyResultUpdateListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => KnowledgeBaseListRelationFilter,
  })
  @ValidateNested()
  @Type(() => KnowledgeBaseListRelationFilter)
  @IsOptional()
  @Field(() => KnowledgeBaseListRelationFilter, {
    nullable: true,
  })
  knowledgeBase?: KnowledgeBaseListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => KnowledgeBaseArticleListRelationFilter,
  })
  @ValidateNested()
  @Type(() => KnowledgeBaseArticleListRelationFilter)
  @IsOptional()
  @Field(() => KnowledgeBaseArticleListRelationFilter, {
    nullable: true,
  })
  knowledgeBaseArticle?: KnowledgeBaseArticleListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => KnowledgeBaseAuthorListRelationFilter,
  })
  @ValidateNested()
  @Type(() => KnowledgeBaseAuthorListRelationFilter)
  @IsOptional()
  @Field(() => KnowledgeBaseAuthorListRelationFilter, {
    nullable: true,
  })
  knowledgeBaseAuthor?: KnowledgeBaseAuthorListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => MerchantListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MerchantListRelationFilter)
  @IsOptional()
  @Field(() => MerchantListRelationFilter, {
    nullable: true,
  })
  merchant?: MerchantListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => OrganizationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => OrganizationListRelationFilter)
  @IsOptional()
  @Field(() => OrganizationListRelationFilter, {
    nullable: true,
  })
  organization?: OrganizationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => OrganizationAwardListRelationFilter,
  })
  @ValidateNested()
  @Type(() => OrganizationAwardListRelationFilter)
  @IsOptional()
  @Field(() => OrganizationAwardListRelationFilter, {
    nullable: true,
  })
  organizationAward?: OrganizationAwardListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => OrganizationContactListRelationFilter,
  })
  @ValidateNested()
  @Type(() => OrganizationContactListRelationFilter)
  @IsOptional()
  @Field(() => OrganizationContactListRelationFilter, {
    nullable: true,
  })
  organizationContact?: OrganizationContactListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => OrganizationDepartmentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => OrganizationDepartmentListRelationFilter)
  @IsOptional()
  @Field(() => OrganizationDepartmentListRelationFilter, {
    nullable: true,
  })
  organizationDepartment?: OrganizationDepartmentListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => OrganizationDocumentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => OrganizationDocumentListRelationFilter)
  @IsOptional()
  @Field(() => OrganizationDocumentListRelationFilter, {
    nullable: true,
  })
  organizationDocument?: OrganizationDocumentListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => OrganizationEmploymentTypeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => OrganizationEmploymentTypeListRelationFilter)
  @IsOptional()
  @Field(() => OrganizationEmploymentTypeListRelationFilter, {
    nullable: true,
  })
  organizationEmploymentType?: OrganizationEmploymentTypeListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => OrganizationLanguageListRelationFilter,
  })
  @ValidateNested()
  @Type(() => OrganizationLanguageListRelationFilter)
  @IsOptional()
  @Field(() => OrganizationLanguageListRelationFilter, {
    nullable: true,
  })
  organizationLanguage?: OrganizationLanguageListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => OrganizationPositionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => OrganizationPositionListRelationFilter)
  @IsOptional()
  @Field(() => OrganizationPositionListRelationFilter, {
    nullable: true,
  })
  organizationPosition?: OrganizationPositionListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => OrganizationProjectListRelationFilter,
  })
  @ValidateNested()
  @Type(() => OrganizationProjectListRelationFilter)
  @IsOptional()
  @Field(() => OrganizationProjectListRelationFilter, {
    nullable: true,
  })
  organizationProject?: OrganizationProjectListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => OrganizationRecurringExpenseListRelationFilter,
  })
  @ValidateNested()
  @Type(() => OrganizationRecurringExpenseListRelationFilter)
  @IsOptional()
  @Field(() => OrganizationRecurringExpenseListRelationFilter, {
    nullable: true,
  })
  organizationRecurringExpense?: OrganizationRecurringExpenseListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => OrganizationSprintListRelationFilter,
  })
  @ValidateNested()
  @Type(() => OrganizationSprintListRelationFilter)
  @IsOptional()
  @Field(() => OrganizationSprintListRelationFilter, {
    nullable: true,
  })
  organizationSprint?: OrganizationSprintListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => OrganizationTaskSettingListRelationFilter,
  })
  @ValidateNested()
  @Type(() => OrganizationTaskSettingListRelationFilter)
  @IsOptional()
  @Field(() => OrganizationTaskSettingListRelationFilter, {
    nullable: true,
  })
  organizationTaskSetting?: OrganizationTaskSettingListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => OrganizationTeamListRelationFilter,
  })
  @ValidateNested()
  @Type(() => OrganizationTeamListRelationFilter)
  @IsOptional()
  @Field(() => OrganizationTeamListRelationFilter, {
    nullable: true,
  })
  organizationTeam?: OrganizationTeamListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => OrganizationTeamEmployeeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => OrganizationTeamEmployeeListRelationFilter)
  @IsOptional()
  @Field(() => OrganizationTeamEmployeeListRelationFilter, {
    nullable: true,
  })
  organizationTeamEmployee?: OrganizationTeamEmployeeListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => OrganizationTeamJoinRequestListRelationFilter,
  })
  @ValidateNested()
  @Type(() => OrganizationTeamJoinRequestListRelationFilter)
  @IsOptional()
  @Field(() => OrganizationTeamJoinRequestListRelationFilter, {
    nullable: true,
  })
  organizationTeamJoinRequest?: OrganizationTeamJoinRequestListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => OrganizationVendorListRelationFilter,
  })
  @ValidateNested()
  @Type(() => OrganizationVendorListRelationFilter)
  @IsOptional()
  @Field(() => OrganizationVendorListRelationFilter, {
    nullable: true,
  })
  organizationVendor?: OrganizationVendorListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PaymentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PaymentListRelationFilter)
  @IsOptional()
  @Field(() => PaymentListRelationFilter, {
    nullable: true,
  })
  payment?: PaymentListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PipelineListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PipelineListRelationFilter)
  @IsOptional()
  @Field(() => PipelineListRelationFilter, {
    nullable: true,
  })
  pipeline?: PipelineListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PipelineStageListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PipelineStageListRelationFilter)
  @IsOptional()
  @Field(() => PipelineStageListRelationFilter, {
    nullable: true,
  })
  pipelineStage?: PipelineStageListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ProductListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProductListRelationFilter)
  @IsOptional()
  @Field(() => ProductListRelationFilter, {
    nullable: true,
  })
  product?: ProductListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ProductCategoryListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProductCategoryListRelationFilter)
  @IsOptional()
  @Field(() => ProductCategoryListRelationFilter, {
    nullable: true,
  })
  productCategory?: ProductCategoryListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ProductCategoryTranslationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProductCategoryTranslationListRelationFilter)
  @IsOptional()
  @Field(() => ProductCategoryTranslationListRelationFilter, {
    nullable: true,
  })
  productCategoryTranslation?: ProductCategoryTranslationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ProductOptionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProductOptionListRelationFilter)
  @IsOptional()
  @Field(() => ProductOptionListRelationFilter, {
    nullable: true,
  })
  productOption?: ProductOptionListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ProductOptionGroupListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProductOptionGroupListRelationFilter)
  @IsOptional()
  @Field(() => ProductOptionGroupListRelationFilter, {
    nullable: true,
  })
  productOptionGroup?: ProductOptionGroupListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ProductOptionGroupTranslationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProductOptionGroupTranslationListRelationFilter)
  @IsOptional()
  @Field(() => ProductOptionGroupTranslationListRelationFilter, {
    nullable: true,
  })
  productOptionGroupTranslation?: ProductOptionGroupTranslationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ProductOptionTranslationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProductOptionTranslationListRelationFilter)
  @IsOptional()
  @Field(() => ProductOptionTranslationListRelationFilter, {
    nullable: true,
  })
  productOptionTranslation?: ProductOptionTranslationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ProductTranslationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProductTranslationListRelationFilter)
  @IsOptional()
  @Field(() => ProductTranslationListRelationFilter, {
    nullable: true,
  })
  productTranslation?: ProductTranslationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ProductTypeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProductTypeListRelationFilter)
  @IsOptional()
  @Field(() => ProductTypeListRelationFilter, {
    nullable: true,
  })
  productType?: ProductTypeListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ProductTypeTranslationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProductTypeTranslationListRelationFilter)
  @IsOptional()
  @Field(() => ProductTypeTranslationListRelationFilter, {
    nullable: true,
  })
  productTypeTranslation?: ProductTypeTranslationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ProductVariantListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProductVariantListRelationFilter)
  @IsOptional()
  @Field(() => ProductVariantListRelationFilter, {
    nullable: true,
  })
  productVariant?: ProductVariantListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ProductVariantPriceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProductVariantPriceListRelationFilter)
  @IsOptional()
  @Field(() => ProductVariantPriceListRelationFilter, {
    nullable: true,
  })
  productVariantPrice?: ProductVariantPriceListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ProductVariantSettingListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProductVariantSettingListRelationFilter)
  @IsOptional()
  @Field(() => ProductVariantSettingListRelationFilter, {
    nullable: true,
  })
  productVariantSetting?: ProductVariantSettingListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ProposalListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProposalListRelationFilter)
  @IsOptional()
  @Field(() => ProposalListRelationFilter, {
    nullable: true,
  })
  proposal?: ProposalListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ReportOrganizationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ReportOrganizationListRelationFilter)
  @IsOptional()
  @Field(() => ReportOrganizationListRelationFilter, {
    nullable: true,
  })
  reportOrganization?: ReportOrganizationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => RequestApprovalListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RequestApprovalListRelationFilter)
  @IsOptional()
  @Field(() => RequestApprovalListRelationFilter, {
    nullable: true,
  })
  requestApproval?: RequestApprovalListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => RequestApprovalEmployeeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RequestApprovalEmployeeListRelationFilter)
  @IsOptional()
  @Field(() => RequestApprovalEmployeeListRelationFilter, {
    nullable: true,
  })
  requestApprovalEmployee?: RequestApprovalEmployeeListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => RequestApprovalTeamListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RequestApprovalTeamListRelationFilter)
  @IsOptional()
  @Field(() => RequestApprovalTeamListRelationFilter, {
    nullable: true,
  })
  requestApprovalTeam?: RequestApprovalTeamListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => RoleListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RoleListRelationFilter)
  @IsOptional()
  @Field(() => RoleListRelationFilter, {
    nullable: true,
  })
  role?: RoleListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => RolePermissionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RolePermissionListRelationFilter)
  @IsOptional()
  @Field(() => RolePermissionListRelationFilter, {
    nullable: true,
  })
  rolePermission?: RolePermissionListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ScreenshotListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ScreenshotListRelationFilter)
  @IsOptional()
  @Field(() => ScreenshotListRelationFilter, {
    nullable: true,
  })
  screenshot?: ScreenshotListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => SkillListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SkillListRelationFilter)
  @IsOptional()
  @Field(() => SkillListRelationFilter, {
    nullable: true,
  })
  skill?: SkillListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TagListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TagListRelationFilter)
  @IsOptional()
  @Field(() => TagListRelationFilter, {
    nullable: true,
  })
  tag?: TagListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TaskListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TaskListRelationFilter)
  @IsOptional()
  @Field(() => TaskListRelationFilter, {
    nullable: true,
  })
  task?: TaskListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TaskLinkedIssueListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TaskLinkedIssueListRelationFilter)
  @IsOptional()
  @Field(() => TaskLinkedIssueListRelationFilter, {
    nullable: true,
  })
  taskLinkedIssues?: TaskLinkedIssueListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TaskPriorityListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TaskPriorityListRelationFilter)
  @IsOptional()
  @Field(() => TaskPriorityListRelationFilter, {
    nullable: true,
  })
  taskPriority?: TaskPriorityListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TaskRelatedIssueTypeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TaskRelatedIssueTypeListRelationFilter)
  @IsOptional()
  @Field(() => TaskRelatedIssueTypeListRelationFilter, {
    nullable: true,
  })
  taskRelatedIssueType?: TaskRelatedIssueTypeListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TaskSizeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TaskSizeListRelationFilter)
  @IsOptional()
  @Field(() => TaskSizeListRelationFilter, {
    nullable: true,
  })
  taskSize?: TaskSizeListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TaskStatusListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TaskStatusListRelationFilter)
  @IsOptional()
  @Field(() => TaskStatusListRelationFilter, {
    nullable: true,
  })
  taskStatus?: TaskStatusListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TaskVersionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TaskVersionListRelationFilter)
  @IsOptional()
  @Field(() => TaskVersionListRelationFilter, {
    nullable: true,
  })
  taskVersion?: TaskVersionListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TenantSettingListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TenantSettingListRelationFilter)
  @IsOptional()
  @Field(() => TenantSettingListRelationFilter, {
    nullable: true,
  })
  tenantSetting?: TenantSettingListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TimeLogListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TimeLogListRelationFilter)
  @IsOptional()
  @Field(() => TimeLogListRelationFilter, {
    nullable: true,
  })
  timeLog?: TimeLogListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TimeOffPolicyListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TimeOffPolicyListRelationFilter)
  @IsOptional()
  @Field(() => TimeOffPolicyListRelationFilter, {
    nullable: true,
  })
  timeOffPolicy?: TimeOffPolicyListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TimeOffRequestListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TimeOffRequestListRelationFilter)
  @IsOptional()
  @Field(() => TimeOffRequestListRelationFilter, {
    nullable: true,
  })
  timeOffRequest?: TimeOffRequestListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TimeSlotListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TimeSlotListRelationFilter)
  @IsOptional()
  @Field(() => TimeSlotListRelationFilter, {
    nullable: true,
  })
  timeSlot?: TimeSlotListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TimeSlotMinuteListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TimeSlotMinuteListRelationFilter)
  @IsOptional()
  @Field(() => TimeSlotMinuteListRelationFilter, {
    nullable: true,
  })
  timeSlotMinute?: TimeSlotMinuteListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TimesheetListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TimesheetListRelationFilter)
  @IsOptional()
  @Field(() => TimesheetListRelationFilter, {
    nullable: true,
  })
  timesheet?: TimesheetListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => UserListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UserListRelationFilter)
  @IsOptional()
  @Field(() => UserListRelationFilter, {
    nullable: true,
  })
  user?: UserListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => UserOrganizationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UserOrganizationListRelationFilter)
  @IsOptional()
  @Field(() => UserOrganizationListRelationFilter, {
    nullable: true,
  })
  userOrganization?: UserOrganizationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => WarehouseListRelationFilter,
  })
  @ValidateNested()
  @Type(() => WarehouseListRelationFilter)
  @IsOptional()
  @Field(() => WarehouseListRelationFilter, {
    nullable: true,
  })
  warehouse?: WarehouseListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => WarehouseProductListRelationFilter,
  })
  @ValidateNested()
  @Type(() => WarehouseProductListRelationFilter)
  @IsOptional()
  @Field(() => WarehouseProductListRelationFilter, {
    nullable: true,
  })
  warehouseProduct?: WarehouseProductListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => WarehouseProductVariantListRelationFilter,
  })
  @ValidateNested()
  @Type(() => WarehouseProductVariantListRelationFilter)
  @IsOptional()
  @Field(() => WarehouseProductVariantListRelationFilter, {
    nullable: true,
  })
  warehouseProductVariant?: WarehouseProductVariantListRelationFilter;
}

export { TenantWhereInput as TenantWhereInput };
