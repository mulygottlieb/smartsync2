/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsDate,
  IsBoolean,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";
import { OrganizationWhereUniqueInput } from "../../organization/base/OrganizationWhereUniqueInput";
import { ImageAssetWhereUniqueInput } from "../../imageAsset/base/ImageAssetWhereUniqueInput";
import { TimeOffPolicyWhereUniqueInput } from "../../timeOffPolicy/base/TimeOffPolicyWhereUniqueInput";
import { TimeOffRequestEmployeeCreateNestedManyWithoutTimeOffRequestsInput } from "./TimeOffRequestEmployeeCreateNestedManyWithoutTimeOffRequestsInput";

@InputType()
class TimeOffRequestCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  documentUrl?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  start!: Date;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  end!: Date;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  requestDate!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  status!: string;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isHoliday?: boolean | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isArchived?: boolean | null;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenant?: TenantWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => OrganizationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrganizationWhereUniqueInput)
  @IsOptional()
  @Field(() => OrganizationWhereUniqueInput, {
    nullable: true,
  })
  organization?: OrganizationWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ImageAssetWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ImageAssetWhereUniqueInput)
  @IsOptional()
  @Field(() => ImageAssetWhereUniqueInput, {
    nullable: true,
  })
  imageAsset?: ImageAssetWhereUniqueInput | null;

  @ApiProperty({
    required: true,
    type: () => TimeOffPolicyWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TimeOffPolicyWhereUniqueInput)
  @Field(() => TimeOffPolicyWhereUniqueInput)
  timeOffPolicy!: TimeOffPolicyWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () =>
      TimeOffRequestEmployeeCreateNestedManyWithoutTimeOffRequestsInput,
  })
  @ValidateNested()
  @Type(() => TimeOffRequestEmployeeCreateNestedManyWithoutTimeOffRequestsInput)
  @IsOptional()
  @Field(
    () => TimeOffRequestEmployeeCreateNestedManyWithoutTimeOffRequestsInput,
    {
      nullable: true,
    }
  )
  timeOffRequestEmployee?: TimeOffRequestEmployeeCreateNestedManyWithoutTimeOffRequestsInput;
}

export { TimeOffRequestCreateInput as TimeOffRequestCreateInput };
