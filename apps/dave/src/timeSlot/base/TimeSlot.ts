/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { TimeSlotTimeLog } from "../../timeSlotTimeLog/base/TimeSlotTimeLog";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsDate,
  IsInt,
} from "class-validator";
import { Type } from "class-transformer";
import { Employee } from "../../employee/base/Employee";
import { Organization } from "../../organization/base/Organization";
import { Tenant } from "../../tenant/base/Tenant";
import { Activity } from "../../activity/base/Activity";
import { Screenshot } from "../../screenshot/base/Screenshot";
import { TimeSlotMinute } from "../../timeSlotMinute/base/TimeSlotMinute";

@ObjectType()
class TimeSlot {
  @ApiProperty({
    required: false,
    type: () => [TimeSlotTimeLog],
  })
  @ValidateNested()
  @Type(() => TimeSlotTimeLog)
  @IsOptional()
  timeSlotTimeLogs?: Array<TimeSlotTimeLog>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  duration!: number;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  keyboard!: number;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  mouse!: number;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  overall!: number;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  startedAt!: Date;

  @ApiProperty({
    required: true,
    type: () => Employee,
  })
  @ValidateNested()
  @Type(() => Employee)
  employee?: Employee;

  @ApiProperty({
    required: false,
    type: () => Organization,
  })
  @ValidateNested()
  @Type(() => Organization)
  @IsOptional()
  organization?: Organization | null;

  @ApiProperty({
    required: false,
    type: () => Tenant,
  })
  @ValidateNested()
  @Type(() => Tenant)
  @IsOptional()
  tenant?: Tenant | null;

  @ApiProperty({
    required: false,
    type: () => [Activity],
  })
  @ValidateNested()
  @Type(() => Activity)
  @IsOptional()
  activity?: Array<Activity>;

  @ApiProperty({
    required: false,
    type: () => [Screenshot],
  })
  @ValidateNested()
  @Type(() => Screenshot)
  @IsOptional()
  screenshot?: Array<Screenshot>;

  @ApiProperty({
    required: false,
    type: () => [TimeSlotMinute],
  })
  @ValidateNested()
  @Type(() => TimeSlotMinute)
  @IsOptional()
  timeSlotMinute?: Array<TimeSlotMinute>;
}

export { TimeSlot as TimeSlot };
