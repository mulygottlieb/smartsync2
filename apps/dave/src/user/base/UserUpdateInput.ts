/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsBoolean,
  IsEnum,
  IsInt,
  IsDate,
  ValidateNested,
} from "class-validator";
import { EnumUserPreferredComponentLayout } from "./EnumUserPreferredComponentLayout";
import { Type } from "class-transformer";
import { ImageAssetWhereUniqueInput } from "../../imageAsset/base/ImageAssetWhereUniqueInput";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";
import { RoleWhereUniqueInput } from "../../role/base/RoleWhereUniqueInput";
import { CandidateWhereUniqueInput } from "../../candidate/base/CandidateWhereUniqueInput";
import { DealUpdateManyWithoutUsersInput } from "./DealUpdateManyWithoutUsersInput";
import { EmailResetUpdateManyWithoutUsersInput } from "./EmailResetUpdateManyWithoutUsersInput";
import { EmailSentUpdateManyWithoutUsersInput } from "./EmailSentUpdateManyWithoutUsersInput";
import { EmployeeWhereUniqueInput } from "../../employee/base/EmployeeWhereUniqueInput";
import { InviteUpdateManyWithoutUsersInput } from "./InviteUpdateManyWithoutUsersInput";
import { InvoiceEstimateHistoryUpdateManyWithoutUsersInput } from "./InvoiceEstimateHistoryUpdateManyWithoutUsersInput";
import { OrganizationTeamUpdateManyWithoutUsersInput } from "./OrganizationTeamUpdateManyWithoutUsersInput";
import { OrganizationTeamJoinRequestUpdateManyWithoutUsersInput } from "./OrganizationTeamJoinRequestUpdateManyWithoutUsersInput";
import { PaymentUpdateManyWithoutUsersInput } from "./PaymentUpdateManyWithoutUsersInput";
import { TagUserUpdateManyWithoutUsersInput } from "./TagUserUpdateManyWithoutUsersInput";
import { TaskUpdateManyWithoutUsersInput } from "./TaskUpdateManyWithoutUsersInput";
import { TimesheetUpdateManyWithoutUsersInput } from "./TimesheetUpdateManyWithoutUsersInput";
import { UserOrganizationUpdateManyWithoutUsersInput } from "./UserOrganizationUpdateManyWithoutUsersInput";

@InputType()
class UserUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  thirdPartyId?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  hash?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  imageUrl?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  preferredLanguage?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  refreshToken?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isActive?: boolean | null;

  @ApiProperty({
    required: false,
    enum: EnumUserPreferredComponentLayout,
  })
  @IsEnum(EnumUserPreferredComponentLayout)
  @IsOptional()
  @Field(() => EnumUserPreferredComponentLayout, {
    nullable: true,
  })
  preferredComponentLayout?: "CARDS_GRID" | "TABLE" | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  code?: number | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  codeExpireAt?: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  emailVerifiedAt?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  emailToken?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phoneNumber?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  timeZone?: string | null;

  @ApiProperty({
    required: false,
    type: () => ImageAssetWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ImageAssetWhereUniqueInput)
  @IsOptional()
  @Field(() => ImageAssetWhereUniqueInput, {
    nullable: true,
  })
  imageAsset?: ImageAssetWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenant?: TenantWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => RoleWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => RoleWhereUniqueInput)
  @IsOptional()
  @Field(() => RoleWhereUniqueInput, {
    nullable: true,
  })
  role?: RoleWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => CandidateWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CandidateWhereUniqueInput)
  @IsOptional()
  @Field(() => CandidateWhereUniqueInput, {
    nullable: true,
  })
  candidate?: CandidateWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => DealUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => DealUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => DealUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  deal?: DealUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => EmailResetUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => EmailResetUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => EmailResetUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  emailReset?: EmailResetUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => EmailSentUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => EmailSentUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => EmailSentUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  emailSent?: EmailSentUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => EmployeeWhereUniqueInput)
  @IsOptional()
  @Field(() => EmployeeWhereUniqueInput, {
    nullable: true,
  })
  employee?: EmployeeWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => InviteUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => InviteUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => InviteUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  inviteInviteInvitedByIdTouser?: InviteUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => InviteUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => InviteUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => InviteUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  inviteInviteUserIdTouser?: InviteUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => InvoiceEstimateHistoryUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => InvoiceEstimateHistoryUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => InvoiceEstimateHistoryUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  invoiceEstimateHistory?: InvoiceEstimateHistoryUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationTeamUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => OrganizationTeamUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => OrganizationTeamUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  organizationTeam?: OrganizationTeamUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationTeamJoinRequestUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => OrganizationTeamJoinRequestUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => OrganizationTeamJoinRequestUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  organizationTeamJoinRequest?: OrganizationTeamJoinRequestUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => PaymentUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => PaymentUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => PaymentUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  payment?: PaymentUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => TagUserUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => TagUserUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => TagUserUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  tagUser?: TagUserUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => TaskUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => TaskUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => TaskUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  task?: TaskUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => TimesheetUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => TimesheetUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => TimesheetUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  timesheet?: TimesheetUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => UserOrganizationUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => UserOrganizationUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => UserOrganizationUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  userOrganization?: UserOrganizationUpdateManyWithoutUsersInput;
}

export { UserUpdateInput as UserUpdateInput };
