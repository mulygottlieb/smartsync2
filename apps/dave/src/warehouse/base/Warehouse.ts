/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsDate,
  IsOptional,
  IsBoolean,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { Contact } from "../../contact/base/Contact";
import { Tenant } from "../../tenant/base/Tenant";
import { ImageAsset } from "../../imageAsset/base/ImageAsset";
import { Organization } from "../../organization/base/Organization";
import { TagWarehouse } from "../../tagWarehouse/base/TagWarehouse";
import { WarehouseMerchant } from "../../warehouseMerchant/base/WarehouseMerchant";
import { WarehouseProduct } from "../../warehouseProduct/base/WarehouseProduct";

@ObjectType()
class Warehouse {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  code!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  email!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description!: string | null;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  active!: boolean;

  @ApiProperty({
    required: false,
    type: () => Contact,
  })
  @ValidateNested()
  @Type(() => Contact)
  @IsOptional()
  contact?: Contact | null;

  @ApiProperty({
    required: false,
    type: () => Tenant,
  })
  @ValidateNested()
  @Type(() => Tenant)
  @IsOptional()
  tenant?: Tenant | null;

  @ApiProperty({
    required: false,
    type: () => ImageAsset,
  })
  @ValidateNested()
  @Type(() => ImageAsset)
  @IsOptional()
  imageAsset?: ImageAsset | null;

  @ApiProperty({
    required: false,
    type: () => Organization,
  })
  @ValidateNested()
  @Type(() => Organization)
  @IsOptional()
  organization?: Organization | null;

  @ApiProperty({
    required: false,
    type: () => [TagWarehouse],
  })
  @ValidateNested()
  @Type(() => TagWarehouse)
  @IsOptional()
  tagWarehouse?: Array<TagWarehouse>;

  @ApiProperty({
    required: false,
    type: () => [WarehouseMerchant],
  })
  @ValidateNested()
  @Type(() => WarehouseMerchant)
  @IsOptional()
  warehouseMerchant?: Array<WarehouseMerchant>;

  @ApiProperty({
    required: false,
    type: () => [WarehouseProduct],
  })
  @ValidateNested()
  @Type(() => WarehouseProduct)
  @IsOptional()
  warehouseProduct?: Array<WarehouseProduct>;
}

export { Warehouse as Warehouse };
